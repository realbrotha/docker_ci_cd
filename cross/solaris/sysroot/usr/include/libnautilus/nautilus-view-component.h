/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */
#ifndef nautilus_view_component_H
#define nautilus_view_component_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>
#ifdef __cplusplus
extern "C" {
#endif				/* __cplusplus */
   /** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(_Nautilus_URI_defined)
#define _Nautilus_URI_defined 1
   typedef CORBA_string Nautilus_URI;
#define Nautilus_URI_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define Nautilus_URI_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Nautilus_URI_0)
#define TC_IMPL_TC_Nautilus_URI_0 'n'
#define TC_IMPL_TC_Nautilus_URI_1 'a'
#define TC_IMPL_TC_Nautilus_URI_2 'u'
#define TC_IMPL_TC_Nautilus_URI_3 't'
#define TC_IMPL_TC_Nautilus_URI_4 'i'
#define TC_IMPL_TC_Nautilus_URI_5 'l'
#define TC_IMPL_TC_Nautilus_URI_6 'u'
#define TC_IMPL_TC_Nautilus_URI_7 's'
#define TC_IMPL_TC_Nautilus_URI_8 '_'
#define TC_IMPL_TC_Nautilus_URI_9 'v'
#define TC_IMPL_TC_Nautilus_URI_10 'i'
#define TC_IMPL_TC_Nautilus_URI_11 'e'
#define TC_IMPL_TC_Nautilus_URI_12 'w'
#define TC_IMPL_TC_Nautilus_URI_13 '_'
#define TC_IMPL_TC_Nautilus_URI_14 'c'
#define TC_IMPL_TC_Nautilus_URI_15 'o'
#define TC_IMPL_TC_Nautilus_URI_16 'm'
#define TC_IMPL_TC_Nautilus_URI_17 'p'
#define TC_IMPL_TC_Nautilus_URI_18 'o'
#define TC_IMPL_TC_Nautilus_URI_19 'n'
#define TC_IMPL_TC_Nautilus_URI_20 'e'
#define TC_IMPL_TC_Nautilus_URI_21 'n'
#define TC_IMPL_TC_Nautilus_URI_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_URI_struct;
#define TC_Nautilus_URI ((CORBA_TypeCode)&TC_Nautilus_URI_struct)
#endif
#define Nautilus_URI__alloc() ((Nautilus_URI *)ORBit_small_alloc (TC_CORBA_string))
#define Nautilus_URI__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_10 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_12 'w'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_13 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_14 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_15 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_16 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_17 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_18 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_19 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_20 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_21 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_22 't'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_10 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_12 'w'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_13 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_14 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_15 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_16 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_17 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_18 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_19 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_20 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_21 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Nautilus_URI)
#define ORBIT_DECL_CORBA_sequence_Nautilus_URI 1
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_0 'n'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_1 'a'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_2 'u'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_3 't'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_4 'i'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_5 'l'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_6 'u'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_7 's'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_8 '_'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_9 'v'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_10 'i'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_11 'e'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_12 'w'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_13 '_'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_14 'c'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_15 'o'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_16 'm'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_17 'p'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_18 'o'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_19 'n'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_20 'e'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_21 'n'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_URI_22 't'
#if !defined(_CORBA_sequence_Nautilus_URI_defined)
#define _CORBA_sequence_Nautilus_URI_defined 1
   typedef CORBA_sequence_CORBA_string CORBA_sequence_Nautilus_URI;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Nautilus_URI_0)
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_0 'n'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_1 'a'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_2 'u'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_3 't'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_4 'i'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_5 'l'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_6 'u'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_7 's'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_8 '_'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_9 'v'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_10 'i'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_11 'e'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_12 'w'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_13 '_'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_14 'c'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_15 'o'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_16 'm'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_17 'p'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_18 'o'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_19 'n'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_20 'e'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_21 'n'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_URI_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_Nautilus_URI_struct;
#define TC_CORBA_sequence_Nautilus_URI ((CORBA_TypeCode)&TC_CORBA_sequence_Nautilus_URI_struct)
#endif
#define CORBA_sequence_Nautilus_URI__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_Nautilus_URI__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_Nautilus_URI_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_Nautilus_URI_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_Nautilus_URI_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_Nautilus_URIList_defined)
#define _Nautilus_URIList_defined 1
   typedef CORBA_sequence_Nautilus_URI Nautilus_URIList;
#define Nautilus_URIList_marshal(x,y,z) CORBA_sequence_Nautilus_URI_marshal((x),(y),(z))
#define Nautilus_URIList_demarshal(x,y,z,i) CORBA_sequence_Nautilus_URI_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Nautilus_URIList_0)
#define TC_IMPL_TC_Nautilus_URIList_0 'n'
#define TC_IMPL_TC_Nautilus_URIList_1 'a'
#define TC_IMPL_TC_Nautilus_URIList_2 'u'
#define TC_IMPL_TC_Nautilus_URIList_3 't'
#define TC_IMPL_TC_Nautilus_URIList_4 'i'
#define TC_IMPL_TC_Nautilus_URIList_5 'l'
#define TC_IMPL_TC_Nautilus_URIList_6 'u'
#define TC_IMPL_TC_Nautilus_URIList_7 's'
#define TC_IMPL_TC_Nautilus_URIList_8 '_'
#define TC_IMPL_TC_Nautilus_URIList_9 'v'
#define TC_IMPL_TC_Nautilus_URIList_10 'i'
#define TC_IMPL_TC_Nautilus_URIList_11 'e'
#define TC_IMPL_TC_Nautilus_URIList_12 'w'
#define TC_IMPL_TC_Nautilus_URIList_13 '_'
#define TC_IMPL_TC_Nautilus_URIList_14 'c'
#define TC_IMPL_TC_Nautilus_URIList_15 'o'
#define TC_IMPL_TC_Nautilus_URIList_16 'm'
#define TC_IMPL_TC_Nautilus_URIList_17 'p'
#define TC_IMPL_TC_Nautilus_URIList_18 'o'
#define TC_IMPL_TC_Nautilus_URIList_19 'n'
#define TC_IMPL_TC_Nautilus_URIList_20 'e'
#define TC_IMPL_TC_Nautilus_URIList_21 'n'
#define TC_IMPL_TC_Nautilus_URIList_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_URIList_struct;
#define TC_Nautilus_URIList ((CORBA_TypeCode)&TC_Nautilus_URIList_struct)
#endif
#define Nautilus_URIList__alloc() ((Nautilus_URIList *)ORBit_small_alloc (TC_CORBA_sequence_Nautilus_URI))
#define Nautilus_URIList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Nautilus_URI,(m),(d))
#define Nautilus_URIList_allocbuf(l) ((Nautilus_URI*)ORBit_small_allocbuf (TC_CORBA_sequence_Nautilus_URI, (l)))
#endif
#if !defined(_Nautilus_HistoryItem_defined)
#define _Nautilus_HistoryItem_defined 1
   typedef struct Nautilus_HistoryItem_type Nautilus_HistoryItem;
   struct Nautilus_HistoryItem_type {
      CORBA_string title;
      Nautilus_URI location;
   };
#if !defined(TC_IMPL_TC_Nautilus_HistoryItem_0)
#define TC_IMPL_TC_Nautilus_HistoryItem_0 'n'
#define TC_IMPL_TC_Nautilus_HistoryItem_1 'a'
#define TC_IMPL_TC_Nautilus_HistoryItem_2 'u'
#define TC_IMPL_TC_Nautilus_HistoryItem_3 't'
#define TC_IMPL_TC_Nautilus_HistoryItem_4 'i'
#define TC_IMPL_TC_Nautilus_HistoryItem_5 'l'
#define TC_IMPL_TC_Nautilus_HistoryItem_6 'u'
#define TC_IMPL_TC_Nautilus_HistoryItem_7 's'
#define TC_IMPL_TC_Nautilus_HistoryItem_8 '_'
#define TC_IMPL_TC_Nautilus_HistoryItem_9 'v'
#define TC_IMPL_TC_Nautilus_HistoryItem_10 'i'
#define TC_IMPL_TC_Nautilus_HistoryItem_11 'e'
#define TC_IMPL_TC_Nautilus_HistoryItem_12 'w'
#define TC_IMPL_TC_Nautilus_HistoryItem_13 '_'
#define TC_IMPL_TC_Nautilus_HistoryItem_14 'c'
#define TC_IMPL_TC_Nautilus_HistoryItem_15 'o'
#define TC_IMPL_TC_Nautilus_HistoryItem_16 'm'
#define TC_IMPL_TC_Nautilus_HistoryItem_17 'p'
#define TC_IMPL_TC_Nautilus_HistoryItem_18 'o'
#define TC_IMPL_TC_Nautilus_HistoryItem_19 'n'
#define TC_IMPL_TC_Nautilus_HistoryItem_20 'e'
#define TC_IMPL_TC_Nautilus_HistoryItem_21 'n'
#define TC_IMPL_TC_Nautilus_HistoryItem_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_HistoryItem_struct;
#define TC_Nautilus_HistoryItem ((CORBA_TypeCode)&TC_Nautilus_HistoryItem_struct)
#endif
#define Nautilus_HistoryItem__alloc() ((Nautilus_HistoryItem *)ORBit_small_alloc (TC_Nautilus_HistoryItem))
#define Nautilus_HistoryItem__freekids(m,d) ORBit_small_freekids (TC_Nautilus_HistoryItem,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Nautilus_HistoryItem)
#define ORBIT_DECL_CORBA_sequence_Nautilus_HistoryItem 1
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_0 'n'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_1 'a'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_2 'u'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_3 't'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_4 'i'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_5 'l'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_6 'u'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_7 's'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_8 '_'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_9 'v'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_10 'i'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_11 'e'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_12 'w'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_13 '_'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_14 'c'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_15 'o'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_16 'm'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_17 'p'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_18 'o'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_19 'n'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_20 'e'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_21 'n'
#define ORBIT_IMPL_CORBA_sequence_Nautilus_HistoryItem_22 't'
#if !defined(_CORBA_sequence_Nautilus_HistoryItem_defined)
#define _CORBA_sequence_Nautilus_HistoryItem_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      Nautilus_HistoryItem *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_Nautilus_HistoryItem;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_0)
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_0 'n'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_1 'a'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_2 'u'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_3 't'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_4 'i'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_5 'l'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_6 'u'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_7 's'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_8 '_'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_9 'v'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_10 'i'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_11 'e'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_12 'w'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_13 '_'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_14 'c'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_15 'o'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_16 'm'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_17 'p'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_18 'o'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_19 'n'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_20 'e'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_21 'n'
#define TC_IMPL_TC_CORBA_sequence_Nautilus_HistoryItem_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_Nautilus_HistoryItem_struct;
#define TC_CORBA_sequence_Nautilus_HistoryItem ((CORBA_TypeCode)&TC_CORBA_sequence_Nautilus_HistoryItem_struct)
#endif
#define CORBA_sequence_Nautilus_HistoryItem__alloc() ((CORBA_sequence_Nautilus_HistoryItem *)ORBit_small_alloc (TC_CORBA_sequence_Nautilus_HistoryItem))
#define CORBA_sequence_Nautilus_HistoryItem__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Nautilus_HistoryItem,(m),(d))
#define CORBA_sequence_Nautilus_HistoryItem_allocbuf(l) ((Nautilus_HistoryItem*)ORBit_small_allocbuf (TC_CORBA_sequence_Nautilus_HistoryItem, (l)))
#define CORBA_sequence_Nautilus_HistoryItem_allocbuf(l) ((Nautilus_HistoryItem*)ORBit_small_allocbuf (TC_CORBA_sequence_Nautilus_HistoryItem, (l)))
#endif
#if !defined(_Nautilus_History_defined)
#define _Nautilus_History_defined 1
   typedef CORBA_sequence_Nautilus_HistoryItem Nautilus_History;
#define Nautilus_History_marshal(x,y,z) CORBA_sequence_Nautilus_HistoryItem_marshal((x),(y),(z))
#define Nautilus_History_demarshal(x,y,z,i) CORBA_sequence_Nautilus_HistoryItem_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Nautilus_History_0)
#define TC_IMPL_TC_Nautilus_History_0 'n'
#define TC_IMPL_TC_Nautilus_History_1 'a'
#define TC_IMPL_TC_Nautilus_History_2 'u'
#define TC_IMPL_TC_Nautilus_History_3 't'
#define TC_IMPL_TC_Nautilus_History_4 'i'
#define TC_IMPL_TC_Nautilus_History_5 'l'
#define TC_IMPL_TC_Nautilus_History_6 'u'
#define TC_IMPL_TC_Nautilus_History_7 's'
#define TC_IMPL_TC_Nautilus_History_8 '_'
#define TC_IMPL_TC_Nautilus_History_9 'v'
#define TC_IMPL_TC_Nautilus_History_10 'i'
#define TC_IMPL_TC_Nautilus_History_11 'e'
#define TC_IMPL_TC_Nautilus_History_12 'w'
#define TC_IMPL_TC_Nautilus_History_13 '_'
#define TC_IMPL_TC_Nautilus_History_14 'c'
#define TC_IMPL_TC_Nautilus_History_15 'o'
#define TC_IMPL_TC_Nautilus_History_16 'm'
#define TC_IMPL_TC_Nautilus_History_17 'p'
#define TC_IMPL_TC_Nautilus_History_18 'o'
#define TC_IMPL_TC_Nautilus_History_19 'n'
#define TC_IMPL_TC_Nautilus_History_20 'e'
#define TC_IMPL_TC_Nautilus_History_21 'n'
#define TC_IMPL_TC_Nautilus_History_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_History_struct;
#define TC_Nautilus_History ((CORBA_TypeCode)&TC_Nautilus_History_struct)
#endif
#define Nautilus_History__alloc() ((Nautilus_History *)ORBit_small_alloc (TC_CORBA_sequence_Nautilus_HistoryItem))
#define Nautilus_History__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Nautilus_HistoryItem,(m),(d))
#define Nautilus_History_allocbuf(l) ((Nautilus_HistoryItem*)ORBit_small_allocbuf (TC_CORBA_sequence_Nautilus_HistoryItem, (l)))
#endif
#if !defined(_Nautilus_WindowType_defined)
#define _Nautilus_WindowType_defined 1
   typedef enum {
      Nautilus_WINDOW_SPATIAL,
      Nautilus_WINDOW_NAVIGATION
   } Nautilus_WindowType;
#if !defined(TC_IMPL_TC_Nautilus_WindowType_0)
#define TC_IMPL_TC_Nautilus_WindowType_0 'n'
#define TC_IMPL_TC_Nautilus_WindowType_1 'a'
#define TC_IMPL_TC_Nautilus_WindowType_2 'u'
#define TC_IMPL_TC_Nautilus_WindowType_3 't'
#define TC_IMPL_TC_Nautilus_WindowType_4 'i'
#define TC_IMPL_TC_Nautilus_WindowType_5 'l'
#define TC_IMPL_TC_Nautilus_WindowType_6 'u'
#define TC_IMPL_TC_Nautilus_WindowType_7 's'
#define TC_IMPL_TC_Nautilus_WindowType_8 '_'
#define TC_IMPL_TC_Nautilus_WindowType_9 'v'
#define TC_IMPL_TC_Nautilus_WindowType_10 'i'
#define TC_IMPL_TC_Nautilus_WindowType_11 'e'
#define TC_IMPL_TC_Nautilus_WindowType_12 'w'
#define TC_IMPL_TC_Nautilus_WindowType_13 '_'
#define TC_IMPL_TC_Nautilus_WindowType_14 'c'
#define TC_IMPL_TC_Nautilus_WindowType_15 'o'
#define TC_IMPL_TC_Nautilus_WindowType_16 'm'
#define TC_IMPL_TC_Nautilus_WindowType_17 'p'
#define TC_IMPL_TC_Nautilus_WindowType_18 'o'
#define TC_IMPL_TC_Nautilus_WindowType_19 'n'
#define TC_IMPL_TC_Nautilus_WindowType_20 'e'
#define TC_IMPL_TC_Nautilus_WindowType_21 'n'
#define TC_IMPL_TC_Nautilus_WindowType_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_WindowType_struct;
#define TC_Nautilus_WindowType ((CORBA_TypeCode)&TC_Nautilus_WindowType_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Nautilus_View) && !defined(_Nautilus_View_defined)
#define ORBIT_DECL_Nautilus_View 1
#define _Nautilus_View_defined 1
#define Nautilus_View__freekids CORBA_Object__freekids
   typedef CORBA_Object Nautilus_View;
   extern CORBA_unsigned_long Nautilus_View__classid;
#if !defined(TC_IMPL_TC_Nautilus_View_0)
#define TC_IMPL_TC_Nautilus_View_0 'n'
#define TC_IMPL_TC_Nautilus_View_1 'a'
#define TC_IMPL_TC_Nautilus_View_2 'u'
#define TC_IMPL_TC_Nautilus_View_3 't'
#define TC_IMPL_TC_Nautilus_View_4 'i'
#define TC_IMPL_TC_Nautilus_View_5 'l'
#define TC_IMPL_TC_Nautilus_View_6 'u'
#define TC_IMPL_TC_Nautilus_View_7 's'
#define TC_IMPL_TC_Nautilus_View_8 '_'
#define TC_IMPL_TC_Nautilus_View_9 'v'
#define TC_IMPL_TC_Nautilus_View_10 'i'
#define TC_IMPL_TC_Nautilus_View_11 'e'
#define TC_IMPL_TC_Nautilus_View_12 'w'
#define TC_IMPL_TC_Nautilus_View_13 '_'
#define TC_IMPL_TC_Nautilus_View_14 'c'
#define TC_IMPL_TC_Nautilus_View_15 'o'
#define TC_IMPL_TC_Nautilus_View_16 'm'
#define TC_IMPL_TC_Nautilus_View_17 'p'
#define TC_IMPL_TC_Nautilus_View_18 'o'
#define TC_IMPL_TC_Nautilus_View_19 'n'
#define TC_IMPL_TC_Nautilus_View_20 'e'
#define TC_IMPL_TC_Nautilus_View_21 'n'
#define TC_IMPL_TC_Nautilus_View_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_View_struct;
#define TC_Nautilus_View ((CORBA_TypeCode)&TC_Nautilus_View_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Nautilus_ScrollPositionable) && !defined(_Nautilus_ScrollPositionable_defined)
#define ORBIT_DECL_Nautilus_ScrollPositionable 1
#define _Nautilus_ScrollPositionable_defined 1
#define Nautilus_ScrollPositionable__freekids CORBA_Object__freekids
   typedef CORBA_Object Nautilus_ScrollPositionable;
   extern CORBA_unsigned_long Nautilus_ScrollPositionable__classid;
#if !defined(TC_IMPL_TC_Nautilus_ScrollPositionable_0)
#define TC_IMPL_TC_Nautilus_ScrollPositionable_0 'n'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_1 'a'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_2 'u'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_3 't'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_4 'i'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_5 'l'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_6 'u'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_7 's'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_8 '_'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_9 'v'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_10 'i'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_11 'e'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_12 'w'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_13 '_'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_14 'c'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_15 'o'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_16 'm'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_17 'p'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_18 'o'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_19 'n'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_20 'e'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_21 'n'
#define TC_IMPL_TC_Nautilus_ScrollPositionable_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_ScrollPositionable_struct;
#define TC_Nautilus_ScrollPositionable ((CORBA_TypeCode)&TC_Nautilus_ScrollPositionable_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Nautilus_ViewFrame) && !defined(_Nautilus_ViewFrame_defined)
#define ORBIT_DECL_Nautilus_ViewFrame 1
#define _Nautilus_ViewFrame_defined 1
#define Nautilus_ViewFrame__freekids CORBA_Object__freekids
   typedef CORBA_Object Nautilus_ViewFrame;
   extern CORBA_unsigned_long Nautilus_ViewFrame__classid;
#if !defined(TC_IMPL_TC_Nautilus_ViewFrame_0)
#define TC_IMPL_TC_Nautilus_ViewFrame_0 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_1 'a'
#define TC_IMPL_TC_Nautilus_ViewFrame_2 'u'
#define TC_IMPL_TC_Nautilus_ViewFrame_3 't'
#define TC_IMPL_TC_Nautilus_ViewFrame_4 'i'
#define TC_IMPL_TC_Nautilus_ViewFrame_5 'l'
#define TC_IMPL_TC_Nautilus_ViewFrame_6 'u'
#define TC_IMPL_TC_Nautilus_ViewFrame_7 's'
#define TC_IMPL_TC_Nautilus_ViewFrame_8 '_'
#define TC_IMPL_TC_Nautilus_ViewFrame_9 'v'
#define TC_IMPL_TC_Nautilus_ViewFrame_10 'i'
#define TC_IMPL_TC_Nautilus_ViewFrame_11 'e'
#define TC_IMPL_TC_Nautilus_ViewFrame_12 'w'
#define TC_IMPL_TC_Nautilus_ViewFrame_13 '_'
#define TC_IMPL_TC_Nautilus_ViewFrame_14 'c'
#define TC_IMPL_TC_Nautilus_ViewFrame_15 'o'
#define TC_IMPL_TC_Nautilus_ViewFrame_16 'm'
#define TC_IMPL_TC_Nautilus_ViewFrame_17 'p'
#define TC_IMPL_TC_Nautilus_ViewFrame_18 'o'
#define TC_IMPL_TC_Nautilus_ViewFrame_19 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_20 'e'
#define TC_IMPL_TC_Nautilus_ViewFrame_21 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_ViewFrame_struct;
#define TC_Nautilus_ViewFrame ((CORBA_TypeCode)&TC_Nautilus_ViewFrame_struct)
#endif
#endif
#if !defined(_Nautilus_ViewFrame_OpenMode_defined)
#define _Nautilus_ViewFrame_OpenMode_defined 1
   typedef enum {
      Nautilus_ViewFrame_OPEN_ACCORDING_TO_MODE,
      Nautilus_ViewFrame_OPEN_IN_SPATIAL,
      Nautilus_ViewFrame_OPEN_IN_NAVIGATION
   } Nautilus_ViewFrame_OpenMode;
#if !defined(TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_0)
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_0 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_1 'a'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_2 'u'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_3 't'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_4 'i'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_5 'l'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_6 'u'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_7 's'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_8 '_'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_9 'v'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_10 'i'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_11 'e'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_12 'w'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_13 '_'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_14 'c'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_15 'o'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_16 'm'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_17 'p'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_18 'o'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_19 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_20 'e'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_21 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenMode_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_ViewFrame_OpenMode_struct;
#define TC_Nautilus_ViewFrame_OpenMode ((CORBA_TypeCode)&TC_Nautilus_ViewFrame_OpenMode_struct)
#endif
#endif
#if !defined(_Nautilus_ViewFrame_OpenFlags_defined)
#define _Nautilus_ViewFrame_OpenFlags_defined 1
   typedef CORBA_long Nautilus_ViewFrame_OpenFlags;
#define Nautilus_ViewFrame_OpenFlags_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Nautilus_ViewFrame_OpenFlags_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_0)
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_0 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_1 'a'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_2 'u'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_3 't'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_4 'i'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_5 'l'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_6 'u'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_7 's'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_8 '_'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_9 'v'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_10 'i'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_11 'e'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_12 'w'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_13 '_'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_14 'c'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_15 'o'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_16 'm'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_17 'p'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_18 'o'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_19 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_20 'e'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_21 'n'
#define TC_IMPL_TC_Nautilus_ViewFrame_OpenFlags_22 't'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_ViewFrame_OpenFlags_struct;
#define TC_Nautilus_ViewFrame_OpenFlags ((CORBA_TypeCode)&TC_Nautilus_ViewFrame_OpenFlags_struct)
#endif
#define Nautilus_ViewFrame_OpenFlags__alloc() ((Nautilus_ViewFrame_OpenFlags *)ORBit_small_alloc (TC_CORBA_long))
#define Nautilus_ViewFrame_OpenFlags__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef Nautilus_ViewFrame_OPEN_FLAG_CLOSE_BEHIND
#define Nautilus_ViewFrame_OPEN_FLAG_CLOSE_BEHIND 1
#endif				/* !Nautilus_ViewFrame_OPEN_FLAG_CLOSE_BEHIND */
   /** POA structures **/
#ifndef _defined_POA_Nautilus_View
#define _defined_POA_Nautilus_View 1
   typedef struct {
      void *_private;
      void (*load_location) (PortableServer_Servant _servant, const CORBA_char * location, CORBA_Environment * ev);
      void (*stop_loading) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_Nautilus_View__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Nautilus_View__epv *Nautilus_View_epv;
   } POA_Nautilus_View__vepv;
   typedef struct {
      void *_private;
      POA_Nautilus_View__vepv *vepv;
   } POA_Nautilus_View;
   extern void POA_Nautilus_View__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Nautilus_View__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_Nautilus_View */
#ifndef _defined_POA_Nautilus_ScrollPositionable
#define _defined_POA_Nautilus_ScrollPositionable 1
   typedef struct {
      void *_private;
       Nautilus_URI(*get_first_visible_file) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*scroll_to_file) (PortableServer_Servant _servant, const CORBA_char * position, CORBA_Environment * ev);
   } POA_Nautilus_ScrollPositionable__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Nautilus_ScrollPositionable__epv *Nautilus_ScrollPositionable_epv;
   } POA_Nautilus_ScrollPositionable__vepv;
   typedef struct {
      void *_private;
      POA_Nautilus_ScrollPositionable__vepv *vepv;
   } POA_Nautilus_ScrollPositionable;
   extern void POA_Nautilus_ScrollPositionable__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Nautilus_ScrollPositionable__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_Nautilus_ScrollPositionable */
#ifndef _defined_POA_Nautilus_ViewFrame
#define _defined_POA_Nautilus_ViewFrame 1
   typedef struct {
      void *_private;
      void (*open_location) (PortableServer_Servant _servant, const CORBA_char * location, const Nautilus_ViewFrame_OpenMode mode, const Nautilus_ViewFrame_OpenFlags flags, const Nautilus_URIList * selection, CORBA_Environment * ev);
      void (*report_location_change) (PortableServer_Servant _servant, const CORBA_char * location, const Nautilus_URIList * selection, const CORBA_char * title, CORBA_Environment * ev);
      void (*report_redirect) (PortableServer_Servant _servant, const CORBA_char * from_location, const CORBA_char * to_location, const Nautilus_URIList * selection, const CORBA_char * title, CORBA_Environment * ev);
      void (*report_selection_change) (PortableServer_Servant _servant, const Nautilus_URIList * selection, CORBA_Environment * ev);
      void (*report_status) (PortableServer_Servant _servant, const CORBA_char * status, CORBA_Environment * ev);
      void (*report_load_underway) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*report_load_progress) (PortableServer_Servant _servant, const CORBA_float fraction_done, CORBA_Environment * ev);
      void (*report_load_complete) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*report_load_failed) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*set_title) (PortableServer_Servant _servant, const CORBA_char * new_title, CORBA_Environment * ev);
      void (*go_back) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*close_window) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_Nautilus_ViewFrame__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Nautilus_ViewFrame__epv *Nautilus_ViewFrame_epv;
   } POA_Nautilus_ViewFrame__vepv;
   typedef struct {
      void *_private;
      POA_Nautilus_ViewFrame__vepv *vepv;
   } POA_Nautilus_ViewFrame;
   extern void POA_Nautilus_ViewFrame__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Nautilus_ViewFrame__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_Nautilus_ViewFrame */
   /** skel prototypes **/
   void _ORBIT_skel_small_Nautilus_View_load_location(POA_Nautilus_View * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_load_location) (PortableServer_Servant _servant, const CORBA_char * location, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_View_stop_loading(POA_Nautilus_View * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_stop_loading) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ScrollPositionable_get_first_visible_file(POA_Nautilus_ScrollPositionable * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Nautilus_URI(*_impl_get_first_visible_file) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ScrollPositionable_scroll_to_file(POA_Nautilus_ScrollPositionable * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_scroll_to_file) (PortableServer_Servant _servant, const CORBA_char * position, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_open_location(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_open_location) (PortableServer_Servant _servant, const CORBA_char * location, const Nautilus_ViewFrame_OpenMode mode, const Nautilus_ViewFrame_OpenFlags flags, const Nautilus_URIList * selection, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_location_change(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_location_change) (PortableServer_Servant _servant, const CORBA_char * location, const Nautilus_URIList * selection, const CORBA_char * title, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_redirect(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_redirect) (PortableServer_Servant _servant, const CORBA_char * from_location, const CORBA_char * to_location, const Nautilus_URIList * selection, const CORBA_char * title, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_selection_change(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_selection_change) (PortableServer_Servant _servant, const Nautilus_URIList * selection, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_status(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_status) (PortableServer_Servant _servant, const CORBA_char * status, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_load_underway(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_load_underway) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_load_progress(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_load_progress) (PortableServer_Servant _servant, const CORBA_float fraction_done, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_load_complete(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_load_complete) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_report_load_failed(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_report_load_failed) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_set_title(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_set_title) (PortableServer_Servant _servant, const CORBA_char * new_title, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_go_back(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_go_back) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_ViewFrame_close_window(POA_Nautilus_ViewFrame * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_close_window) (PortableServer_Servant _servant, CORBA_Environment * ev));
   /** stub prototypes **/
#define Nautilus_View_ref Bonobo_Unknown_ref
#define Nautilus_View_unref Bonobo_Unknown_unref
#define Nautilus_View_queryInterface Bonobo_Unknown_queryInterface
   void Nautilus_View_load_location(Nautilus_View _obj, const CORBA_char * location, CORBA_Environment * ev);
   void Nautilus_View_stop_loading(Nautilus_View _obj, CORBA_Environment * ev);
#define Nautilus_ScrollPositionable_ref Bonobo_Unknown_ref
#define Nautilus_ScrollPositionable_unref Bonobo_Unknown_unref
#define Nautilus_ScrollPositionable_queryInterface Bonobo_Unknown_queryInterface
   Nautilus_URI Nautilus_ScrollPositionable_get_first_visible_file(Nautilus_ScrollPositionable _obj, CORBA_Environment * ev);
   void Nautilus_ScrollPositionable_scroll_to_file(Nautilus_ScrollPositionable _obj, const CORBA_char * position, CORBA_Environment * ev);
#define Nautilus_ViewFrame_ref Bonobo_Unknown_ref
#define Nautilus_ViewFrame_unref Bonobo_Unknown_unref
#define Nautilus_ViewFrame_queryInterface Bonobo_Unknown_queryInterface
   void Nautilus_ViewFrame_open_location(Nautilus_ViewFrame _obj, const CORBA_char * location, const Nautilus_ViewFrame_OpenMode mode, const Nautilus_ViewFrame_OpenFlags flags, const Nautilus_URIList * selection, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_location_change(Nautilus_ViewFrame _obj, const CORBA_char * location, const Nautilus_URIList * selection, const CORBA_char * title, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_redirect(Nautilus_ViewFrame _obj, const CORBA_char * from_location, const CORBA_char * to_location, const Nautilus_URIList * selection, const CORBA_char * title, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_selection_change(Nautilus_ViewFrame _obj, const Nautilus_URIList * selection, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_status(Nautilus_ViewFrame _obj, const CORBA_char * status, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_load_underway(Nautilus_ViewFrame _obj, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_load_progress(Nautilus_ViewFrame _obj, const CORBA_float fraction_done, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_load_complete(Nautilus_ViewFrame _obj, CORBA_Environment * ev);
   void Nautilus_ViewFrame_report_load_failed(Nautilus_ViewFrame _obj, CORBA_Environment * ev);
   void Nautilus_ViewFrame_set_title(Nautilus_ViewFrame _obj, const CORBA_char * new_title, CORBA_Environment * ev);
   void Nautilus_ViewFrame_go_back(Nautilus_ViewFrame _obj, CORBA_Environment * ev);
   void Nautilus_ViewFrame_close_window(Nautilus_ViewFrame _obj, CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   ORBit_IInterface Nautilus_View__iinterface;
#define Nautilus_View_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   ORBit_IMethod Nautilus_View__imethods[Nautilus_View_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   ORBit_IInterface Nautilus_ScrollPositionable__iinterface;
#define Nautilus_ScrollPositionable_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   ORBit_IMethod Nautilus_ScrollPositionable__imethods[Nautilus_ScrollPositionable_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   ORBit_IInterface Nautilus_ViewFrame__iinterface;
#define Nautilus_ViewFrame_IMETHODS_LEN 12
#ifdef ORBIT_IDL_C_IMODULE_nautilus_view_component
   static
#else
   extern
#endif
   ORBit_IMethod Nautilus_ViewFrame__imethods[Nautilus_ViewFrame_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */
#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>
#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
