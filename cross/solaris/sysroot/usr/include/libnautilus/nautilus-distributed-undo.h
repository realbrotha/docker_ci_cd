/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */
#ifndef nautilus_distributed_undo_H
#define nautilus_distributed_undo_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>
#ifdef __cplusplus
extern "C" {
#endif				/* __cplusplus */
   /** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(_Nautilus_Undo_MenuItem_defined)
#define _Nautilus_Undo_MenuItem_defined 1
   typedef struct Nautilus_Undo_MenuItem_type Nautilus_Undo_MenuItem;
   struct Nautilus_Undo_MenuItem_type {
      CORBA_string label;
      CORBA_string hint;
   };
#if !defined(TC_IMPL_TC_Nautilus_Undo_MenuItem_0)
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_0 'n'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_1 'a'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_2 'u'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_3 't'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_4 'i'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_5 'l'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_6 'u'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_7 's'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_8 '_'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_9 'd'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_10 'i'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_11 's'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_12 't'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_13 'r'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_14 'i'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_15 'b'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_16 'u'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_17 't'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_18 'e'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_19 'd'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_20 '_'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_21 'u'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_22 'n'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_23 'd'
#define TC_IMPL_TC_Nautilus_Undo_MenuItem_24 'o'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_Undo_MenuItem_struct;
#define TC_Nautilus_Undo_MenuItem ((CORBA_TypeCode)&TC_Nautilus_Undo_MenuItem_struct)
#endif
#define Nautilus_Undo_MenuItem__alloc() ((Nautilus_Undo_MenuItem *)ORBit_small_alloc (TC_Nautilus_Undo_MenuItem))
#define Nautilus_Undo_MenuItem__freekids(m,d) ORBit_small_freekids (TC_Nautilus_Undo_MenuItem,(m),(d))
#endif
#if !defined(ORBIT_DECL_Nautilus_Undo_Transaction) && !defined(_Nautilus_Undo_Transaction_defined)
#define ORBIT_DECL_Nautilus_Undo_Transaction 1
#define _Nautilus_Undo_Transaction_defined 1
#define Nautilus_Undo_Transaction__freekids CORBA_Object__freekids
   typedef CORBA_Object Nautilus_Undo_Transaction;
   extern CORBA_unsigned_long Nautilus_Undo_Transaction__classid;
#if !defined(TC_IMPL_TC_Nautilus_Undo_Transaction_0)
#define TC_IMPL_TC_Nautilus_Undo_Transaction_0 'n'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_1 'a'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_2 'u'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_3 't'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_4 'i'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_5 'l'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_6 'u'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_7 's'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_8 '_'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_9 'd'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_10 'i'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_11 's'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_12 't'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_13 'r'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_14 'i'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_15 'b'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_16 'u'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_17 't'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_18 'e'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_19 'd'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_20 '_'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_21 'u'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_22 'n'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_23 'd'
#define TC_IMPL_TC_Nautilus_Undo_Transaction_24 'o'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_Undo_Transaction_struct;
#define TC_Nautilus_Undo_Transaction ((CORBA_TypeCode)&TC_Nautilus_Undo_Transaction_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Nautilus_Undo_Manager) && !defined(_Nautilus_Undo_Manager_defined)
#define ORBIT_DECL_Nautilus_Undo_Manager 1
#define _Nautilus_Undo_Manager_defined 1
#define Nautilus_Undo_Manager__freekids CORBA_Object__freekids
   typedef CORBA_Object Nautilus_Undo_Manager;
   extern CORBA_unsigned_long Nautilus_Undo_Manager__classid;
#if !defined(TC_IMPL_TC_Nautilus_Undo_Manager_0)
#define TC_IMPL_TC_Nautilus_Undo_Manager_0 'n'
#define TC_IMPL_TC_Nautilus_Undo_Manager_1 'a'
#define TC_IMPL_TC_Nautilus_Undo_Manager_2 'u'
#define TC_IMPL_TC_Nautilus_Undo_Manager_3 't'
#define TC_IMPL_TC_Nautilus_Undo_Manager_4 'i'
#define TC_IMPL_TC_Nautilus_Undo_Manager_5 'l'
#define TC_IMPL_TC_Nautilus_Undo_Manager_6 'u'
#define TC_IMPL_TC_Nautilus_Undo_Manager_7 's'
#define TC_IMPL_TC_Nautilus_Undo_Manager_8 '_'
#define TC_IMPL_TC_Nautilus_Undo_Manager_9 'd'
#define TC_IMPL_TC_Nautilus_Undo_Manager_10 'i'
#define TC_IMPL_TC_Nautilus_Undo_Manager_11 's'
#define TC_IMPL_TC_Nautilus_Undo_Manager_12 't'
#define TC_IMPL_TC_Nautilus_Undo_Manager_13 'r'
#define TC_IMPL_TC_Nautilus_Undo_Manager_14 'i'
#define TC_IMPL_TC_Nautilus_Undo_Manager_15 'b'
#define TC_IMPL_TC_Nautilus_Undo_Manager_16 'u'
#define TC_IMPL_TC_Nautilus_Undo_Manager_17 't'
#define TC_IMPL_TC_Nautilus_Undo_Manager_18 'e'
#define TC_IMPL_TC_Nautilus_Undo_Manager_19 'd'
#define TC_IMPL_TC_Nautilus_Undo_Manager_20 '_'
#define TC_IMPL_TC_Nautilus_Undo_Manager_21 'u'
#define TC_IMPL_TC_Nautilus_Undo_Manager_22 'n'
#define TC_IMPL_TC_Nautilus_Undo_Manager_23 'd'
#define TC_IMPL_TC_Nautilus_Undo_Manager_24 'o'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_Undo_Manager_struct;
#define TC_Nautilus_Undo_Manager ((CORBA_TypeCode)&TC_Nautilus_Undo_Manager_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Nautilus_Undo_Context) && !defined(_Nautilus_Undo_Context_defined)
#define ORBIT_DECL_Nautilus_Undo_Context 1
#define _Nautilus_Undo_Context_defined 1
#define Nautilus_Undo_Context__freekids CORBA_Object__freekids
   typedef CORBA_Object Nautilus_Undo_Context;
   extern CORBA_unsigned_long Nautilus_Undo_Context__classid;
#if !defined(TC_IMPL_TC_Nautilus_Undo_Context_0)
#define TC_IMPL_TC_Nautilus_Undo_Context_0 'n'
#define TC_IMPL_TC_Nautilus_Undo_Context_1 'a'
#define TC_IMPL_TC_Nautilus_Undo_Context_2 'u'
#define TC_IMPL_TC_Nautilus_Undo_Context_3 't'
#define TC_IMPL_TC_Nautilus_Undo_Context_4 'i'
#define TC_IMPL_TC_Nautilus_Undo_Context_5 'l'
#define TC_IMPL_TC_Nautilus_Undo_Context_6 'u'
#define TC_IMPL_TC_Nautilus_Undo_Context_7 's'
#define TC_IMPL_TC_Nautilus_Undo_Context_8 '_'
#define TC_IMPL_TC_Nautilus_Undo_Context_9 'd'
#define TC_IMPL_TC_Nautilus_Undo_Context_10 'i'
#define TC_IMPL_TC_Nautilus_Undo_Context_11 's'
#define TC_IMPL_TC_Nautilus_Undo_Context_12 't'
#define TC_IMPL_TC_Nautilus_Undo_Context_13 'r'
#define TC_IMPL_TC_Nautilus_Undo_Context_14 'i'
#define TC_IMPL_TC_Nautilus_Undo_Context_15 'b'
#define TC_IMPL_TC_Nautilus_Undo_Context_16 'u'
#define TC_IMPL_TC_Nautilus_Undo_Context_17 't'
#define TC_IMPL_TC_Nautilus_Undo_Context_18 'e'
#define TC_IMPL_TC_Nautilus_Undo_Context_19 'd'
#define TC_IMPL_TC_Nautilus_Undo_Context_20 '_'
#define TC_IMPL_TC_Nautilus_Undo_Context_21 'u'
#define TC_IMPL_TC_Nautilus_Undo_Context_22 'n'
#define TC_IMPL_TC_Nautilus_Undo_Context_23 'd'
#define TC_IMPL_TC_Nautilus_Undo_Context_24 'o'
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_Nautilus_Undo_Context_struct;
#define TC_Nautilus_Undo_Context ((CORBA_TypeCode)&TC_Nautilus_Undo_Context_struct)
#endif
#endif
   /** POA structures **/
#ifndef _defined_POA_Nautilus_Undo_Transaction
#define _defined_POA_Nautilus_Undo_Transaction 1
   typedef struct {
      void *_private;
      Nautilus_Undo_MenuItem *(*_get_undo_menu_item) (PortableServer_Servant _servant, CORBA_Environment * ev);
      Nautilus_Undo_MenuItem *(*_get_redo_menu_item) (PortableServer_Servant _servant, CORBA_Environment * ev);
       CORBA_string(*_get_operation_name) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*undo) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_Nautilus_Undo_Transaction__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Nautilus_Undo_Transaction__epv *Nautilus_Undo_Transaction_epv;
   } POA_Nautilus_Undo_Transaction__vepv;
   typedef struct {
      void *_private;
      POA_Nautilus_Undo_Transaction__vepv *vepv;
   } POA_Nautilus_Undo_Transaction;
   extern void POA_Nautilus_Undo_Transaction__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Nautilus_Undo_Transaction__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_Nautilus_Undo_Transaction */
#ifndef _defined_POA_Nautilus_Undo_Manager
#define _defined_POA_Nautilus_Undo_Manager 1
   typedef struct {
      void *_private;
      void (*append) (PortableServer_Servant _servant, const Nautilus_Undo_Transaction transaction, CORBA_Environment * ev);
      void (*forget) (PortableServer_Servant _servant, const Nautilus_Undo_Transaction transaction, CORBA_Environment * ev);
      void (*undo) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_Nautilus_Undo_Manager__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Nautilus_Undo_Manager__epv *Nautilus_Undo_Manager_epv;
   } POA_Nautilus_Undo_Manager__vepv;
   typedef struct {
      void *_private;
      POA_Nautilus_Undo_Manager__vepv *vepv;
   } POA_Nautilus_Undo_Manager;
   extern void POA_Nautilus_Undo_Manager__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Nautilus_Undo_Manager__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_Nautilus_Undo_Manager */
#ifndef _defined_POA_Nautilus_Undo_Context
#define _defined_POA_Nautilus_Undo_Context 1
   typedef struct {
      void *_private;
       Nautilus_Undo_Manager(*_get_undo_manager) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_Nautilus_Undo_Context__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Nautilus_Undo_Context__epv *Nautilus_Undo_Context_epv;
   } POA_Nautilus_Undo_Context__vepv;
   typedef struct {
      void *_private;
      POA_Nautilus_Undo_Context__vepv *vepv;
   } POA_Nautilus_Undo_Context;
   extern void POA_Nautilus_Undo_Context__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Nautilus_Undo_Context__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_Nautilus_Undo_Context */
   /** skel prototypes **/
   void _ORBIT_skel_small_Nautilus_Undo_Transaction__get_undo_menu_item(POA_Nautilus_Undo_Transaction * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Nautilus_Undo_MenuItem * (*_impl__get_undo_menu_item) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Transaction__get_redo_menu_item(POA_Nautilus_Undo_Transaction * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Nautilus_Undo_MenuItem * (*_impl__get_redo_menu_item) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Transaction__get_operation_name(POA_Nautilus_Undo_Transaction * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_string(*_impl__get_operation_name) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Transaction_undo(POA_Nautilus_Undo_Transaction * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_undo) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Manager_append(POA_Nautilus_Undo_Manager * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_append) (PortableServer_Servant _servant, const Nautilus_Undo_Transaction transaction, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Manager_forget(POA_Nautilus_Undo_Manager * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_forget) (PortableServer_Servant _servant, const Nautilus_Undo_Transaction transaction, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Manager_undo(POA_Nautilus_Undo_Manager * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_undo) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_Nautilus_Undo_Context__get_undo_manager(POA_Nautilus_Undo_Context * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Nautilus_Undo_Manager(*_impl__get_undo_manager) (PortableServer_Servant _servant, CORBA_Environment * ev));
   /** stub prototypes **/
#define Nautilus_Undo_Transaction_ref Bonobo_Unknown_ref
#define Nautilus_Undo_Transaction_unref Bonobo_Unknown_unref
#define Nautilus_Undo_Transaction_queryInterface Bonobo_Unknown_queryInterface
   Nautilus_Undo_MenuItem *Nautilus_Undo_Transaction__get_undo_menu_item(Nautilus_Undo_Transaction _obj, CORBA_Environment * ev);
   Nautilus_Undo_MenuItem *Nautilus_Undo_Transaction__get_redo_menu_item(Nautilus_Undo_Transaction _obj, CORBA_Environment * ev);
   CORBA_string Nautilus_Undo_Transaction__get_operation_name(Nautilus_Undo_Transaction _obj, CORBA_Environment * ev);
   void Nautilus_Undo_Transaction_undo(Nautilus_Undo_Transaction _obj, CORBA_Environment * ev);
#define Nautilus_Undo_Manager_ref Bonobo_Unknown_ref
#define Nautilus_Undo_Manager_unref Bonobo_Unknown_unref
#define Nautilus_Undo_Manager_queryInterface Bonobo_Unknown_queryInterface
   void Nautilus_Undo_Manager_append(Nautilus_Undo_Manager _obj, const Nautilus_Undo_Transaction transaction, CORBA_Environment * ev);
   void Nautilus_Undo_Manager_forget(Nautilus_Undo_Manager _obj, const Nautilus_Undo_Transaction transaction, CORBA_Environment * ev);
   void Nautilus_Undo_Manager_undo(Nautilus_Undo_Manager _obj, CORBA_Environment * ev);
#define Nautilus_Undo_Context_ref Bonobo_Unknown_ref
#define Nautilus_Undo_Context_unref Bonobo_Unknown_unref
#define Nautilus_Undo_Context_queryInterface Bonobo_Unknown_queryInterface
   Nautilus_Undo_Manager Nautilus_Undo_Context__get_undo_manager(Nautilus_Undo_Context _obj, CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   ORBit_IInterface Nautilus_Undo_Transaction__iinterface;
#define Nautilus_Undo_Transaction_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   ORBit_IMethod Nautilus_Undo_Transaction__imethods[Nautilus_Undo_Transaction_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   ORBit_IInterface Nautilus_Undo_Manager__iinterface;
#define Nautilus_Undo_Manager_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   ORBit_IMethod Nautilus_Undo_Manager__imethods[Nautilus_Undo_Manager_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   ORBit_IInterface Nautilus_Undo_Context__iinterface;
#define Nautilus_Undo_Context_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_nautilus_distributed_undo
   static
#else
   extern
#endif
   ORBit_IMethod Nautilus_Undo_Context__imethods[Nautilus_Undo_Context_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */
#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>
#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
