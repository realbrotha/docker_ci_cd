/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */
#ifndef GNOME_Evolution_Importer_H
#define GNOME_Evolution_Importer_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>
#ifdef __cplusplus
extern "C" {
#endif				/* __cplusplus */
   /** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(ORBIT_DECL_GNOME_Evolution_ImporterListener) && !defined(_GNOME_Evolution_ImporterListener_defined)
#define ORBIT_DECL_GNOME_Evolution_ImporterListener 1
#define _GNOME_Evolution_ImporterListener_defined 1
#define GNOME_Evolution_ImporterListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ImporterListener;
   extern CORBA_unsigned_long GNOME_Evolution_ImporterListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ImporterListener_0)
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_0 'G'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_1 'N'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_2 'O'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_3 'M'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_4 'E'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_5 '_'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_6 'E'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_7 'v'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_8 'o'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_9 'l'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_10 'u'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_11 't'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_12 'i'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_13 'o'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_14 'n'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_15 '_'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_16 'I'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_17 'm'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_18 'p'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_19 'o'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_20 'r'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_21 't'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_22 'e'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_23 'r'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ImporterListener_struct;
#define TC_GNOME_Evolution_ImporterListener ((CORBA_TypeCode)&TC_GNOME_Evolution_ImporterListener_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_ImporterListener_ImporterResult_defined)
#define _GNOME_Evolution_ImporterListener_ImporterResult_defined 1
   typedef enum {
      GNOME_Evolution_ImporterListener_OK,
      GNOME_Evolution_ImporterListener_UNSUPPORTED_OPERATION,
      GNOME_Evolution_ImporterListener_NOT_READY,
      GNOME_Evolution_ImporterListener_BUSY,
      GNOME_Evolution_ImporterListener_UNKNOWN_DATA,
      GNOME_Evolution_ImporterListener_BAD_DATA,
      GNOME_Evolution_ImporterListener_BAD_FILE
   } GNOME_Evolution_ImporterListener_ImporterResult;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_0)
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_0 'G'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_1 'N'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_2 'O'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_3 'M'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_4 'E'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_5 '_'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_6 'E'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_7 'v'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_8 'o'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_9 'l'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_10 'u'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_11 't'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_12 'i'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_13 'o'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_14 'n'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_15 '_'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_16 'I'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_17 'm'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_18 'p'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_19 'o'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_20 'r'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_21 't'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_22 'e'
#define TC_IMPL_TC_GNOME_Evolution_ImporterListener_ImporterResult_23 'r'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ImporterListener_ImporterResult_struct;
#define TC_GNOME_Evolution_ImporterListener_ImporterResult ((CORBA_TypeCode)&TC_GNOME_Evolution_ImporterListener_ImporterResult_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Importer) && !defined(_GNOME_Evolution_Importer_defined)
#define ORBIT_DECL_GNOME_Evolution_Importer 1
#define _GNOME_Evolution_Importer_defined 1
#define GNOME_Evolution_Importer__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Importer;
   extern CORBA_unsigned_long GNOME_Evolution_Importer__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Importer_0)
#define TC_IMPL_TC_GNOME_Evolution_Importer_0 'G'
#define TC_IMPL_TC_GNOME_Evolution_Importer_1 'N'
#define TC_IMPL_TC_GNOME_Evolution_Importer_2 'O'
#define TC_IMPL_TC_GNOME_Evolution_Importer_3 'M'
#define TC_IMPL_TC_GNOME_Evolution_Importer_4 'E'
#define TC_IMPL_TC_GNOME_Evolution_Importer_5 '_'
#define TC_IMPL_TC_GNOME_Evolution_Importer_6 'E'
#define TC_IMPL_TC_GNOME_Evolution_Importer_7 'v'
#define TC_IMPL_TC_GNOME_Evolution_Importer_8 'o'
#define TC_IMPL_TC_GNOME_Evolution_Importer_9 'l'
#define TC_IMPL_TC_GNOME_Evolution_Importer_10 'u'
#define TC_IMPL_TC_GNOME_Evolution_Importer_11 't'
#define TC_IMPL_TC_GNOME_Evolution_Importer_12 'i'
#define TC_IMPL_TC_GNOME_Evolution_Importer_13 'o'
#define TC_IMPL_TC_GNOME_Evolution_Importer_14 'n'
#define TC_IMPL_TC_GNOME_Evolution_Importer_15 '_'
#define TC_IMPL_TC_GNOME_Evolution_Importer_16 'I'
#define TC_IMPL_TC_GNOME_Evolution_Importer_17 'm'
#define TC_IMPL_TC_GNOME_Evolution_Importer_18 'p'
#define TC_IMPL_TC_GNOME_Evolution_Importer_19 'o'
#define TC_IMPL_TC_GNOME_Evolution_Importer_20 'r'
#define TC_IMPL_TC_GNOME_Evolution_Importer_21 't'
#define TC_IMPL_TC_GNOME_Evolution_Importer_22 'e'
#define TC_IMPL_TC_GNOME_Evolution_Importer_23 'r'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Importer_struct;
#define TC_GNOME_Evolution_Importer ((CORBA_TypeCode)&TC_GNOME_Evolution_Importer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_IntelligentImporter) && !defined(_GNOME_Evolution_IntelligentImporter_defined)
#define ORBIT_DECL_GNOME_Evolution_IntelligentImporter 1
#define _GNOME_Evolution_IntelligentImporter_defined 1
#define GNOME_Evolution_IntelligentImporter__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_IntelligentImporter;
   extern CORBA_unsigned_long GNOME_Evolution_IntelligentImporter__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_0)
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_0 'G'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_1 'N'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_2 'O'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_3 'M'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_4 'E'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_5 '_'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_6 'E'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_7 'v'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_8 'o'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_9 'l'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_10 'u'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_11 't'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_12 'i'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_13 'o'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_14 'n'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_15 '_'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_16 'I'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_17 'm'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_18 'p'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_19 'o'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_20 'r'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_21 't'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_22 'e'
#define TC_IMPL_TC_GNOME_Evolution_IntelligentImporter_23 'r'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_IntelligentImporter_struct;
#define TC_GNOME_Evolution_IntelligentImporter ((CORBA_TypeCode)&TC_GNOME_Evolution_IntelligentImporter_struct)
#endif
#endif
   /** POA structures **/
#ifndef _defined_POA_GNOME_Evolution_ImporterListener
#define _defined_POA_GNOME_Evolution_ImporterListener 1
   typedef struct {
      void *_private;
      void (*notifyResult) (PortableServer_Servant _servant, const GNOME_Evolution_ImporterListener_ImporterResult result, const CORBA_boolean more_items, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ImporterListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_ImporterListener__epv *GNOME_Evolution_ImporterListener_epv;
   } POA_GNOME_Evolution_ImporterListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ImporterListener__vepv *vepv;
   } POA_GNOME_Evolution_ImporterListener;
   extern void POA_GNOME_Evolution_ImporterListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ImporterListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ImporterListen
				 * er */
#ifndef _defined_POA_GNOME_Evolution_Importer
#define _defined_POA_GNOME_Evolution_Importer 1
   typedef struct {
      void *_private;
      void (*processItem) (PortableServer_Servant _servant, const GNOME_Evolution_ImporterListener listener, CORBA_Environment * ev);
       CORBA_string(*getError) (PortableServer_Servant _servant, CORBA_Environment * ev);
       CORBA_boolean(*supportFormat) (PortableServer_Servant _servant, const CORBA_char * filename, CORBA_Environment * ev);
       CORBA_boolean(*loadFile) (PortableServer_Servant _servant, const CORBA_char * filename, const CORBA_char * folderpath, const CORBA_char * foldertype, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Importer__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Importer__epv *GNOME_Evolution_Importer_epv;
   } POA_GNOME_Evolution_Importer__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Importer__vepv *vepv;
   } POA_GNOME_Evolution_Importer;
   extern void POA_GNOME_Evolution_Importer__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Importer__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Importer */
#ifndef _defined_POA_GNOME_Evolution_IntelligentImporter
#define _defined_POA_GNOME_Evolution_IntelligentImporter 1
   typedef struct {
      void *_private;
       CORBA_string(*_get_importername) (PortableServer_Servant _servant, CORBA_Environment * ev);
       CORBA_string(*_get_message) (PortableServer_Servant _servant, CORBA_Environment * ev);
       CORBA_boolean(*canImport) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*importData) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_GNOME_Evolution_IntelligentImporter__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_IntelligentImporter__epv *GNOME_Evolution_IntelligentImporter_epv;
   } POA_GNOME_Evolution_IntelligentImporter__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_IntelligentImporter__vepv *vepv;
   } POA_GNOME_Evolution_IntelligentImporter;
   extern void POA_GNOME_Evolution_IntelligentImporter__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_IntelligentImporter__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_IntelligentImp
				 * orter */
   /** skel prototypes **/
   void _ORBIT_skel_small_GNOME_Evolution_ImporterListener_notifyResult(POA_GNOME_Evolution_ImporterListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyResult) (PortableServer_Servant _servant, const GNOME_Evolution_ImporterListener_ImporterResult result, const CORBA_boolean more_items, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Importer_processItem(POA_GNOME_Evolution_Importer * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_processItem) (PortableServer_Servant _servant, const GNOME_Evolution_ImporterListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Importer_getError(POA_GNOME_Evolution_Importer * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_string(*_impl_getError) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Importer_supportFormat(POA_GNOME_Evolution_Importer * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl_supportFormat) (PortableServer_Servant _servant, const CORBA_char * filename, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Importer_loadFile(POA_GNOME_Evolution_Importer * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl_loadFile) (PortableServer_Servant _servant, const CORBA_char * filename, const CORBA_char * folderpath, const CORBA_char * foldertype, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_IntelligentImporter__get_importername(POA_GNOME_Evolution_IntelligentImporter * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_string(*_impl__get_importername) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_IntelligentImporter__get_message(POA_GNOME_Evolution_IntelligentImporter * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_string(*_impl__get_message) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_IntelligentImporter_canImport(POA_GNOME_Evolution_IntelligentImporter * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl_canImport) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_IntelligentImporter_importData(POA_GNOME_Evolution_IntelligentImporter * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_importData) (PortableServer_Servant _servant, CORBA_Environment * ev));
   /** stub prototypes **/
#define GNOME_Evolution_ImporterListener_ref Bonobo_Unknown_ref
#define GNOME_Evolution_ImporterListener_unref Bonobo_Unknown_unref
#define GNOME_Evolution_ImporterListener_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_ImporterListener_notifyResult(GNOME_Evolution_ImporterListener _obj, const GNOME_Evolution_ImporterListener_ImporterResult result, const CORBA_boolean more_items, CORBA_Environment * ev);
#define GNOME_Evolution_Importer_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Importer_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Importer_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_Importer_processItem(GNOME_Evolution_Importer _obj, const GNOME_Evolution_ImporterListener listener, CORBA_Environment * ev);
   CORBA_string GNOME_Evolution_Importer_getError(GNOME_Evolution_Importer _obj, CORBA_Environment * ev);
   CORBA_boolean GNOME_Evolution_Importer_supportFormat(GNOME_Evolution_Importer _obj, const CORBA_char * filename, CORBA_Environment * ev);
   CORBA_boolean GNOME_Evolution_Importer_loadFile(GNOME_Evolution_Importer _obj, const CORBA_char * filename, const CORBA_char * folderpath, const CORBA_char * foldertype, CORBA_Environment * ev);
#define GNOME_Evolution_IntelligentImporter_ref Bonobo_Unknown_ref
#define GNOME_Evolution_IntelligentImporter_unref Bonobo_Unknown_unref
#define GNOME_Evolution_IntelligentImporter_queryInterface Bonobo_Unknown_queryInterface
   CORBA_string GNOME_Evolution_IntelligentImporter__get_importername(GNOME_Evolution_IntelligentImporter _obj, CORBA_Environment * ev);
   CORBA_string GNOME_Evolution_IntelligentImporter__get_message(GNOME_Evolution_IntelligentImporter _obj, CORBA_Environment * ev);
   CORBA_boolean GNOME_Evolution_IntelligentImporter_canImport(GNOME_Evolution_IntelligentImporter _obj, CORBA_Environment * ev);
   void GNOME_Evolution_IntelligentImporter_importData(GNOME_Evolution_IntelligentImporter _obj, CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ImporterListener__iinterface;
#define GNOME_Evolution_ImporterListener_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ImporterListener__imethods[GNOME_Evolution_ImporterListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Importer__iinterface;
#define GNOME_Evolution_Importer_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Importer__imethods[GNOME_Evolution_Importer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_IntelligentImporter__iinterface;
#define GNOME_Evolution_IntelligentImporter_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Evolution_Importer
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_IntelligentImporter__imethods[GNOME_Evolution_IntelligentImporter_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */
#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>
#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
