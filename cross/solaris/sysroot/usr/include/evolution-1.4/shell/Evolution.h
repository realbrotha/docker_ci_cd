/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */
#ifndef Evolution_H
#define Evolution_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>
#ifdef __cplusplus
extern "C" {
#endif				/* __cplusplus */
   /** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(_GNOME_Evolution_Folder_defined)
#define _GNOME_Evolution_Folder_defined 1
   typedef struct GNOME_Evolution_Folder_type GNOME_Evolution_Folder;
   struct GNOME_Evolution_Folder_type {
      CORBA_string type;
      CORBA_string description;
      CORBA_string displayName;
      CORBA_string physicalUri;
      CORBA_string evolutionUri;
      CORBA_string customIconName;
      CORBA_long unreadCount;
      CORBA_boolean canSyncOffline;
      CORBA_short sortingPriority;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Folder_0)
#define TC_IMPL_TC_GNOME_Evolution_Folder_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Folder_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Folder_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Folder_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Folder_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Folder_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Folder_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Folder_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Folder_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Folder_struct;
#define TC_GNOME_Evolution_Folder ((CORBA_TypeCode)&TC_GNOME_Evolution_Folder_struct)
#endif
#define GNOME_Evolution_Folder__alloc() ((GNOME_Evolution_Folder *)ORBit_small_alloc (TC_GNOME_Evolution_Folder))
#define GNOME_Evolution_Folder__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Folder,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Folder)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Folder 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Folder_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Folder_defined)
#define _CORBA_sequence_GNOME_Evolution_Folder_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Folder *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Folder;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Folder_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Folder_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Folder ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Folder_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Folder__alloc() ((CORBA_sequence_GNOME_Evolution_Folder *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Folder))
#define CORBA_sequence_GNOME_Evolution_Folder__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Folder,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Folder_allocbuf(l) ((GNOME_Evolution_Folder*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Folder, (l)))
#define CORBA_sequence_GNOME_Evolution_Folder_allocbuf(l) ((GNOME_Evolution_Folder*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Folder, (l)))
#endif
#if !defined(_GNOME_Evolution_FolderList_defined)
#define _GNOME_Evolution_FolderList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Folder GNOME_Evolution_FolderList;
#define GNOME_Evolution_FolderList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Folder_marshal((x),(y),(z))
#define GNOME_Evolution_FolderList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Folder_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_FolderList_0)
#define TC_IMPL_TC_GNOME_Evolution_FolderList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_FolderList_struct;
#define TC_GNOME_Evolution_FolderList ((CORBA_TypeCode)&TC_GNOME_Evolution_FolderList_struct)
#endif
#define GNOME_Evolution_FolderList__alloc() ((GNOME_Evolution_FolderList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Folder))
#define GNOME_Evolution_FolderList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Folder,(m),(d))
#define GNOME_Evolution_FolderList_allocbuf(l) ((GNOME_Evolution_Folder*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Folder, (l)))
#endif
#if !defined(_GNOME_Evolution_Icon_defined)
#define _GNOME_Evolution_Icon_defined 1
   typedef struct GNOME_Evolution_Icon_type GNOME_Evolution_Icon;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_8 'n'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_octet *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
   struct GNOME_Evolution_Icon_type {
      CORBA_short width;
      CORBA_short height;
      CORBA_boolean hasAlpha;
      CORBA_sequence_CORBA_octet rgbaData;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Icon_0)
#define TC_IMPL_TC_GNOME_Evolution_Icon_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Icon_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Icon_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Icon_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Icon_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Icon_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Icon_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Icon_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Icon_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Icon_struct;
#define TC_GNOME_Evolution_Icon ((CORBA_TypeCode)&TC_GNOME_Evolution_Icon_struct)
#endif
#define GNOME_Evolution_Icon__alloc() ((GNOME_Evolution_Icon *)ORBit_small_alloc (TC_GNOME_Evolution_Icon))
#define GNOME_Evolution_Icon__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Icon,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Icon)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Icon 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Icon_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Icon_defined)
#define _CORBA_sequence_GNOME_Evolution_Icon_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Icon *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Icon;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Icon_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Icon_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Icon ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Icon_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Icon__alloc() ((CORBA_sequence_GNOME_Evolution_Icon *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Icon))
#define CORBA_sequence_GNOME_Evolution_Icon__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Icon,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Icon_allocbuf(l) ((GNOME_Evolution_Icon*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Icon, (l)))
#define CORBA_sequence_GNOME_Evolution_Icon_allocbuf(l) ((GNOME_Evolution_Icon*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Icon, (l)))
#endif
#if !defined(_GNOME_Evolution_AnimatedIcon_defined)
#define _GNOME_Evolution_AnimatedIcon_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Icon GNOME_Evolution_AnimatedIcon;
#define GNOME_Evolution_AnimatedIcon_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Icon_marshal((x),(y),(z))
#define GNOME_Evolution_AnimatedIcon_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Icon_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_0)
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_5 't'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_AnimatedIcon_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_AnimatedIcon_struct;
#define TC_GNOME_Evolution_AnimatedIcon ((CORBA_TypeCode)&TC_GNOME_Evolution_AnimatedIcon_struct)
#endif
#define GNOME_Evolution_AnimatedIcon__alloc() ((GNOME_Evolution_AnimatedIcon *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Icon))
#define GNOME_Evolution_AnimatedIcon__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Icon,(m),(d))
#define GNOME_Evolution_AnimatedIcon_allocbuf(l) ((GNOME_Evolution_Icon*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Icon, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Activity) && !defined(_GNOME_Evolution_Activity_defined)
#define ORBIT_DECL_GNOME_Evolution_Activity 1
#define _GNOME_Evolution_Activity_defined 1
#define GNOME_Evolution_Activity__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Activity;
   extern CORBA_unsigned_long GNOME_Evolution_Activity__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Activity_0)
#define TC_IMPL_TC_GNOME_Evolution_Activity_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Activity_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Activity_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Activity_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Activity_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Activity_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Activity_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Activity_struct;
#define TC_GNOME_Evolution_Activity ((CORBA_TypeCode)&TC_GNOME_Evolution_Activity_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_Activity_ActivityId_defined)
#define _GNOME_Evolution_Activity_ActivityId_defined 1
   typedef CORBA_long GNOME_Evolution_Activity_ActivityId;
#define GNOME_Evolution_Activity_ActivityId_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define GNOME_Evolution_Activity_ActivityId_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_0)
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_ActivityId_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Activity_ActivityId_struct;
#define TC_GNOME_Evolution_Activity_ActivityId ((CORBA_TypeCode)&TC_GNOME_Evolution_Activity_ActivityId_struct)
#endif
#define GNOME_Evolution_Activity_ActivityId__alloc() ((GNOME_Evolution_Activity_ActivityId *)ORBit_small_alloc (TC_CORBA_long))
#define GNOME_Evolution_Activity_ActivityId__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#if !defined(_GNOME_Evolution_Activity_DialogType_defined)
#define _GNOME_Evolution_Activity_DialogType_defined 1
   typedef enum {
      GNOME_Evolution_Activity_DIALOG_TYPE_NONE,
      GNOME_Evolution_Activity_DIALOG_TYPE_MESSAGE,
      GNOME_Evolution_Activity_DIALOG_TYPE_WARNING,
      GNOME_Evolution_Activity_DIALOG_TYPE_INPUT,
      GNOME_Evolution_Activity_DIALOG_TYPE_ERROR
   } GNOME_Evolution_Activity_DialogType;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_0)
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Activity_DialogType_struct;
#define TC_GNOME_Evolution_Activity_DialogType ((CORBA_TypeCode)&TC_GNOME_Evolution_Activity_DialogType_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_Activity_DialogAction_defined)
#define _GNOME_Evolution_Activity_DialogAction_defined 1
   typedef enum {
      GNOME_Evolution_Activity_DIALOG_ACTION_ERROR,
      GNOME_Evolution_Activity_DIALOG_ACTION_DISPLAY,
      GNOME_Evolution_Activity_DIALOG_ACTION_POSTPONE
   } GNOME_Evolution_Activity_DialogAction;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_0)
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_DialogAction_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Activity_DialogAction_struct;
#define TC_GNOME_Evolution_Activity_DialogAction ((CORBA_TypeCode)&TC_GNOME_Evolution_Activity_DialogAction_struct)
#endif
#endif
#undef ex_GNOME_Evolution_Activity_InvalidIcon
#define ex_GNOME_Evolution_Activity_InvalidIcon "IDL:GNOME/Evolution/Activity/InvalidIcon:1.0"
#if !defined(_GNOME_Evolution_Activity_InvalidIcon_defined)
#define _GNOME_Evolution_Activity_InvalidIcon_defined 1
   typedef struct GNOME_Evolution_Activity_InvalidIcon_type GNOME_Evolution_Activity_InvalidIcon;
   struct GNOME_Evolution_Activity_InvalidIcon_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_0)
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_InvalidIcon_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Activity_InvalidIcon_struct;
#define TC_GNOME_Evolution_Activity_InvalidIcon ((CORBA_TypeCode)&TC_GNOME_Evolution_Activity_InvalidIcon_struct)
#endif
#define GNOME_Evolution_Activity_InvalidIcon__alloc() ((GNOME_Evolution_Activity_InvalidIcon *)ORBit_small_alloc (TC_GNOME_Evolution_Activity_InvalidIcon))
#define GNOME_Evolution_Activity_InvalidIcon__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Activity_InvalidIcon,(m),(d))
#endif
#undef ex_GNOME_Evolution_Activity_IdNotFound
#define ex_GNOME_Evolution_Activity_IdNotFound "IDL:GNOME/Evolution/Activity/IdNotFound:1.0"
#if !defined(_GNOME_Evolution_Activity_IdNotFound_defined)
#define _GNOME_Evolution_Activity_IdNotFound_defined 1
   typedef struct GNOME_Evolution_Activity_IdNotFound_type GNOME_Evolution_Activity_IdNotFound;
   struct GNOME_Evolution_Activity_IdNotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Activity_IdNotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Activity_IdNotFound_struct;
#define TC_GNOME_Evolution_Activity_IdNotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_Activity_IdNotFound_struct)
#endif
#define GNOME_Evolution_Activity_IdNotFound__alloc() ((GNOME_Evolution_Activity_IdNotFound *)ORBit_small_alloc (TC_GNOME_Evolution_Activity_IdNotFound))
#define GNOME_Evolution_Activity_IdNotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Activity_IdNotFound,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ConfigControl) && !defined(_GNOME_Evolution_ConfigControl_defined)
#define ORBIT_DECL_GNOME_Evolution_ConfigControl 1
#define _GNOME_Evolution_ConfigControl_defined 1
#define GNOME_Evolution_ConfigControl__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ConfigControl;
   extern CORBA_unsigned_long GNOME_Evolution_ConfigControl__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ConfigControl_0)
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ConfigControl_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ConfigControl_struct;
#define TC_GNOME_Evolution_ConfigControl ((CORBA_TypeCode)&TC_GNOME_Evolution_ConfigControl_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Session) && !defined(_GNOME_Evolution_Session_defined)
#define ORBIT_DECL_GNOME_Evolution_Session 1
#define _GNOME_Evolution_Session_defined 1
#define GNOME_Evolution_Session__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Session;
   extern CORBA_unsigned_long GNOME_Evolution_Session__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Session_0)
#define TC_IMPL_TC_GNOME_Evolution_Session_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Session_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Session_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Session_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Session_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Session_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Session_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Session_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Session_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Session_struct;
#define TC_GNOME_Evolution_Session ((CORBA_TypeCode)&TC_GNOME_Evolution_Session_struct)
#endif
#endif
#undef ex_GNOME_Evolution_Session_Failed
#define ex_GNOME_Evolution_Session_Failed "IDL:GNOME/Evolution/Session/Failed:1.0"
#if !defined(_GNOME_Evolution_Session_Failed_defined)
#define _GNOME_Evolution_Session_Failed_defined 1
   typedef struct GNOME_Evolution_Session_Failed_type GNOME_Evolution_Session_Failed;
   struct GNOME_Evolution_Session_Failed_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Session_Failed_0)
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Session_Failed_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Session_Failed_struct;
#define TC_GNOME_Evolution_Session_Failed ((CORBA_TypeCode)&TC_GNOME_Evolution_Session_Failed_struct)
#endif
#define GNOME_Evolution_Session_Failed__alloc() ((GNOME_Evolution_Session_Failed *)ORBit_small_alloc (TC_GNOME_Evolution_Session_Failed))
#define GNOME_Evolution_Session_Failed__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Session_Failed,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Shell) && !defined(_GNOME_Evolution_Shell_defined)
#define ORBIT_DECL_GNOME_Evolution_Shell 1
#define _GNOME_Evolution_Shell_defined 1
#define GNOME_Evolution_Shell__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Shell;
   extern CORBA_unsigned_long GNOME_Evolution_Shell__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_struct;
#define TC_GNOME_Evolution_Shell ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_URISchema_defined)
#define _GNOME_Evolution_URISchema_defined 1
   typedef CORBA_string GNOME_Evolution_URISchema;
#define GNOME_Evolution_URISchema_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define GNOME_Evolution_URISchema_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_URISchema_0)
#define TC_IMPL_TC_GNOME_Evolution_URISchema_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_5 't'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_URISchema_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_URISchema_struct;
#define TC_GNOME_Evolution_URISchema ((CORBA_TypeCode)&TC_GNOME_Evolution_URISchema_struct)
#endif
#define GNOME_Evolution_URISchema__alloc() ((GNOME_Evolution_URISchema *)ORBit_small_alloc (TC_CORBA_string))
#define GNOME_Evolution_URISchema__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_URISchema)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_URISchema 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_URISchema_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_URISchema_defined)
#define _CORBA_sequence_GNOME_Evolution_URISchema_defined 1
   typedef CORBA_sequence_CORBA_string CORBA_sequence_GNOME_Evolution_URISchema;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_URISchema_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_URISchema_struct;
#define TC_CORBA_sequence_GNOME_Evolution_URISchema ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_URISchema_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_URISchema__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_GNOME_Evolution_URISchema__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_GNOME_Evolution_URISchema_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_GNOME_Evolution_URISchema_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_GNOME_Evolution_URISchema_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_GNOME_Evolution_URISchemaList_defined)
#define _GNOME_Evolution_URISchemaList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_URISchema GNOME_Evolution_URISchemaList;
#define GNOME_Evolution_URISchemaList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_URISchema_marshal((x),(y),(z))
#define GNOME_Evolution_URISchemaList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_URISchema_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_URISchemaList_0)
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_URISchemaList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_URISchemaList_struct;
#define TC_GNOME_Evolution_URISchemaList ((CORBA_TypeCode)&TC_GNOME_Evolution_URISchemaList_struct)
#endif
#define GNOME_Evolution_URISchemaList__alloc() ((GNOME_Evolution_URISchemaList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_URISchema))
#define GNOME_Evolution_URISchemaList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_URISchema,(m),(d))
#define GNOME_Evolution_URISchemaList_allocbuf(l) ((GNOME_Evolution_URISchema*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_URISchema, (l)))
#endif
#if !defined(_GNOME_Evolution_UserCreatableItemType_defined)
#define _GNOME_Evolution_UserCreatableItemType_defined 1
   typedef struct GNOME_Evolution_UserCreatableItemType_type GNOME_Evolution_UserCreatableItemType;
   struct GNOME_Evolution_UserCreatableItemType_type {
      CORBA_string id;
      CORBA_string description;
      CORBA_string menuDescription;
      CORBA_string tooltip;
      CORBA_char menuShortcut;
      GNOME_Evolution_Icon icon;
      CORBA_string folderType;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_0)
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_5 't'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_UserCreatableItemType_struct;
#define TC_GNOME_Evolution_UserCreatableItemType ((CORBA_TypeCode)&TC_GNOME_Evolution_UserCreatableItemType_struct)
#endif
#define GNOME_Evolution_UserCreatableItemType__alloc() ((GNOME_Evolution_UserCreatableItemType *)ORBit_small_alloc (TC_GNOME_Evolution_UserCreatableItemType))
#define GNOME_Evolution_UserCreatableItemType__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_UserCreatableItemType,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_defined)
#define _CORBA_sequence_GNOME_Evolution_UserCreatableItemType_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_UserCreatableItemType *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_UserCreatableItemType;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_struct;
#define TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_UserCreatableItemType__alloc() ((CORBA_sequence_GNOME_Evolution_UserCreatableItemType *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType))
#define CORBA_sequence_GNOME_Evolution_UserCreatableItemType__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType,(m),(d))
#define CORBA_sequence_GNOME_Evolution_UserCreatableItemType_allocbuf(l) ((GNOME_Evolution_UserCreatableItemType*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType, (l)))
#define CORBA_sequence_GNOME_Evolution_UserCreatableItemType_allocbuf(l) ((GNOME_Evolution_UserCreatableItemType*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType, (l)))
#endif
#if !defined(_GNOME_Evolution_UserCreatableItemTypeList_defined)
#define _GNOME_Evolution_UserCreatableItemTypeList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_UserCreatableItemType GNOME_Evolution_UserCreatableItemTypeList;
#define GNOME_Evolution_UserCreatableItemTypeList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_UserCreatableItemType_marshal((x),(y),(z))
#define GNOME_Evolution_UserCreatableItemTypeList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_UserCreatableItemType_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_0)
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_UserCreatableItemTypeList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_UserCreatableItemTypeList_struct;
#define TC_GNOME_Evolution_UserCreatableItemTypeList ((CORBA_TypeCode)&TC_GNOME_Evolution_UserCreatableItemTypeList_struct)
#endif
#define GNOME_Evolution_UserCreatableItemTypeList__alloc() ((GNOME_Evolution_UserCreatableItemTypeList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType))
#define GNOME_Evolution_UserCreatableItemTypeList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType,(m),(d))
#define GNOME_Evolution_UserCreatableItemTypeList_allocbuf(l) ((GNOME_Evolution_UserCreatableItemType*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_UserCreatableItemType, (l)))
#endif
#if !defined(_GNOME_Evolution_FolderType_defined)
#define _GNOME_Evolution_FolderType_defined 1
   typedef struct GNOME_Evolution_FolderType_type GNOME_Evolution_FolderType;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
   struct GNOME_Evolution_FolderType_type {
      CORBA_string name;
      CORBA_string iconName;
      CORBA_string displayName;
      CORBA_string description;
      CORBA_boolean userCreatable;
      CORBA_sequence_CORBA_string acceptedDndTypes;
      CORBA_sequence_CORBA_string exportedDndTypes;
      GNOME_Evolution_UserCreatableItemTypeList userCreatableItemTypes;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_FolderType_0)
#define TC_IMPL_TC_GNOME_Evolution_FolderType_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_5 't'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_FolderType_struct;
#define TC_GNOME_Evolution_FolderType ((CORBA_TypeCode)&TC_GNOME_Evolution_FolderType_struct)
#endif
#define GNOME_Evolution_FolderType__alloc() ((GNOME_Evolution_FolderType *)ORBit_small_alloc (TC_GNOME_Evolution_FolderType))
#define GNOME_Evolution_FolderType__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_FolderType,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_FolderType)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_FolderType 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_FolderType_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_FolderType_defined)
#define _CORBA_sequence_GNOME_Evolution_FolderType_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_FolderType *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_FolderType;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_FolderType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_FolderType_struct;
#define TC_CORBA_sequence_GNOME_Evolution_FolderType ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_FolderType_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_FolderType__alloc() ((CORBA_sequence_GNOME_Evolution_FolderType *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_FolderType))
#define CORBA_sequence_GNOME_Evolution_FolderType__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_FolderType,(m),(d))
#define CORBA_sequence_GNOME_Evolution_FolderType_allocbuf(l) ((GNOME_Evolution_FolderType*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_FolderType, (l)))
#define CORBA_sequence_GNOME_Evolution_FolderType_allocbuf(l) ((GNOME_Evolution_FolderType*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_FolderType, (l)))
#endif
#if !defined(_GNOME_Evolution_FolderTypeList_defined)
#define _GNOME_Evolution_FolderTypeList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_FolderType GNOME_Evolution_FolderTypeList;
#define GNOME_Evolution_FolderTypeList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_FolderType_marshal((x),(y),(z))
#define GNOME_Evolution_FolderTypeList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_FolderType_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_FolderTypeList_0)
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderTypeList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_FolderTypeList_struct;
#define TC_GNOME_Evolution_FolderTypeList ((CORBA_TypeCode)&TC_GNOME_Evolution_FolderTypeList_struct)
#endif
#define GNOME_Evolution_FolderTypeList__alloc() ((GNOME_Evolution_FolderTypeList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_FolderType))
#define GNOME_Evolution_FolderTypeList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_FolderType,(m),(d))
#define GNOME_Evolution_FolderTypeList_allocbuf(l) ((GNOME_Evolution_FolderType*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_FolderType, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellComponentListener) && !defined(_GNOME_Evolution_ShellComponentListener_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellComponentListener 1
#define _GNOME_Evolution_ShellComponentListener_defined 1
#define GNOME_Evolution_ShellComponentListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellComponentListener;
   extern CORBA_unsigned_long GNOME_Evolution_ShellComponentListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentListener_struct;
#define TC_GNOME_Evolution_ShellComponentListener ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellComponent) && !defined(_GNOME_Evolution_ShellComponent_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellComponent 1
#define _GNOME_Evolution_ShellComponent_defined 1
#define GNOME_Evolution_ShellComponent__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellComponent;
   extern CORBA_unsigned_long GNOME_Evolution_ShellComponent__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_struct;
#define TC_GNOME_Evolution_ShellComponent ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_struct)
#endif
#endif
#undef ex_GNOME_Evolution_ShellComponent_AlreadyOwned
#define ex_GNOME_Evolution_ShellComponent_AlreadyOwned "IDL:GNOME/Evolution/ShellComponent/AlreadyOwned:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_AlreadyOwned_defined)
#define _GNOME_Evolution_ShellComponent_AlreadyOwned_defined 1
   typedef struct GNOME_Evolution_ShellComponent_AlreadyOwned_type GNOME_Evolution_ShellComponent_AlreadyOwned;
   struct GNOME_Evolution_ShellComponent_AlreadyOwned_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyOwned_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_AlreadyOwned_struct;
#define TC_GNOME_Evolution_ShellComponent_AlreadyOwned ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_AlreadyOwned_struct)
#endif
#define GNOME_Evolution_ShellComponent_AlreadyOwned__alloc() ((GNOME_Evolution_ShellComponent_AlreadyOwned *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_AlreadyOwned))
#define GNOME_Evolution_ShellComponent_AlreadyOwned__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_AlreadyOwned,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_Busy
#define ex_GNOME_Evolution_ShellComponent_Busy "IDL:GNOME/Evolution/ShellComponent/Busy:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_Busy_defined)
#define _GNOME_Evolution_ShellComponent_Busy_defined 1
   typedef struct GNOME_Evolution_ShellComponent_Busy_type GNOME_Evolution_ShellComponent_Busy;
   struct GNOME_Evolution_ShellComponent_Busy_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_Busy_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_Busy_struct;
#define TC_GNOME_Evolution_ShellComponent_Busy ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_Busy_struct)
#endif
#define GNOME_Evolution_ShellComponent_Busy__alloc() ((GNOME_Evolution_ShellComponent_Busy *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_Busy))
#define GNOME_Evolution_ShellComponent_Busy__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_Busy,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_InternalError
#define ex_GNOME_Evolution_ShellComponent_InternalError "IDL:GNOME/Evolution/ShellComponent/InternalError:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_InternalError_defined)
#define _GNOME_Evolution_ShellComponent_InternalError_defined 1
   typedef struct GNOME_Evolution_ShellComponent_InternalError_type GNOME_Evolution_ShellComponent_InternalError;
   struct GNOME_Evolution_ShellComponent_InternalError_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_InternalError_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_InternalError_struct;
#define TC_GNOME_Evolution_ShellComponent_InternalError ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_InternalError_struct)
#endif
#define GNOME_Evolution_ShellComponent_InternalError__alloc() ((GNOME_Evolution_ShellComponent_InternalError *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_InternalError))
#define GNOME_Evolution_ShellComponent_InternalError__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_InternalError,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_NotFound
#define ex_GNOME_Evolution_ShellComponent_NotFound "IDL:GNOME/Evolution/ShellComponent/NotFound:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_NotFound_defined)
#define _GNOME_Evolution_ShellComponent_NotFound_defined 1
   typedef struct GNOME_Evolution_ShellComponent_NotFound_type GNOME_Evolution_ShellComponent_NotFound;
   struct GNOME_Evolution_ShellComponent_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_NotFound_struct;
#define TC_GNOME_Evolution_ShellComponent_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_NotFound_struct)
#endif
#define GNOME_Evolution_ShellComponent_NotFound__alloc() ((GNOME_Evolution_ShellComponent_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_NotFound))
#define GNOME_Evolution_ShellComponent_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_NotFound,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_NotOwned
#define ex_GNOME_Evolution_ShellComponent_NotOwned "IDL:GNOME/Evolution/ShellComponent/NotOwned:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_NotOwned_defined)
#define _GNOME_Evolution_ShellComponent_NotOwned_defined 1
   typedef struct GNOME_Evolution_ShellComponent_NotOwned_type GNOME_Evolution_ShellComponent_NotOwned;
   struct GNOME_Evolution_ShellComponent_NotOwned_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotOwned_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_NotOwned_struct;
#define TC_GNOME_Evolution_ShellComponent_NotOwned ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_NotOwned_struct)
#endif
#define GNOME_Evolution_ShellComponent_NotOwned__alloc() ((GNOME_Evolution_ShellComponent_NotOwned *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_NotOwned))
#define GNOME_Evolution_ShellComponent_NotOwned__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_NotOwned,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_OldOwnerHasDied
#define ex_GNOME_Evolution_ShellComponent_OldOwnerHasDied "IDL:GNOME/Evolution/ShellComponent/OldOwnerHasDied:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_OldOwnerHasDied_defined)
#define _GNOME_Evolution_ShellComponent_OldOwnerHasDied_defined 1
   typedef struct GNOME_Evolution_ShellComponent_OldOwnerHasDied_type GNOME_Evolution_ShellComponent_OldOwnerHasDied;
   struct GNOME_Evolution_ShellComponent_OldOwnerHasDied_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_struct;
#define TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied_struct)
#endif
#define GNOME_Evolution_ShellComponent_OldOwnerHasDied__alloc() ((GNOME_Evolution_ShellComponent_OldOwnerHasDied *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied))
#define GNOME_Evolution_ShellComponent_OldOwnerHasDied__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_OldOwnerHasDied,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_UnsupportedSchema
#define ex_GNOME_Evolution_ShellComponent_UnsupportedSchema "IDL:GNOME/Evolution/ShellComponent/UnsupportedSchema:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_UnsupportedSchema_defined)
#define _GNOME_Evolution_ShellComponent_UnsupportedSchema_defined 1
   typedef struct GNOME_Evolution_ShellComponent_UnsupportedSchema_type GNOME_Evolution_ShellComponent_UnsupportedSchema;
   struct GNOME_Evolution_ShellComponent_UnsupportedSchema_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_struct;
#define TC_GNOME_Evolution_ShellComponent_UnsupportedSchema ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_UnsupportedSchema_struct)
#endif
#define GNOME_Evolution_ShellComponent_UnsupportedSchema__alloc() ((GNOME_Evolution_ShellComponent_UnsupportedSchema *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_UnsupportedSchema))
#define GNOME_Evolution_ShellComponent_UnsupportedSchema__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_UnsupportedSchema,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_UnsupportedType
#define ex_GNOME_Evolution_ShellComponent_UnsupportedType "IDL:GNOME/Evolution/ShellComponent/UnsupportedType:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_UnsupportedType_defined)
#define _GNOME_Evolution_ShellComponent_UnsupportedType_defined 1
   typedef struct GNOME_Evolution_ShellComponent_UnsupportedType_type GNOME_Evolution_ShellComponent_UnsupportedType;
   struct GNOME_Evolution_ShellComponent_UnsupportedType_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_UnsupportedType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_UnsupportedType_struct;
#define TC_GNOME_Evolution_ShellComponent_UnsupportedType ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_UnsupportedType_struct)
#endif
#define GNOME_Evolution_ShellComponent_UnsupportedType__alloc() ((GNOME_Evolution_ShellComponent_UnsupportedType *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_UnsupportedType))
#define GNOME_Evolution_ShellComponent_UnsupportedType__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_UnsupportedType,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_AlreadyPopulated
#define ex_GNOME_Evolution_ShellComponent_AlreadyPopulated "IDL:GNOME/Evolution/ShellComponent/AlreadyPopulated:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_AlreadyPopulated_defined)
#define _GNOME_Evolution_ShellComponent_AlreadyPopulated_defined 1
   typedef struct GNOME_Evolution_ShellComponent_AlreadyPopulated_type GNOME_Evolution_ShellComponent_AlreadyPopulated;
   struct GNOME_Evolution_ShellComponent_AlreadyPopulated_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_struct;
#define TC_GNOME_Evolution_ShellComponent_AlreadyPopulated ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_AlreadyPopulated_struct)
#endif
#define GNOME_Evolution_ShellComponent_AlreadyPopulated__alloc() ((GNOME_Evolution_ShellComponent_AlreadyPopulated *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_AlreadyPopulated))
#define GNOME_Evolution_ShellComponent_AlreadyPopulated__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_AlreadyPopulated,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponent_NotPopulated
#define ex_GNOME_Evolution_ShellComponent_NotPopulated "IDL:GNOME/Evolution/ShellComponent/NotPopulated:1.0"
#if !defined(_GNOME_Evolution_ShellComponent_NotPopulated_defined)
#define _GNOME_Evolution_ShellComponent_NotPopulated_defined 1
   typedef struct GNOME_Evolution_ShellComponent_NotPopulated_type GNOME_Evolution_ShellComponent_NotPopulated;
   struct GNOME_Evolution_ShellComponent_NotPopulated_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_NotPopulated_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_NotPopulated_struct;
#define TC_GNOME_Evolution_ShellComponent_NotPopulated ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_NotPopulated_struct)
#endif
#define GNOME_Evolution_ShellComponent_NotPopulated__alloc() ((GNOME_Evolution_ShellComponent_NotPopulated *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponent_NotPopulated))
#define GNOME_Evolution_ShellComponent_NotPopulated__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponent_NotPopulated,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellComponentListener) && !defined(_GNOME_Evolution_ShellComponentListener_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellComponentListener 1
#define _GNOME_Evolution_ShellComponentListener_defined 1
#define GNOME_Evolution_ShellComponentListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellComponentListener;
   extern CORBA_unsigned_long GNOME_Evolution_ShellComponentListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentListener_struct;
#define TC_GNOME_Evolution_ShellComponentListener ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentListener_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_ShellComponentListener_Result_defined)
#define _GNOME_Evolution_ShellComponentListener_Result_defined 1
   typedef enum {
      GNOME_Evolution_ShellComponentListener_OK,
      GNOME_Evolution_ShellComponentListener_CANCEL,
      GNOME_Evolution_ShellComponentListener_UNSUPPORTED_OPERATION,
      GNOME_Evolution_ShellComponentListener_UNSUPPORTED_TYPE,
      GNOME_Evolution_ShellComponentListener_EXISTS,
      GNOME_Evolution_ShellComponentListener_INVALID_URI,
      GNOME_Evolution_ShellComponentListener_PERMISSION_DENIED,
      GNOME_Evolution_ShellComponentListener_HAS_SUBFOLDERS,
      GNOME_Evolution_ShellComponentListener_NO_SPACE
   } GNOME_Evolution_ShellComponentListener_Result;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentListener_Result_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentListener_Result_struct;
#define TC_GNOME_Evolution_ShellComponentListener_Result ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentListener_Result_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_ShellComponentDnd_Action_defined)
#define _GNOME_Evolution_ShellComponentDnd_Action_defined 1
   typedef CORBA_short GNOME_Evolution_ShellComponentDnd_Action;
#define GNOME_Evolution_ShellComponentDnd_Action_marshal(x,y,z) CORBA_short_marshal((x),(y),(z))
#define GNOME_Evolution_ShellComponentDnd_Action_demarshal(x,y,z,i) CORBA_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Action_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_Action_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_Action ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_Action_struct)
#endif
#define GNOME_Evolution_ShellComponentDnd_Action__alloc() ((GNOME_Evolution_ShellComponentDnd_Action *)ORBit_small_alloc (TC_CORBA_short))
#define GNOME_Evolution_ShellComponentDnd_Action__freekids(m,d) ORBit_small_freekids (TC_CORBA_short,(m),(d))
#endif
#ifndef GNOME_Evolution_ShellComponentDnd_ACTION_DEFAULT
#define GNOME_Evolution_ShellComponentDnd_ACTION_DEFAULT 0
#endif				/* !GNOME_Evolution_ShellComponentDnd_ACTION_D
				 * EFAULT */
#ifndef GNOME_Evolution_ShellComponentDnd_ACTION_COPY
#define GNOME_Evolution_ShellComponentDnd_ACTION_COPY 2
#endif				/* !GNOME_Evolution_ShellComponentDnd_ACTION_C
				 * OPY */
#ifndef GNOME_Evolution_ShellComponentDnd_ACTION_MOVE
#define GNOME_Evolution_ShellComponentDnd_ACTION_MOVE 4
#endif				/* !GNOME_Evolution_ShellComponentDnd_ACTION_M
				 * OVE */
#ifndef GNOME_Evolution_ShellComponentDnd_ACTION_LINK
#define GNOME_Evolution_ShellComponentDnd_ACTION_LINK 8
#endif				/* !GNOME_Evolution_ShellComponentDnd_ACTION_L
				 * INK */
#ifndef GNOME_Evolution_ShellComponentDnd_ACTION_ASK
#define GNOME_Evolution_ShellComponentDnd_ACTION_ASK 16
#endif				/* !GNOME_Evolution_ShellComponentDnd_ACTION_A
				 * SK */
#ifndef GNOME_Evolution_ShellComponentDnd_ACTION_ANY
#define GNOME_Evolution_ShellComponentDnd_ACTION_ANY 30
#endif				/* !GNOME_Evolution_ShellComponentDnd_ACTION_A
				 * NY */
#if !defined(_GNOME_Evolution_ShellComponentDnd_ActionSet_defined)
#define _GNOME_Evolution_ShellComponentDnd_ActionSet_defined 1
   typedef GNOME_Evolution_ShellComponentDnd_Action GNOME_Evolution_ShellComponentDnd_ActionSet;
#define GNOME_Evolution_ShellComponentDnd_ActionSet_marshal(x,y,z) GNOME_Evolution_ShellComponentDnd_Action_marshal((x),(y),(z))
#define GNOME_Evolution_ShellComponentDnd_ActionSet_demarshal(x,y,z,i) GNOME_Evolution_ShellComponentDnd_Action_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_ActionSet_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_ActionSet_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_ActionSet ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_ActionSet_struct)
#endif
#define GNOME_Evolution_ShellComponentDnd_ActionSet__alloc() ((GNOME_Evolution_ShellComponentDnd_ActionSet *)ORBit_small_alloc (TC_CORBA_short))
#define GNOME_Evolution_ShellComponentDnd_ActionSet__freekids(m,d) ORBit_small_freekids (TC_CORBA_short,(m),(d))
#endif
#if !defined(_GNOME_Evolution_ShellComponentDnd_Data_defined)
#define _GNOME_Evolution_ShellComponentDnd_Data_defined 1
   typedef struct GNOME_Evolution_ShellComponentDnd_Data_type GNOME_Evolution_ShellComponentDnd_Data;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_8 'n'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_octet *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
   struct GNOME_Evolution_ShellComponentDnd_Data_type {
      CORBA_short format;
      CORBA_string target;
      CORBA_sequence_CORBA_octet bytes;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_Data_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_Data_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_Data ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_Data_struct)
#endif
#define GNOME_Evolution_ShellComponentDnd_Data__alloc() ((GNOME_Evolution_ShellComponentDnd_Data *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponentDnd_Data))
#define GNOME_Evolution_ShellComponentDnd_Data__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponentDnd_Data,(m),(d))
#endif
#undef ex_GNOME_Evolution_ShellComponentDnd_NoData
#define ex_GNOME_Evolution_ShellComponentDnd_NoData "IDL:GNOME/Evolution/ShellComponentDnd/NoData:1.0"
#if !defined(_GNOME_Evolution_ShellComponentDnd_NoData_defined)
#define _GNOME_Evolution_ShellComponentDnd_NoData_defined 1
   typedef struct GNOME_Evolution_ShellComponentDnd_NoData_type GNOME_Evolution_ShellComponentDnd_NoData;
   struct GNOME_Evolution_ShellComponentDnd_NoData_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_NoData_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_NoData_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_NoData ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_NoData_struct)
#endif
#define GNOME_Evolution_ShellComponentDnd_NoData__alloc() ((GNOME_Evolution_ShellComponentDnd_NoData *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponentDnd_NoData))
#define GNOME_Evolution_ShellComponentDnd_NoData__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponentDnd_NoData,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellComponentDnd_SourceFolder) && !defined(_GNOME_Evolution_ShellComponentDnd_SourceFolder_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellComponentDnd_SourceFolder 1
#define _GNOME_Evolution_ShellComponentDnd_SourceFolder_defined 1
#define GNOME_Evolution_ShellComponentDnd_SourceFolder__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellComponentDnd_SourceFolder;
   extern CORBA_unsigned_long GNOME_Evolution_ShellComponentDnd_SourceFolder__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_SourceFolder ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_defined)
#define _GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_defined 1
   typedef struct GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_type GNOME_Evolution_ShellComponentDnd_SourceFolder_Context;
   struct GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_type {
      CORBA_string physicalUri;
      CORBA_string folderType;
      GNOME_Evolution_ShellComponentDnd_ActionSet possibleActions;
      GNOME_Evolution_ShellComponentDnd_Action suggestedAction;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context_struct)
#endif
#define GNOME_Evolution_ShellComponentDnd_SourceFolder_Context__alloc() ((GNOME_Evolution_ShellComponentDnd_SourceFolder_Context *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context))
#define GNOME_Evolution_ShellComponentDnd_SourceFolder_Context__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponentDnd_SourceFolder_Context,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellComponentDnd_DestinationFolder) && !defined(_GNOME_Evolution_ShellComponentDnd_DestinationFolder_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellComponentDnd_DestinationFolder 1
#define _GNOME_Evolution_ShellComponentDnd_DestinationFolder_defined 1
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellComponentDnd_DestinationFolder;
   extern CORBA_unsigned_long GNOME_Evolution_ShellComponentDnd_DestinationFolder__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_defined)
#define _GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_defined 1
   typedef struct GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_type GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context;
   struct GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_type {
      CORBA_string dndType;
      GNOME_Evolution_ShellComponentDnd_ActionSet possibleActions;
      GNOME_Evolution_ShellComponentDnd_Action suggestedAction;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_struct;
#define TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context_struct)
#endif
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context__alloc() ((GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context *)ORBit_small_alloc (TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context))
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context,(m),(d))
#endif
#if !defined(_GNOME_Evolution_Connection_defined)
#define _GNOME_Evolution_Connection_defined 1
   typedef struct GNOME_Evolution_Connection_type GNOME_Evolution_Connection;
   struct GNOME_Evolution_Connection_type {
      CORBA_string hostName;
      CORBA_string type;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Connection_0)
#define TC_IMPL_TC_GNOME_Evolution_Connection_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Connection_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Connection_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Connection_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Connection_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Connection_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Connection_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Connection_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Connection_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Connection_struct;
#define TC_GNOME_Evolution_Connection ((CORBA_TypeCode)&TC_GNOME_Evolution_Connection_struct)
#endif
#define GNOME_Evolution_Connection__alloc() ((GNOME_Evolution_Connection *)ORBit_small_alloc (TC_GNOME_Evolution_Connection))
#define GNOME_Evolution_Connection__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Connection,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Connection)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Connection 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Connection_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Connection_defined)
#define _CORBA_sequence_GNOME_Evolution_Connection_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Connection *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Connection;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Connection_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Connection_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Connection ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Connection_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Connection__alloc() ((CORBA_sequence_GNOME_Evolution_Connection *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Connection))
#define CORBA_sequence_GNOME_Evolution_Connection__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Connection,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Connection_allocbuf(l) ((GNOME_Evolution_Connection*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Connection, (l)))
#define CORBA_sequence_GNOME_Evolution_Connection_allocbuf(l) ((GNOME_Evolution_Connection*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Connection, (l)))
#endif
#if !defined(_GNOME_Evolution_ConnectionList_defined)
#define _GNOME_Evolution_ConnectionList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Connection GNOME_Evolution_ConnectionList;
#define GNOME_Evolution_ConnectionList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Connection_marshal((x),(y),(z))
#define GNOME_Evolution_ConnectionList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Connection_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_ConnectionList_0)
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ConnectionList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ConnectionList_struct;
#define TC_GNOME_Evolution_ConnectionList ((CORBA_TypeCode)&TC_GNOME_Evolution_ConnectionList_struct)
#endif
#define GNOME_Evolution_ConnectionList__alloc() ((GNOME_Evolution_ConnectionList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Connection))
#define GNOME_Evolution_ConnectionList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Connection,(m),(d))
#define GNOME_Evolution_ConnectionList_allocbuf(l) ((GNOME_Evolution_Connection*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Connection, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_OfflineProgressListener) && !defined(_GNOME_Evolution_OfflineProgressListener_defined)
#define ORBIT_DECL_GNOME_Evolution_OfflineProgressListener 1
#define _GNOME_Evolution_OfflineProgressListener_defined 1
#define GNOME_Evolution_OfflineProgressListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_OfflineProgressListener;
   extern CORBA_unsigned_long GNOME_Evolution_OfflineProgressListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_0)
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_OfflineProgressListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_OfflineProgressListener_struct;
#define TC_GNOME_Evolution_OfflineProgressListener ((CORBA_TypeCode)&TC_GNOME_Evolution_OfflineProgressListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_SyncFolderProgressListener) && !defined(_GNOME_Evolution_SyncFolderProgressListener_defined)
#define ORBIT_DECL_GNOME_Evolution_SyncFolderProgressListener 1
#define _GNOME_Evolution_SyncFolderProgressListener_defined 1
#define GNOME_Evolution_SyncFolderProgressListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_SyncFolderProgressListener;
   extern CORBA_unsigned_long GNOME_Evolution_SyncFolderProgressListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_0)
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_SyncFolderProgressListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_SyncFolderProgressListener_struct;
#define TC_GNOME_Evolution_SyncFolderProgressListener ((CORBA_TypeCode)&TC_GNOME_Evolution_SyncFolderProgressListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Offline) && !defined(_GNOME_Evolution_Offline_defined)
#define ORBIT_DECL_GNOME_Evolution_Offline 1
#define _GNOME_Evolution_Offline_defined 1
#define GNOME_Evolution_Offline__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Offline;
   extern CORBA_unsigned_long GNOME_Evolution_Offline__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Offline_0)
#define TC_IMPL_TC_GNOME_Evolution_Offline_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Offline_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Offline_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Offline_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Offline_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Offline_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Offline_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Offline_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Offline_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Offline_struct;
#define TC_GNOME_Evolution_Offline ((CORBA_TypeCode)&TC_GNOME_Evolution_Offline_struct)
#endif
#endif
#undef ex_GNOME_Evolution_Offline_notPrepared
#define ex_GNOME_Evolution_Offline_notPrepared "IDL:GNOME/Evolution/Offline/notPrepared:1.0"
#if !defined(_GNOME_Evolution_Offline_notPrepared_defined)
#define _GNOME_Evolution_Offline_notPrepared_defined 1
   typedef struct GNOME_Evolution_Offline_notPrepared_type GNOME_Evolution_Offline_notPrepared;
   struct GNOME_Evolution_Offline_notPrepared_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_0)
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notPrepared_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Offline_notPrepared_struct;
#define TC_GNOME_Evolution_Offline_notPrepared ((CORBA_TypeCode)&TC_GNOME_Evolution_Offline_notPrepared_struct)
#endif
#define GNOME_Evolution_Offline_notPrepared__alloc() ((GNOME_Evolution_Offline_notPrepared *)ORBit_small_alloc (TC_GNOME_Evolution_Offline_notPrepared))
#define GNOME_Evolution_Offline_notPrepared__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Offline_notPrepared,(m),(d))
#endif
#undef ex_GNOME_Evolution_Offline_notSyncing
#define ex_GNOME_Evolution_Offline_notSyncing "IDL:GNOME/Evolution/Offline/notSyncing:1.0"
#if !defined(_GNOME_Evolution_Offline_notSyncing_defined)
#define _GNOME_Evolution_Offline_notSyncing_defined 1
   typedef struct GNOME_Evolution_Offline_notSyncing_type GNOME_Evolution_Offline_notSyncing;
   struct GNOME_Evolution_Offline_notSyncing_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_0)
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Offline_notSyncing_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Offline_notSyncing_struct;
#define TC_GNOME_Evolution_Offline_notSyncing ((CORBA_TypeCode)&TC_GNOME_Evolution_Offline_notSyncing_struct)
#endif
#define GNOME_Evolution_Offline_notSyncing__alloc() ((GNOME_Evolution_Offline_notSyncing *)ORBit_small_alloc (TC_GNOME_Evolution_Offline_notSyncing))
#define GNOME_Evolution_Offline_notSyncing__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Offline_notSyncing,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellView) && !defined(_GNOME_Evolution_ShellView_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellView 1
#define _GNOME_Evolution_ShellView_defined 1
#define GNOME_Evolution_ShellView__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellView;
   extern CORBA_unsigned_long GNOME_Evolution_ShellView__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellView_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellView_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellView_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellView_struct;
#define TC_GNOME_Evolution_ShellView ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellView_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Shortcuts) && !defined(_GNOME_Evolution_Shortcuts_defined)
#define ORBIT_DECL_GNOME_Evolution_Shortcuts 1
#define _GNOME_Evolution_Shortcuts_defined 1
#define GNOME_Evolution_Shortcuts__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Shortcuts;
   extern CORBA_unsigned_long GNOME_Evolution_Shortcuts__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_struct;
#define TC_GNOME_Evolution_Shortcuts ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_Shortcuts_Shortcut_defined)
#define _GNOME_Evolution_Shortcuts_Shortcut_defined 1
   typedef struct GNOME_Evolution_Shortcuts_Shortcut_type GNOME_Evolution_Shortcuts_Shortcut;
   struct GNOME_Evolution_Shortcuts_Shortcut_type {
      CORBA_string uri;
      CORBA_string name;
      CORBA_string type;
      CORBA_string customIconName;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Shortcut_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_Shortcut_struct;
#define TC_GNOME_Evolution_Shortcuts_Shortcut ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_Shortcut_struct)
#endif
#define GNOME_Evolution_Shortcuts_Shortcut__alloc() ((GNOME_Evolution_Shortcuts_Shortcut *)ORBit_small_alloc (TC_GNOME_Evolution_Shortcuts_Shortcut))
#define GNOME_Evolution_Shortcuts_Shortcut__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shortcuts_Shortcut,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_defined)
#define _CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Shortcuts_Shortcut *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut__alloc() ((CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut))
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_allocbuf(l) ((GNOME_Evolution_Shortcuts_Shortcut*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut, (l)))
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_allocbuf(l) ((GNOME_Evolution_Shortcuts_Shortcut*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut, (l)))
#endif
#if !defined(_GNOME_Evolution_Shortcuts_ShortcutList_defined)
#define _GNOME_Evolution_Shortcuts_ShortcutList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut GNOME_Evolution_Shortcuts_ShortcutList;
#define GNOME_Evolution_Shortcuts_ShortcutList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_marshal((x),(y),(z))
#define GNOME_Evolution_Shortcuts_ShortcutList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_ShortcutList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_ShortcutList_struct;
#define TC_GNOME_Evolution_Shortcuts_ShortcutList ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_ShortcutList_struct)
#endif
#define GNOME_Evolution_Shortcuts_ShortcutList__alloc() ((GNOME_Evolution_Shortcuts_ShortcutList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut))
#define GNOME_Evolution_Shortcuts_ShortcutList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut,(m),(d))
#define GNOME_Evolution_Shortcuts_ShortcutList_allocbuf(l) ((GNOME_Evolution_Shortcuts_Shortcut*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Shortcut, (l)))
#endif
#if !defined(_GNOME_Evolution_Shortcuts_Group_defined)
#define _GNOME_Evolution_Shortcuts_Group_defined 1
   typedef struct GNOME_Evolution_Shortcuts_Group_type GNOME_Evolution_Shortcuts_Group;
   struct GNOME_Evolution_Shortcuts_Group_type {
      CORBA_string name;
      GNOME_Evolution_Shortcuts_ShortcutList shortcuts;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_Group_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_Group_struct;
#define TC_GNOME_Evolution_Shortcuts_Group ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_Group_struct)
#endif
#define GNOME_Evolution_Shortcuts_Group__alloc() ((GNOME_Evolution_Shortcuts_Group *)ORBit_small_alloc (TC_GNOME_Evolution_Shortcuts_Group))
#define GNOME_Evolution_Shortcuts_Group__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shortcuts_Group,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_defined)
#define _CORBA_sequence_GNOME_Evolution_Shortcuts_Group_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Shortcuts_Group *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Shortcuts_Group;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Group__alloc() ((CORBA_sequence_GNOME_Evolution_Shortcuts_Group *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group))
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Group__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Group_allocbuf(l) ((GNOME_Evolution_Shortcuts_Group*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group, (l)))
#define CORBA_sequence_GNOME_Evolution_Shortcuts_Group_allocbuf(l) ((GNOME_Evolution_Shortcuts_Group*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group, (l)))
#endif
#if !defined(_GNOME_Evolution_Shortcuts_GroupList_defined)
#define _GNOME_Evolution_Shortcuts_GroupList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Shortcuts_Group GNOME_Evolution_Shortcuts_GroupList;
#define GNOME_Evolution_Shortcuts_GroupList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Shortcuts_Group_marshal((x),(y),(z))
#define GNOME_Evolution_Shortcuts_GroupList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Shortcuts_Group_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_GroupList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_GroupList_struct;
#define TC_GNOME_Evolution_Shortcuts_GroupList ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_GroupList_struct)
#endif
#define GNOME_Evolution_Shortcuts_GroupList__alloc() ((GNOME_Evolution_Shortcuts_GroupList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group))
#define GNOME_Evolution_Shortcuts_GroupList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group,(m),(d))
#define GNOME_Evolution_Shortcuts_GroupList_allocbuf(l) ((GNOME_Evolution_Shortcuts_Group*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Shortcuts_Group, (l)))
#endif
#undef ex_GNOME_Evolution_Shortcuts_NotFound
#define ex_GNOME_Evolution_Shortcuts_NotFound "IDL:GNOME/Evolution/Shortcuts/NotFound:1.0"
#if !defined(_GNOME_Evolution_Shortcuts_NotFound_defined)
#define _GNOME_Evolution_Shortcuts_NotFound_defined 1
   typedef struct GNOME_Evolution_Shortcuts_NotFound_type GNOME_Evolution_Shortcuts_NotFound;
   struct GNOME_Evolution_Shortcuts_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_NotFound_struct;
#define TC_GNOME_Evolution_Shortcuts_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_NotFound_struct)
#endif
#define GNOME_Evolution_Shortcuts_NotFound__alloc() ((GNOME_Evolution_Shortcuts_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_Shortcuts_NotFound))
#define GNOME_Evolution_Shortcuts_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shortcuts_NotFound,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shortcuts_InvalidPosition
#define ex_GNOME_Evolution_Shortcuts_InvalidPosition "IDL:GNOME/Evolution/Shortcuts/InvalidPosition:1.0"
#if !defined(_GNOME_Evolution_Shortcuts_InvalidPosition_defined)
#define _GNOME_Evolution_Shortcuts_InvalidPosition_defined 1
   typedef struct GNOME_Evolution_Shortcuts_InvalidPosition_type GNOME_Evolution_Shortcuts_InvalidPosition;
   struct GNOME_Evolution_Shortcuts_InvalidPosition_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_InvalidPosition_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_InvalidPosition_struct;
#define TC_GNOME_Evolution_Shortcuts_InvalidPosition ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_InvalidPosition_struct)
#endif
#define GNOME_Evolution_Shortcuts_InvalidPosition__alloc() ((GNOME_Evolution_Shortcuts_InvalidPosition *)ORBit_small_alloc (TC_GNOME_Evolution_Shortcuts_InvalidPosition))
#define GNOME_Evolution_Shortcuts_InvalidPosition__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shortcuts_InvalidPosition,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shortcuts_CannotRemove
#define ex_GNOME_Evolution_Shortcuts_CannotRemove "IDL:GNOME/Evolution/Shortcuts/CannotRemove:1.0"
#if !defined(_GNOME_Evolution_Shortcuts_CannotRemove_defined)
#define _GNOME_Evolution_Shortcuts_CannotRemove_defined 1
   typedef struct GNOME_Evolution_Shortcuts_CannotRemove_type GNOME_Evolution_Shortcuts_CannotRemove;
   struct GNOME_Evolution_Shortcuts_CannotRemove_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_0)
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shortcuts_CannotRemove_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shortcuts_CannotRemove_struct;
#define TC_GNOME_Evolution_Shortcuts_CannotRemove ((CORBA_TypeCode)&TC_GNOME_Evolution_Shortcuts_CannotRemove_struct)
#endif
#define GNOME_Evolution_Shortcuts_CannotRemove__alloc() ((GNOME_Evolution_Shortcuts_CannotRemove *)ORBit_small_alloc (TC_GNOME_Evolution_Shortcuts_CannotRemove))
#define GNOME_Evolution_Shortcuts_CannotRemove__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shortcuts_CannotRemove,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Storage) && !defined(_GNOME_Evolution_Storage_defined)
#define ORBIT_DECL_GNOME_Evolution_Storage 1
#define _GNOME_Evolution_Storage_defined 1
#define GNOME_Evolution_Storage__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Storage;
   extern CORBA_unsigned_long GNOME_Evolution_Storage__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_struct;
#define TC_GNOME_Evolution_Storage ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_StorageListener) && !defined(_GNOME_Evolution_StorageListener_defined)
#define ORBIT_DECL_GNOME_Evolution_StorageListener 1
#define _GNOME_Evolution_StorageListener_defined 1
#define GNOME_Evolution_StorageListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_StorageListener;
   extern CORBA_unsigned_long GNOME_Evolution_StorageListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageListener_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageListener_struct;
#define TC_GNOME_Evolution_StorageListener ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Storage) && !defined(_GNOME_Evolution_Storage_defined)
#define ORBIT_DECL_GNOME_Evolution_Storage 1
#define _GNOME_Evolution_Storage_defined 1
#define GNOME_Evolution_Storage__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Storage;
   extern CORBA_unsigned_long GNOME_Evolution_Storage__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_struct;
#define TC_GNOME_Evolution_Storage ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_struct)
#endif
#endif
#undef ex_GNOME_Evolution_Storage_AlreadyListening
#define ex_GNOME_Evolution_Storage_AlreadyListening "IDL:GNOME/Evolution/Storage/AlreadyListening:1.0"
#if !defined(_GNOME_Evolution_Storage_AlreadyListening_defined)
#define _GNOME_Evolution_Storage_AlreadyListening_defined 1
   typedef struct GNOME_Evolution_Storage_AlreadyListening_type GNOME_Evolution_Storage_AlreadyListening;
   struct GNOME_Evolution_Storage_AlreadyListening_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_AlreadyListening_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_AlreadyListening_struct;
#define TC_GNOME_Evolution_Storage_AlreadyListening ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_AlreadyListening_struct)
#endif
#define GNOME_Evolution_Storage_AlreadyListening__alloc() ((GNOME_Evolution_Storage_AlreadyListening *)ORBit_small_alloc (TC_GNOME_Evolution_Storage_AlreadyListening))
#define GNOME_Evolution_Storage_AlreadyListening__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Storage_AlreadyListening,(m),(d))
#endif
#undef ex_GNOME_Evolution_Storage_NotFound
#define ex_GNOME_Evolution_Storage_NotFound "IDL:GNOME/Evolution/Storage/NotFound:1.0"
#if !defined(_GNOME_Evolution_Storage_NotFound_defined)
#define _GNOME_Evolution_Storage_NotFound_defined 1
   typedef struct GNOME_Evolution_Storage_NotFound_type GNOME_Evolution_Storage_NotFound;
   struct GNOME_Evolution_Storage_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_NotFound_struct;
#define TC_GNOME_Evolution_Storage_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_NotFound_struct)
#endif
#define GNOME_Evolution_Storage_NotFound__alloc() ((GNOME_Evolution_Storage_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_Storage_NotFound))
#define GNOME_Evolution_Storage_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Storage_NotFound,(m),(d))
#endif
#if !defined(_GNOME_Evolution_Storage_Result_defined)
#define _GNOME_Evolution_Storage_Result_defined 1
   typedef enum {
      GNOME_Evolution_Storage_OK,
      GNOME_Evolution_Storage_UNSUPPORTED_OPERATION,
      GNOME_Evolution_Storage_UNSUPPORTED_TYPE,
      GNOME_Evolution_Storage_INVALID_URI,
      GNOME_Evolution_Storage_ALREADY_EXISTS,
      GNOME_Evolution_Storage_DOES_NOT_EXIST,
      GNOME_Evolution_Storage_PERMISSION_DENIED,
      GNOME_Evolution_Storage_NO_SPACE,
      GNOME_Evolution_Storage_NOT_EMPTY,
      GNOME_Evolution_Storage_NOT_ONLINE,
      GNOME_Evolution_Storage_GENERIC_ERROR
   } GNOME_Evolution_Storage_Result;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_Result_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_Result_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_Result_struct;
#define TC_GNOME_Evolution_Storage_Result ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_Result_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_Storage_FolderResult_defined)
#define _GNOME_Evolution_Storage_FolderResult_defined 1
   typedef struct GNOME_Evolution_Storage_FolderResult_type GNOME_Evolution_Storage_FolderResult;
   struct GNOME_Evolution_Storage_FolderResult_type {
      GNOME_Evolution_Storage_Result result;
      CORBA_string path;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderResult_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_FolderResult_struct;
#define TC_GNOME_Evolution_Storage_FolderResult ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_FolderResult_struct)
#endif
#define GNOME_Evolution_Storage_FolderResult__alloc() ((GNOME_Evolution_Storage_FolderResult *)ORBit_small_alloc (TC_GNOME_Evolution_Storage_FolderResult))
#define GNOME_Evolution_Storage_FolderResult__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Storage_FolderResult,(m),(d))
#endif
#if !defined(_GNOME_Evolution_Storage_FolderPropertyItem_defined)
#define _GNOME_Evolution_Storage_FolderPropertyItem_defined 1
   typedef struct GNOME_Evolution_Storage_FolderPropertyItem_type GNOME_Evolution_Storage_FolderPropertyItem;
   struct GNOME_Evolution_Storage_FolderPropertyItem_type {
      CORBA_string label;
      CORBA_string tooltip;
      GNOME_Evolution_Icon icon;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItem_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_FolderPropertyItem_struct;
#define TC_GNOME_Evolution_Storage_FolderPropertyItem ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_FolderPropertyItem_struct)
#endif
#define GNOME_Evolution_Storage_FolderPropertyItem__alloc() ((GNOME_Evolution_Storage_FolderPropertyItem *)ORBit_small_alloc (TC_GNOME_Evolution_Storage_FolderPropertyItem))
#define GNOME_Evolution_Storage_FolderPropertyItem__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Storage_FolderPropertyItem,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_defined)
#define _CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Storage_FolderPropertyItem *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem__alloc() ((CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem))
#define CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_allocbuf(l) ((GNOME_Evolution_Storage_FolderPropertyItem*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem, (l)))
#define CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_allocbuf(l) ((GNOME_Evolution_Storage_FolderPropertyItem*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem, (l)))
#endif
#if !defined(_GNOME_Evolution_Storage_FolderPropertyItemList_defined)
#define _GNOME_Evolution_Storage_FolderPropertyItemList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem GNOME_Evolution_Storage_FolderPropertyItemList;
#define GNOME_Evolution_Storage_FolderPropertyItemList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_marshal((x),(y),(z))
#define GNOME_Evolution_Storage_FolderPropertyItemList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_0)
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Storage_FolderPropertyItemList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Storage_FolderPropertyItemList_struct;
#define TC_GNOME_Evolution_Storage_FolderPropertyItemList ((CORBA_TypeCode)&TC_GNOME_Evolution_Storage_FolderPropertyItemList_struct)
#endif
#define GNOME_Evolution_Storage_FolderPropertyItemList__alloc() ((GNOME_Evolution_Storage_FolderPropertyItemList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem))
#define GNOME_Evolution_Storage_FolderPropertyItemList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem,(m),(d))
#define GNOME_Evolution_Storage_FolderPropertyItemList_allocbuf(l) ((GNOME_Evolution_Storage_FolderPropertyItem*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Storage_FolderPropertyItem, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_StorageListener) && !defined(_GNOME_Evolution_StorageListener_defined)
#define ORBIT_DECL_GNOME_Evolution_StorageListener 1
#define _GNOME_Evolution_StorageListener_defined 1
#define GNOME_Evolution_StorageListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_StorageListener;
   extern CORBA_unsigned_long GNOME_Evolution_StorageListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageListener_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageListener_struct;
#define TC_GNOME_Evolution_StorageListener ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageListener_struct)
#endif
#endif
#undef ex_GNOME_Evolution_StorageListener_Exists
#define ex_GNOME_Evolution_StorageListener_Exists "IDL:GNOME/Evolution/StorageListener/Exists:1.0"
#if !defined(_GNOME_Evolution_StorageListener_Exists_defined)
#define _GNOME_Evolution_StorageListener_Exists_defined 1
   typedef struct GNOME_Evolution_StorageListener_Exists_type GNOME_Evolution_StorageListener_Exists;
   struct GNOME_Evolution_StorageListener_Exists_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_Exists_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageListener_Exists_struct;
#define TC_GNOME_Evolution_StorageListener_Exists ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageListener_Exists_struct)
#endif
#define GNOME_Evolution_StorageListener_Exists__alloc() ((GNOME_Evolution_StorageListener_Exists *)ORBit_small_alloc (TC_GNOME_Evolution_StorageListener_Exists))
#define GNOME_Evolution_StorageListener_Exists__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageListener_Exists,(m),(d))
#endif
#undef ex_GNOME_Evolution_StorageListener_NotFound
#define ex_GNOME_Evolution_StorageListener_NotFound "IDL:GNOME/Evolution/StorageListener/NotFound:1.0"
#if !defined(_GNOME_Evolution_StorageListener_NotFound_defined)
#define _GNOME_Evolution_StorageListener_NotFound_defined 1
   typedef struct GNOME_Evolution_StorageListener_NotFound_type GNOME_Evolution_StorageListener_NotFound;
   struct GNOME_Evolution_StorageListener_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageListener_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageListener_NotFound_struct;
#define TC_GNOME_Evolution_StorageListener_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageListener_NotFound_struct)
#endif
#define GNOME_Evolution_StorageListener_NotFound__alloc() ((GNOME_Evolution_StorageListener_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_StorageListener_NotFound))
#define GNOME_Evolution_StorageListener_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageListener_NotFound,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_StorageRegistry) && !defined(_GNOME_Evolution_StorageRegistry_defined)
#define ORBIT_DECL_GNOME_Evolution_StorageRegistry 1
#define _GNOME_Evolution_StorageRegistry_defined 1
#define GNOME_Evolution_StorageRegistry__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_StorageRegistry;
   extern CORBA_unsigned_long GNOME_Evolution_StorageRegistry__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_struct;
#define TC_GNOME_Evolution_StorageRegistry ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_struct)
#endif
#endif
#undef ex_GNOME_Evolution_StorageRegistry_Exists
#define ex_GNOME_Evolution_StorageRegistry_Exists "IDL:GNOME/Evolution/StorageRegistry/Exists:1.0"
#if !defined(_GNOME_Evolution_StorageRegistry_Exists_defined)
#define _GNOME_Evolution_StorageRegistry_Exists_defined 1
   typedef struct GNOME_Evolution_StorageRegistry_Exists_type GNOME_Evolution_StorageRegistry_Exists;
   struct GNOME_Evolution_StorageRegistry_Exists_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_Exists_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_Exists_struct;
#define TC_GNOME_Evolution_StorageRegistry_Exists ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_Exists_struct)
#endif
#define GNOME_Evolution_StorageRegistry_Exists__alloc() ((GNOME_Evolution_StorageRegistry_Exists *)ORBit_small_alloc (TC_GNOME_Evolution_StorageRegistry_Exists))
#define GNOME_Evolution_StorageRegistry_Exists__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageRegistry_Exists,(m),(d))
#endif
#undef ex_GNOME_Evolution_StorageRegistry_NotFound
#define ex_GNOME_Evolution_StorageRegistry_NotFound "IDL:GNOME/Evolution/StorageRegistry/NotFound:1.0"
#if !defined(_GNOME_Evolution_StorageRegistry_NotFound_defined)
#define _GNOME_Evolution_StorageRegistry_NotFound_defined 1
   typedef struct GNOME_Evolution_StorageRegistry_NotFound_type GNOME_Evolution_StorageRegistry_NotFound;
   struct GNOME_Evolution_StorageRegistry_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_NotFound_struct;
#define TC_GNOME_Evolution_StorageRegistry_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_NotFound_struct)
#endif
#define GNOME_Evolution_StorageRegistry_NotFound__alloc() ((GNOME_Evolution_StorageRegistry_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_StorageRegistry_NotFound))
#define GNOME_Evolution_StorageRegistry_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageRegistry_NotFound,(m),(d))
#endif
#undef ex_GNOME_Evolution_StorageRegistry_AlreadyListening
#define ex_GNOME_Evolution_StorageRegistry_AlreadyListening "IDL:GNOME/Evolution/StorageRegistry/AlreadyListening:1.0"
#if !defined(_GNOME_Evolution_StorageRegistry_AlreadyListening_defined)
#define _GNOME_Evolution_StorageRegistry_AlreadyListening_defined 1
   typedef struct GNOME_Evolution_StorageRegistry_AlreadyListening_type GNOME_Evolution_StorageRegistry_AlreadyListening;
   struct GNOME_Evolution_StorageRegistry_AlreadyListening_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_AlreadyListening_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_AlreadyListening_struct;
#define TC_GNOME_Evolution_StorageRegistry_AlreadyListening ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_AlreadyListening_struct)
#endif
#define GNOME_Evolution_StorageRegistry_AlreadyListening__alloc() ((GNOME_Evolution_StorageRegistry_AlreadyListening *)ORBit_small_alloc (TC_GNOME_Evolution_StorageRegistry_AlreadyListening))
#define GNOME_Evolution_StorageRegistry_AlreadyListening__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageRegistry_AlreadyListening,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Object)
#define ORBIT_DECL_CORBA_sequence_CORBA_Object 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_8 'n'
#if !defined(_CORBA_sequence_CORBA_Object_defined)
#define _CORBA_sequence_CORBA_Object_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_Object *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_Object;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Object_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Object_struct;
#define TC_CORBA_sequence_CORBA_Object ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Object_struct)
#endif
#define CORBA_sequence_CORBA_Object__alloc() ((CORBA_sequence_CORBA_Object *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_Object))
#define CORBA_sequence_CORBA_Object__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_Object,(m),(d))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Storage)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Storage 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Storage_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Storage_defined)
#define _CORBA_sequence_GNOME_Evolution_Storage_defined 1
   typedef CORBA_sequence_CORBA_Object CORBA_sequence_GNOME_Evolution_Storage;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Storage_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Storage_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Storage ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Storage_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Storage__alloc CORBA_sequence_CORBA_Object__alloc
#define CORBA_sequence_GNOME_Evolution_Storage__freekids CORBA_sequence_CORBA_Object__freekids
#define CORBA_sequence_GNOME_Evolution_Storage_allocbuf CORBA_sequence_CORBA_Object_allocbuf
#define CORBA_sequence_GNOME_Evolution_Storage_marshal(x,y,z) CORBA_sequence_CORBA_Object_marshal((x),(y),(z))
#define CORBA_sequence_GNOME_Evolution_Storage_demarshal(x,y,z,i) CORBA_sequence_CORBA_Object_demarshal((x),(y),(z),(i))
#endif
#if !defined(_GNOME_Evolution_StorageRegistry_StorageList_defined)
#define _GNOME_Evolution_StorageRegistry_StorageList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Storage GNOME_Evolution_StorageRegistry_StorageList;
#define GNOME_Evolution_StorageRegistry_StorageList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Storage_marshal((x),(y),(z))
#define GNOME_Evolution_StorageRegistry_StorageList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Storage_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_StorageList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_StorageList_struct;
#define TC_GNOME_Evolution_StorageRegistry_StorageList ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_StorageList_struct)
#endif
#define GNOME_Evolution_StorageRegistry_StorageList__alloc() ((GNOME_Evolution_StorageRegistry_StorageList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Storage))
#define GNOME_Evolution_StorageRegistry_StorageList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Storage,(m),(d))
#define GNOME_Evolution_StorageRegistry_StorageList_allocbuf(l) ((GNOME_Evolution_Storage*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Storage, (l)))
#endif
#if !defined(_GNOME_Evolution_StorageRegistry_MessageType_defined)
#define _GNOME_Evolution_StorageRegistry_MessageType_defined 1
   typedef enum {
      GNOME_Evolution_StorageRegistry_STORAGE_CREATED,
      GNOME_Evolution_StorageRegistry_STORAGE_DESTROYED
   } GNOME_Evolution_StorageRegistry_MessageType;
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_MessageType_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_MessageType_struct;
#define TC_GNOME_Evolution_StorageRegistry_MessageType ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_MessageType_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_StorageRegistry_NotifyResult_defined)
#define _GNOME_Evolution_StorageRegistry_NotifyResult_defined 1
   typedef struct GNOME_Evolution_StorageRegistry_NotifyResult_type GNOME_Evolution_StorageRegistry_NotifyResult;
   struct GNOME_Evolution_StorageRegistry_NotifyResult_type {
      GNOME_Evolution_StorageRegistry_MessageType type;
      CORBA_string name;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageRegistry_NotifyResult_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageRegistry_NotifyResult_struct;
#define TC_GNOME_Evolution_StorageRegistry_NotifyResult ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageRegistry_NotifyResult_struct)
#endif
#define GNOME_Evolution_StorageRegistry_NotifyResult__alloc() ((GNOME_Evolution_StorageRegistry_NotifyResult *)ORBit_small_alloc (TC_GNOME_Evolution_StorageRegistry_NotifyResult))
#define GNOME_Evolution_StorageRegistry_NotifyResult__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageRegistry_NotifyResult,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_StorageSetViewListener) && !defined(_GNOME_Evolution_StorageSetViewListener_defined)
#define ORBIT_DECL_GNOME_Evolution_StorageSetViewListener 1
#define _GNOME_Evolution_StorageSetViewListener_defined 1
#define GNOME_Evolution_StorageSetViewListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_StorageSetViewListener;
   extern CORBA_unsigned_long GNOME_Evolution_StorageSetViewListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetViewListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageSetViewListener_struct;
#define TC_GNOME_Evolution_StorageSetViewListener ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageSetViewListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_StorageSetView) && !defined(_GNOME_Evolution_StorageSetView_defined)
#define ORBIT_DECL_GNOME_Evolution_StorageSetView 1
#define _GNOME_Evolution_StorageSetView_defined 1
#define GNOME_Evolution_StorageSetView__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_StorageSetView;
   extern CORBA_unsigned_long GNOME_Evolution_StorageSetView__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageSetView_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageSetView_struct;
#define TC_GNOME_Evolution_StorageSetView ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageSetView_struct)
#endif
#endif
#undef ex_GNOME_Evolution_StorageSetView_AlreadyListening
#define ex_GNOME_Evolution_StorageSetView_AlreadyListening "IDL:GNOME/Evolution/StorageSetView/AlreadyListening:1.0"
#if !defined(_GNOME_Evolution_StorageSetView_AlreadyListening_defined)
#define _GNOME_Evolution_StorageSetView_AlreadyListening_defined 1
   typedef struct GNOME_Evolution_StorageSetView_AlreadyListening_type GNOME_Evolution_StorageSetView_AlreadyListening;
   struct GNOME_Evolution_StorageSetView_AlreadyListening_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_AlreadyListening_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageSetView_AlreadyListening_struct;
#define TC_GNOME_Evolution_StorageSetView_AlreadyListening ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageSetView_AlreadyListening_struct)
#endif
#define GNOME_Evolution_StorageSetView_AlreadyListening__alloc() ((GNOME_Evolution_StorageSetView_AlreadyListening *)ORBit_small_alloc (TC_GNOME_Evolution_StorageSetView_AlreadyListening))
#define GNOME_Evolution_StorageSetView_AlreadyListening__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageSetView_AlreadyListening,(m),(d))
#endif
#undef ex_GNOME_Evolution_StorageSetView_NotFound
#define ex_GNOME_Evolution_StorageSetView_NotFound "IDL:GNOME/Evolution/StorageSetView/NotFound:1.0"
#if !defined(_GNOME_Evolution_StorageSetView_NotFound_defined)
#define _GNOME_Evolution_StorageSetView_NotFound_defined 1
   typedef struct GNOME_Evolution_StorageSetView_NotFound_type GNOME_Evolution_StorageSetView_NotFound;
   struct GNOME_Evolution_StorageSetView_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_StorageSetView_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_StorageSetView_NotFound_struct;
#define TC_GNOME_Evolution_StorageSetView_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_StorageSetView_NotFound_struct)
#endif
#define GNOME_Evolution_StorageSetView_NotFound__alloc() ((GNOME_Evolution_StorageSetView_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_StorageSetView_NotFound))
#define GNOME_Evolution_StorageSetView_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_StorageSetView_NotFound,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_ShellComponent) && !defined(_GNOME_Evolution_ShellComponent_defined)
#define ORBIT_DECL_GNOME_Evolution_ShellComponent 1
#define _GNOME_Evolution_ShellComponent_defined 1
#define GNOME_Evolution_ShellComponent__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_ShellComponent;
   extern CORBA_unsigned_long GNOME_Evolution_ShellComponent__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_ShellComponent_0)
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_5 't'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_ShellComponent_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_ShellComponent_struct;
#define TC_GNOME_Evolution_ShellComponent ((CORBA_TypeCode)&TC_GNOME_Evolution_ShellComponent_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_FolderSelectionListener) && !defined(_GNOME_Evolution_FolderSelectionListener_defined)
#define ORBIT_DECL_GNOME_Evolution_FolderSelectionListener 1
#define _GNOME_Evolution_FolderSelectionListener_defined 1
#define GNOME_Evolution_FolderSelectionListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_FolderSelectionListener;
   extern CORBA_unsigned_long GNOME_Evolution_FolderSelectionListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_0)
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_FolderSelectionListener_struct;
#define TC_GNOME_Evolution_FolderSelectionListener ((CORBA_TypeCode)&TC_GNOME_Evolution_FolderSelectionListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Shell) && !defined(_GNOME_Evolution_Shell_defined)
#define ORBIT_DECL_GNOME_Evolution_Shell 1
#define _GNOME_Evolution_Shell_defined 1
#define GNOME_Evolution_Shell__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Shell;
   extern CORBA_unsigned_long GNOME_Evolution_Shell__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_struct;
#define TC_GNOME_Evolution_Shell ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_struct)
#endif
#endif
#undef ex_GNOME_Evolution_Shell_NotReady
#define ex_GNOME_Evolution_Shell_NotReady "IDL:GNOME/Evolution/Shell/NotReady:1.0"
#if !defined(_GNOME_Evolution_Shell_NotReady_defined)
#define _GNOME_Evolution_Shell_NotReady_defined 1
   typedef struct GNOME_Evolution_Shell_NotReady_type GNOME_Evolution_Shell_NotReady;
   struct GNOME_Evolution_Shell_NotReady_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotReady_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_NotReady_struct;
#define TC_GNOME_Evolution_Shell_NotReady ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_NotReady_struct)
#endif
#define GNOME_Evolution_Shell_NotReady__alloc() ((GNOME_Evolution_Shell_NotReady *)ORBit_small_alloc (TC_GNOME_Evolution_Shell_NotReady))
#define GNOME_Evolution_Shell_NotReady__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shell_NotReady,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shell_NotFound
#define ex_GNOME_Evolution_Shell_NotFound "IDL:GNOME/Evolution/Shell/NotFound:1.0"
#if !defined(_GNOME_Evolution_Shell_NotFound_defined)
#define _GNOME_Evolution_Shell_NotFound_defined 1
   typedef struct GNOME_Evolution_Shell_NotFound_type GNOME_Evolution_Shell_NotFound;
   struct GNOME_Evolution_Shell_NotFound_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_NotFound_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_NotFound_struct;
#define TC_GNOME_Evolution_Shell_NotFound ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_NotFound_struct)
#endif
#define GNOME_Evolution_Shell_NotFound__alloc() ((GNOME_Evolution_Shell_NotFound *)ORBit_small_alloc (TC_GNOME_Evolution_Shell_NotFound))
#define GNOME_Evolution_Shell_NotFound__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shell_NotFound,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shell_UnsupportedSchema
#define ex_GNOME_Evolution_Shell_UnsupportedSchema "IDL:GNOME/Evolution/Shell/UnsupportedSchema:1.0"
#if !defined(_GNOME_Evolution_Shell_UnsupportedSchema_defined)
#define _GNOME_Evolution_Shell_UnsupportedSchema_defined 1
   typedef struct GNOME_Evolution_Shell_UnsupportedSchema_type GNOME_Evolution_Shell_UnsupportedSchema;
   struct GNOME_Evolution_Shell_UnsupportedSchema_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_UnsupportedSchema_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_UnsupportedSchema_struct;
#define TC_GNOME_Evolution_Shell_UnsupportedSchema ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_UnsupportedSchema_struct)
#endif
#define GNOME_Evolution_Shell_UnsupportedSchema__alloc() ((GNOME_Evolution_Shell_UnsupportedSchema *)ORBit_small_alloc (TC_GNOME_Evolution_Shell_UnsupportedSchema))
#define GNOME_Evolution_Shell_UnsupportedSchema__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shell_UnsupportedSchema,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shell_InvalidURI
#define ex_GNOME_Evolution_Shell_InvalidURI "IDL:GNOME/Evolution/Shell/InvalidURI:1.0"
#if !defined(_GNOME_Evolution_Shell_InvalidURI_defined)
#define _GNOME_Evolution_Shell_InvalidURI_defined 1
   typedef struct GNOME_Evolution_Shell_InvalidURI_type GNOME_Evolution_Shell_InvalidURI;
   struct GNOME_Evolution_Shell_InvalidURI_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InvalidURI_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_InvalidURI_struct;
#define TC_GNOME_Evolution_Shell_InvalidURI ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_InvalidURI_struct)
#endif
#define GNOME_Evolution_Shell_InvalidURI__alloc() ((GNOME_Evolution_Shell_InvalidURI *)ORBit_small_alloc (TC_GNOME_Evolution_Shell_InvalidURI))
#define GNOME_Evolution_Shell_InvalidURI__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shell_InvalidURI,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shell_InternalError
#define ex_GNOME_Evolution_Shell_InternalError "IDL:GNOME/Evolution/Shell/InternalError:1.0"
#if !defined(_GNOME_Evolution_Shell_InternalError_defined)
#define _GNOME_Evolution_Shell_InternalError_defined 1
   typedef struct GNOME_Evolution_Shell_InternalError_type GNOME_Evolution_Shell_InternalError;
   struct GNOME_Evolution_Shell_InternalError_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_InternalError_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_InternalError_struct;
#define TC_GNOME_Evolution_Shell_InternalError ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_InternalError_struct)
#endif
#define GNOME_Evolution_Shell_InternalError__alloc() ((GNOME_Evolution_Shell_InternalError *)ORBit_small_alloc (TC_GNOME_Evolution_Shell_InternalError))
#define GNOME_Evolution_Shell_InternalError__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shell_InternalError,(m),(d))
#endif
#undef ex_GNOME_Evolution_Shell_Busy
#define ex_GNOME_Evolution_Shell_Busy "IDL:GNOME/Evolution/Shell/Busy:1.0"
#if !defined(_GNOME_Evolution_Shell_Busy_defined)
#define _GNOME_Evolution_Shell_Busy_defined 1
   typedef struct GNOME_Evolution_Shell_Busy_type GNOME_Evolution_Shell_Busy;
   struct GNOME_Evolution_Shell_Busy_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_Busy_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_Busy_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_Busy_struct;
#define TC_GNOME_Evolution_Shell_Busy ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_Busy_struct)
#endif
#define GNOME_Evolution_Shell_Busy__alloc() ((GNOME_Evolution_Shell_Busy *)ORBit_small_alloc (TC_GNOME_Evolution_Shell_Busy))
#define GNOME_Evolution_Shell_Busy__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Shell_Busy,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'v'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'u'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'n'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'v'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'u'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_GNOME_Evolution_Shell_FolderTypeNameList_defined)
#define _GNOME_Evolution_Shell_FolderTypeNameList_defined 1
   typedef CORBA_sequence_CORBA_string GNOME_Evolution_Shell_FolderTypeNameList;
#define GNOME_Evolution_Shell_FolderTypeNameList_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define GNOME_Evolution_Shell_FolderTypeNameList_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_0)
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Shell_FolderTypeNameList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Shell_FolderTypeNameList_struct;
#define TC_GNOME_Evolution_Shell_FolderTypeNameList ((CORBA_TypeCode)&TC_GNOME_Evolution_Shell_FolderTypeNameList_struct)
#endif
#define GNOME_Evolution_Shell_FolderTypeNameList__alloc() ((GNOME_Evolution_Shell_FolderTypeNameList *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define GNOME_Evolution_Shell_FolderTypeNameList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define GNOME_Evolution_Shell_FolderTypeNameList_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_FolderSelectionListener) && !defined(_GNOME_Evolution_FolderSelectionListener_defined)
#define ORBIT_DECL_GNOME_Evolution_FolderSelectionListener 1
#define _GNOME_Evolution_FolderSelectionListener_defined 1
#define GNOME_Evolution_FolderSelectionListener__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_FolderSelectionListener;
   extern CORBA_unsigned_long GNOME_Evolution_FolderSelectionListener__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_0)
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_5 't'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_FolderSelectionListener_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_FolderSelectionListener_struct;
#define TC_GNOME_Evolution_FolderSelectionListener ((CORBA_TypeCode)&TC_GNOME_Evolution_FolderSelectionListener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Wizard) && !defined(_GNOME_Evolution_Wizard_defined)
#define ORBIT_DECL_GNOME_Evolution_Wizard 1
#define _GNOME_Evolution_Wizard_defined 1
#define GNOME_Evolution_Wizard__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Wizard;
   extern CORBA_unsigned_long GNOME_Evolution_Wizard__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Wizard_0)
#define TC_IMPL_TC_GNOME_Evolution_Wizard_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Wizard_struct;
#define TC_GNOME_Evolution_Wizard ((CORBA_TypeCode)&TC_GNOME_Evolution_Wizard_struct)
#endif
#endif
#if !defined(_GNOME_Evolution_Wizard_Page_defined)
#define _GNOME_Evolution_Wizard_Page_defined 1
   typedef struct GNOME_Evolution_Wizard_Page_type GNOME_Evolution_Wizard_Page;
   struct GNOME_Evolution_Wizard_Page_type {
      CORBA_string title;
      GNOME_Evolution_Icon icon;
      Bonobo_Control control;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Wizard_Page_0)
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Page_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Wizard_Page_struct;
#define TC_GNOME_Evolution_Wizard_Page ((CORBA_TypeCode)&TC_GNOME_Evolution_Wizard_Page_struct)
#endif
#define GNOME_Evolution_Wizard_Page__alloc() ((GNOME_Evolution_Wizard_Page *)ORBit_small_alloc (TC_GNOME_Evolution_Wizard_Page))
#define GNOME_Evolution_Wizard_Page__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Wizard_Page,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Wizard_Page)
#define ORBIT_DECL_CORBA_sequence_GNOME_Evolution_Wizard_Page 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_0 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_1 'v'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_2 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_4 'u'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_5 't'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_6 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_7 'o'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Evolution_Wizard_Page_8 'n'
#if !defined(_CORBA_sequence_GNOME_Evolution_Wizard_Page_defined)
#define _CORBA_sequence_GNOME_Evolution_Wizard_Page_defined 1
   typedef struct {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Evolution_Wizard_Page *_buffer;
      CORBA_boolean _release;
   } CORBA_sequence_GNOME_Evolution_Wizard_Page;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_0 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_1 'v'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_2 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_4 'u'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_5 't'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_6 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_7 'o'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_struct;
#define TC_CORBA_sequence_GNOME_Evolution_Wizard_Page ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Evolution_Wizard_Page_struct)
#endif
#define CORBA_sequence_GNOME_Evolution_Wizard_Page__alloc() ((CORBA_sequence_GNOME_Evolution_Wizard_Page *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page))
#define CORBA_sequence_GNOME_Evolution_Wizard_Page__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page,(m),(d))
#define CORBA_sequence_GNOME_Evolution_Wizard_Page_allocbuf(l) ((GNOME_Evolution_Wizard_Page*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page, (l)))
#define CORBA_sequence_GNOME_Evolution_Wizard_Page_allocbuf(l) ((GNOME_Evolution_Wizard_Page*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page, (l)))
#endif
#if !defined(_GNOME_Evolution_Wizard_PageList_defined)
#define _GNOME_Evolution_Wizard_PageList_defined 1
   typedef CORBA_sequence_GNOME_Evolution_Wizard_Page GNOME_Evolution_Wizard_PageList;
#define GNOME_Evolution_Wizard_PageList_marshal(x,y,z) CORBA_sequence_GNOME_Evolution_Wizard_Page_marshal((x),(y),(z))
#define GNOME_Evolution_Wizard_PageList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Evolution_Wizard_Page_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_0)
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_PageList_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Wizard_PageList_struct;
#define TC_GNOME_Evolution_Wizard_PageList ((CORBA_TypeCode)&TC_GNOME_Evolution_Wizard_PageList_struct)
#endif
#define GNOME_Evolution_Wizard_PageList__alloc() ((GNOME_Evolution_Wizard_PageList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page))
#define GNOME_Evolution_Wizard_PageList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page,(m),(d))
#define GNOME_Evolution_Wizard_PageList_allocbuf(l) ((GNOME_Evolution_Wizard_Page*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Evolution_Wizard_Page, (l)))
#endif
#if !defined(_GNOME_Evolution_Wizard_Action_defined)
#define _GNOME_Evolution_Wizard_Action_defined 1
   typedef enum {
      GNOME_Evolution_Wizard_NEXT,
      GNOME_Evolution_Wizard_PREPARE,
      GNOME_Evolution_Wizard_BACK,
      GNOME_Evolution_Wizard_FINISH,
      GNOME_Evolution_Wizard_CANCEL,
      GNOME_Evolution_Wizard_HELP
   } GNOME_Evolution_Wizard_Action;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Wizard_Action_0)
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_Action_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Wizard_Action_struct;
#define TC_GNOME_Evolution_Wizard_Action ((CORBA_TypeCode)&TC_GNOME_Evolution_Wizard_Action_struct)
#endif
#endif
#undef ex_GNOME_Evolution_Wizard_NoPage
#define ex_GNOME_Evolution_Wizard_NoPage "IDL:GNOME/Evolution/Wizard/NoPage:1.0"
#if !defined(_GNOME_Evolution_Wizard_NoPage_defined)
#define _GNOME_Evolution_Wizard_NoPage_defined 1
   typedef struct GNOME_Evolution_Wizard_NoPage_type GNOME_Evolution_Wizard_NoPage;
   struct GNOME_Evolution_Wizard_NoPage_type {
      int dummy;
   };
#if !defined(TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_0)
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Wizard_NoPage_8 'n'
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Wizard_NoPage_struct;
#define TC_GNOME_Evolution_Wizard_NoPage ((CORBA_TypeCode)&TC_GNOME_Evolution_Wizard_NoPage_struct)
#endif
#define GNOME_Evolution_Wizard_NoPage__alloc() ((GNOME_Evolution_Wizard_NoPage *)ORBit_small_alloc (TC_GNOME_Evolution_Wizard_NoPage))
#define GNOME_Evolution_Wizard_NoPage__freekids(m,d) ORBit_small_freekids (TC_GNOME_Evolution_Wizard_NoPage,(m),(d))
#endif
   /** POA structures **/
#ifndef _defined_POA_GNOME_Evolution_Activity
#define _defined_POA_GNOME_Evolution_Activity 1
   typedef struct {
      void *_private;
      void (*operationStarted) (PortableServer_Servant _servant, const CORBA_char * component_id, const GNOME_Evolution_AnimatedIcon * icon, const CORBA_char * information, const CORBA_boolean cancellable, const Bonobo_Listener event_listener, GNOME_Evolution_Activity_ActivityId * activity_id, CORBA_boolean * suggest_display, CORBA_Environment * ev);
      void (*operationProgressing) (PortableServer_Servant _servant, const GNOME_Evolution_Activity_ActivityId activity, const CORBA_char * information, const CORBA_float progress, CORBA_Environment * ev);
      void (*operationFinished) (PortableServer_Servant _servant, const GNOME_Evolution_Activity_ActivityId activity, CORBA_Environment * ev);
       GNOME_Evolution_Activity_DialogAction(*requestDialog) (PortableServer_Servant _servant, const GNOME_Evolution_Activity_ActivityId activity, const GNOME_Evolution_Activity_DialogType dialog_type, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Activity__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Activity__epv *GNOME_Evolution_Activity_epv;
   } POA_GNOME_Evolution_Activity__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Activity__vepv *vepv;
   } POA_GNOME_Evolution_Activity;
   extern void POA_GNOME_Evolution_Activity__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Activity__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Activity */
#ifndef _defined_POA_GNOME_Evolution_ConfigControl
#define _defined_POA_GNOME_Evolution_ConfigControl 1
   typedef struct {
      void *_private;
      void (*apply) (PortableServer_Servant _servant, CORBA_Environment * ev);
       Bonobo_Control(*_get_control) (PortableServer_Servant _servant, CORBA_Environment * ev);
       Bonobo_EventSource(*_get_eventSource) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ConfigControl__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_ConfigControl__epv *GNOME_Evolution_ConfigControl_epv;
   } POA_GNOME_Evolution_ConfigControl__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ConfigControl__vepv *vepv;
   } POA_GNOME_Evolution_ConfigControl;
   extern void POA_GNOME_Evolution_ConfigControl__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ConfigControl__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ConfigControl */
#ifndef _defined_POA_GNOME_Evolution_Session
#define _defined_POA_GNOME_Evolution_Session 1
   typedef struct {
      void *_private;
      void (*saveConfiguration) (PortableServer_Servant _servant, const CORBA_char * prefix, CORBA_Environment * ev);
      void (*loadConfiguration) (PortableServer_Servant _servant, const CORBA_char * prefix, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Session__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Session__epv *GNOME_Evolution_Session_epv;
   } POA_GNOME_Evolution_Session__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Session__vepv *vepv;
   } POA_GNOME_Evolution_Session;
   extern void POA_GNOME_Evolution_Session__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Session__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Session */
#ifndef _defined_POA_GNOME_Evolution_ShellComponent
#define _defined_POA_GNOME_Evolution_ShellComponent 1
   typedef struct {
      void *_private;
      GNOME_Evolution_FolderTypeList *(*_get_supportedTypes) (PortableServer_Servant _servant, CORBA_Environment * ev);
      GNOME_Evolution_URISchemaList *(*_get_externalUriSchemas) (PortableServer_Servant _servant, CORBA_Environment * ev);
      GNOME_Evolution_UserCreatableItemTypeList *(*_get_userCreatableItemTypes) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*setOwner) (PortableServer_Servant _servant, const GNOME_Evolution_Shell shell, const CORBA_char * evolution_homedir, CORBA_Environment * ev);
      void (*unsetOwner) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*interactive) (PortableServer_Servant _servant, const CORBA_boolean now_interactive, const CORBA_unsigned_long new_view_xid, CORBA_Environment * ev);
      void (*debug) (PortableServer_Servant _servant, const CORBA_char * log_path, CORBA_Environment * ev);
       Bonobo_Control(*createView) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * type, const CORBA_char * view_info, CORBA_Environment * ev);
      void (*handleExternalURI) (PortableServer_Servant _servant, const CORBA_char * external_uri, CORBA_Environment * ev);
      void (*createFolderAsync) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
      void (*removeFolderAsync) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
      void (*xferFolderAsync) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * source_physical_uri, const CORBA_char * destination_physical_uri, const CORBA_char * type, const CORBA_boolean remove_source, CORBA_Environment * ev);
      void (*populateFolderContextMenu) (PortableServer_Servant _servant, const Bonobo_UIContainer uih, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
      void (*unpopulateFolderContextMenu) (PortableServer_Servant _servant, const Bonobo_UIContainer uih, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
      void (*userCreateNewItem) (PortableServer_Servant _servant, const CORBA_char * id, const CORBA_char * parent_folder_physical_uri, const CORBA_char * parent_folder_type, CORBA_Environment * ev);
      void (*sendReceive) (PortableServer_Servant _servant, const CORBA_boolean show_dialog, CORBA_Environment * ev);
      void (*requestQuit) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ShellComponent__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_ShellComponent__epv *GNOME_Evolution_ShellComponent_epv;
   } POA_GNOME_Evolution_ShellComponent__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ShellComponent__vepv *vepv;
   } POA_GNOME_Evolution_ShellComponent;
   extern void POA_GNOME_Evolution_ShellComponent__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ShellComponent__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ShellComponent
				 *  */
#ifndef _defined_POA_GNOME_Evolution_ShellComponentListener
#define _defined_POA_GNOME_Evolution_ShellComponentListener 1
   typedef struct {
      void *_private;
      void (*notifyResult) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener_Result result, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ShellComponentListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_ShellComponentListener__epv *GNOME_Evolution_ShellComponentListener_epv;
   } POA_GNOME_Evolution_ShellComponentListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ShellComponentListener__vepv *vepv;
   } POA_GNOME_Evolution_ShellComponentListener;
   extern void POA_GNOME_Evolution_ShellComponentListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ShellComponentListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ShellComponent
				 * Listener */
#ifndef _defined_POA_GNOME_Evolution_ShellComponentDnd_SourceFolder
#define _defined_POA_GNOME_Evolution_ShellComponentDnd_SourceFolder 1
   typedef struct {
      void *_private;
      void (*beginDrag) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * folder_type, GNOME_Evolution_ShellComponentDnd_ActionSet * possible_actions, GNOME_Evolution_ShellComponentDnd_Action * suggested_action, CORBA_Environment * ev);
      void (*getData) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, const GNOME_Evolution_ShellComponentDnd_Action action, const CORBA_char * dnd_type, GNOME_Evolution_ShellComponentDnd_Data ** data, CORBA_Environment * ev);
      void (*deleteData) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, CORBA_Environment * ev);
      void (*endDrag) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ShellComponentDnd_SourceFolder__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_ShellComponentDnd_SourceFolder__epv *GNOME_Evolution_ShellComponentDnd_SourceFolder_epv;
   } POA_GNOME_Evolution_ShellComponentDnd_SourceFolder__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ShellComponentDnd_SourceFolder__vepv *vepv;
   } POA_GNOME_Evolution_ShellComponentDnd_SourceFolder;
   extern void POA_GNOME_Evolution_ShellComponentDnd_SourceFolder__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ShellComponentDnd_SourceFolder__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ShellComponent
				 * Dnd_SourceFolder */
#ifndef _defined_POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder
#define _defined_POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder 1
   typedef struct {
      void *_private;
       CORBA_boolean(*handleMotion) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * folder_type, const GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context * destination_context, GNOME_Evolution_ShellComponentDnd_Action * suggested_action, CORBA_Environment * ev);
       CORBA_boolean(*handleDrop) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * folder_type, const GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context * destination_context, const GNOME_Evolution_ShellComponentDnd_Action action, const GNOME_Evolution_ShellComponentDnd_Data * data, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder__epv *GNOME_Evolution_ShellComponentDnd_DestinationFolder_epv;
   } POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder__vepv *vepv;
   } POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder;
   extern void POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ShellComponent
				 * Dnd_DestinationFolder */
#ifndef _defined_POA_GNOME_Evolution_OfflineProgressListener
#define _defined_POA_GNOME_Evolution_OfflineProgressListener 1
   typedef struct {
      void *_private;
      void (*updateProgress) (PortableServer_Servant _servant, const GNOME_Evolution_ConnectionList * current_active_connections, CORBA_Environment * ev);
   } POA_GNOME_Evolution_OfflineProgressListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_OfflineProgressListener__epv *GNOME_Evolution_OfflineProgressListener_epv;
   } POA_GNOME_Evolution_OfflineProgressListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_OfflineProgressListener__vepv *vepv;
   } POA_GNOME_Evolution_OfflineProgressListener;
   extern void POA_GNOME_Evolution_OfflineProgressListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_OfflineProgressListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_OfflineProgres
				 * sListener */
#ifndef _defined_POA_GNOME_Evolution_SyncFolderProgressListener
#define _defined_POA_GNOME_Evolution_SyncFolderProgressListener 1
   typedef struct {
      void *_private;
      void (*updateProgress) (PortableServer_Servant _servant, const CORBA_float progress, CORBA_Environment * ev);
      void (*reportSuccess) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*reportFailure) (PortableServer_Servant _servant, const CORBA_char * message, CORBA_Environment * ev);
   } POA_GNOME_Evolution_SyncFolderProgressListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_SyncFolderProgressListener__epv *GNOME_Evolution_SyncFolderProgressListener_epv;
   } POA_GNOME_Evolution_SyncFolderProgressListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_SyncFolderProgressListener__vepv *vepv;
   } POA_GNOME_Evolution_SyncFolderProgressListener;
   extern void POA_GNOME_Evolution_SyncFolderProgressListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_SyncFolderProgressListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_SyncFolderProg
				 * ressListener */
#ifndef _defined_POA_GNOME_Evolution_Offline
#define _defined_POA_GNOME_Evolution_Offline 1
   typedef struct {
      void *_private;
       CORBA_boolean(*_get_isOffline) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*_set_isOffline) (PortableServer_Servant _servant, const CORBA_boolean value, CORBA_Environment * ev);
      void (*prepareForOffline) (PortableServer_Servant _servant, GNOME_Evolution_ConnectionList ** active_connection_list, CORBA_Environment * ev);
      void (*syncFolder) (PortableServer_Servant _servant, const GNOME_Evolution_Folder * folder, const GNOME_Evolution_SyncFolderProgressListener listener, CORBA_Environment * ev);
      void (*cancelSyncFolder) (PortableServer_Servant _servant, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev);
      void (*goOffline) (PortableServer_Servant _servant, const GNOME_Evolution_OfflineProgressListener listener, CORBA_Environment * ev);
      void (*goOnline) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Offline__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Offline__epv *GNOME_Evolution_Offline_epv;
   } POA_GNOME_Evolution_Offline__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Offline__vepv *vepv;
   } POA_GNOME_Evolution_Offline;
   extern void POA_GNOME_Evolution_Offline__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Offline__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Offline */
#ifndef _defined_POA_GNOME_Evolution_ShellView
#define _defined_POA_GNOME_Evolution_ShellView 1
   typedef struct {
      void *_private;
      void (*setMessage) (PortableServer_Servant _servant, const CORBA_char * message, const CORBA_boolean busy, CORBA_Environment * ev);
      void (*unsetMessage) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*changeCurrentView) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev);
      void (*setTitle) (PortableServer_Servant _servant, const CORBA_char * title, CORBA_Environment * ev);
      void (*setFolderBarLabel) (PortableServer_Servant _servant, const CORBA_char * text, CORBA_Environment * ev);
      void (*showSettings) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_GNOME_Evolution_ShellView__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_ShellView__epv *GNOME_Evolution_ShellView_epv;
   } POA_GNOME_Evolution_ShellView__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_ShellView__vepv *vepv;
   } POA_GNOME_Evolution_ShellView;
   extern void POA_GNOME_Evolution_ShellView__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_ShellView__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_ShellView */
#ifndef _defined_POA_GNOME_Evolution_Shortcuts
#define _defined_POA_GNOME_Evolution_Shortcuts 1
   typedef struct {
      void *_private;
      GNOME_Evolution_Shortcuts_GroupList *(*_get_groups) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*add) (PortableServer_Servant _servant, const CORBA_short group_num, const CORBA_short position, const GNOME_Evolution_Shortcuts_Shortcut * shortcut, CORBA_Environment * ev);
      void (*remove) (PortableServer_Servant _servant, const CORBA_short group_num, const CORBA_short item_num, CORBA_Environment * ev);
      GNOME_Evolution_Shortcuts_Shortcut *(*get) (PortableServer_Servant _servant, const CORBA_short group_num, const CORBA_short item_num, CORBA_Environment * ev);
      void (*addGroup) (PortableServer_Servant _servant, const CORBA_short position, const CORBA_char * name, CORBA_Environment * ev);
      void (*removeGroup) (PortableServer_Servant _servant, const CORBA_short group_num, CORBA_Environment * ev);
      GNOME_Evolution_Shortcuts_Group *(*getGroup) (PortableServer_Servant _servant, const CORBA_short group_num, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Shortcuts__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Shortcuts__epv *GNOME_Evolution_Shortcuts_epv;
   } POA_GNOME_Evolution_Shortcuts__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Shortcuts__vepv *vepv;
   } POA_GNOME_Evolution_Shortcuts;
   extern void POA_GNOME_Evolution_Shortcuts__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Shortcuts__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Shortcuts */
#ifndef _defined_POA_GNOME_Evolution_Storage
#define _defined_POA_GNOME_Evolution_Storage 1
   typedef struct {
      void *_private;
       CORBA_string(*_get_name) (PortableServer_Servant _servant, CORBA_Environment * ev);
       CORBA_boolean(*_get_hasSharedFolders) (PortableServer_Servant _servant, CORBA_Environment * ev);
      GNOME_Evolution_Folder *(*getFolderAtPath) (PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment * ev);
      GNOME_Evolution_FolderList *(*_get_folderList) (PortableServer_Servant _servant, CORBA_Environment * ev);
      GNOME_Evolution_Storage_FolderPropertyItemList *(*_get_folderPropertyItems) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*asyncCreateFolder) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * type, const CORBA_char * description, const CORBA_char * parent_physical_uri, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*asyncRemoveFolder) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * physical_uri, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*asyncXferFolder) (PortableServer_Servant _servant, const CORBA_char * source_path, const CORBA_char * destination_path, const CORBA_boolean remove_source, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*asyncOpenFolder) (PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*updateFolder) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_long unread_count, CORBA_Environment * ev);
      void (*asyncDiscoverSharedFolder) (PortableServer_Servant _servant, const CORBA_char * user, const CORBA_char * folder_name, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*cancelDiscoverSharedFolder) (PortableServer_Servant _servant, const CORBA_char * user, const CORBA_char * folder_name, CORBA_Environment * ev);
      void (*asyncRemoveSharedFolder) (PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*addListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageListener listener, CORBA_Environment * ev);
      void (*removeListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageListener listener, CORBA_Environment * ev);
      void (*showFolderProperties) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_short itemNumber, const CORBA_long parentWindowId, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Storage__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Storage__epv *GNOME_Evolution_Storage_epv;
   } POA_GNOME_Evolution_Storage__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Storage__vepv *vepv;
   } POA_GNOME_Evolution_Storage;
   extern void POA_GNOME_Evolution_Storage__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Storage__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Storage */
#ifndef _defined_POA_GNOME_Evolution_StorageListener
#define _defined_POA_GNOME_Evolution_StorageListener 1
   typedef struct {
      void *_private;
      void (*notifyDestroyed) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*notifyFolderCreated) (PortableServer_Servant _servant, const CORBA_char * path, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev);
      void (*notifyFolderUpdated) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_long unread_count, CORBA_Environment * ev);
      void (*notifyFolderRemoved) (PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment * ev);
      void (*notifyHasSubfolders) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * message, CORBA_Environment * ev);
   } POA_GNOME_Evolution_StorageListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_StorageListener__epv *GNOME_Evolution_StorageListener_epv;
   } POA_GNOME_Evolution_StorageListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_StorageListener__vepv *vepv;
   } POA_GNOME_Evolution_StorageListener;
   extern void POA_GNOME_Evolution_StorageListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_StorageListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_StorageListene
				 * r */
#ifndef _defined_POA_GNOME_Evolution_StorageRegistry
#define _defined_POA_GNOME_Evolution_StorageRegistry 1
   typedef struct {
      void *_private;
       GNOME_Evolution_StorageListener(*addStorage) (PortableServer_Servant _servant, const GNOME_Evolution_Storage storage, const CORBA_char * name, CORBA_Environment * ev);
      GNOME_Evolution_StorageRegistry_StorageList *(*getStorageList) (PortableServer_Servant _servant, CORBA_Environment * ev);
       GNOME_Evolution_Storage(*getStorageByName) (PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment * ev);
      void (*removeStorageByName) (PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment * ev);
      void (*addListener) (PortableServer_Servant _servant, const Bonobo_Listener listener, CORBA_Environment * ev);
      void (*removeListener) (PortableServer_Servant _servant, const Bonobo_Listener listener, CORBA_Environment * ev);
      GNOME_Evolution_Folder *(*getFolderByUri) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev);
   } POA_GNOME_Evolution_StorageRegistry__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_StorageRegistry__epv *GNOME_Evolution_StorageRegistry_epv;
   } POA_GNOME_Evolution_StorageRegistry__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_StorageRegistry__vepv *vepv;
   } POA_GNOME_Evolution_StorageRegistry;
   extern void POA_GNOME_Evolution_StorageRegistry__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_StorageRegistry__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_StorageRegistr
				 * y */
#ifndef _defined_POA_GNOME_Evolution_StorageSetViewListener
#define _defined_POA_GNOME_Evolution_StorageSetViewListener 1
   typedef struct {
      void *_private;
      void (*notifyFolderSelected) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev);
      void (*notifyFolderToggled) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_GNOME_Evolution_StorageSetViewListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_StorageSetViewListener__epv *GNOME_Evolution_StorageSetViewListener_epv;
   } POA_GNOME_Evolution_StorageSetViewListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_StorageSetViewListener__vepv *vepv;
   } POA_GNOME_Evolution_StorageSetViewListener;
   extern void POA_GNOME_Evolution_StorageSetViewListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_StorageSetViewListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_StorageSetView
				 * Listener */
#ifndef _defined_POA_GNOME_Evolution_StorageSetView
#define _defined_POA_GNOME_Evolution_StorageSetView 1
   typedef struct {
      void *_private;
       CORBA_boolean(*_get_showFolders) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*_set_showFolders) (PortableServer_Servant _servant, const CORBA_boolean value, CORBA_Environment * ev);
       CORBA_boolean(*_get_showCheckboxes) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*_set_showCheckboxes) (PortableServer_Servant _servant, const CORBA_boolean value, CORBA_Environment * ev);
      GNOME_Evolution_FolderList *(*_get_checkedFolders) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*_set_checkedFolders) (PortableServer_Servant _servant, const GNOME_Evolution_FolderList * value, CORBA_Environment * ev);
      void (*addListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageSetViewListener listener, CORBA_Environment * ev);
      void (*removeListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageSetViewListener listener, CORBA_Environment * ev);
   } POA_GNOME_Evolution_StorageSetView__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_StorageSetView__epv *GNOME_Evolution_StorageSetView_epv;
   } POA_GNOME_Evolution_StorageSetView__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_StorageSetView__vepv *vepv;
   } POA_GNOME_Evolution_StorageSetView;
   extern void POA_GNOME_Evolution_StorageSetView__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_StorageSetView__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_StorageSetView
				 *  */
#ifndef _defined_POA_GNOME_Evolution_Shell
#define _defined_POA_GNOME_Evolution_Shell 1
   typedef struct {
      void *_private;
       GNOME_Evolution_ShellComponent(*getComponentByType) (PortableServer_Servant _servant, const CORBA_char * type, CORBA_Environment * ev);
      GNOME_Evolution_Icon *(*getIconByType) (PortableServer_Servant _servant, const CORBA_char * type, const CORBA_boolean mini, CORBA_Environment * ev);
       GNOME_Evolution_ShellView(*createNewView) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev);
      void (*handleURI) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev);
      void (*selectUserFolder) (PortableServer_Servant _servant, const CORBA_long_long parent_xid, const GNOME_Evolution_FolderSelectionListener listener, const CORBA_char * title, const CORBA_char * default_folder, const GNOME_Evolution_Shell_FolderTypeNameList * possible_types, CORBA_Environment * ev);
       GNOME_Evolution_Storage(*getLocalStorage) (PortableServer_Servant _servant, CORBA_Environment * ev);
       Bonobo_Control(*createStorageSetView) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*setLineStatus) (PortableServer_Servant _servant, const CORBA_boolean online, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Shell__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Shell__epv *GNOME_Evolution_Shell_epv;
   } POA_GNOME_Evolution_Shell__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Shell__vepv *vepv;
   } POA_GNOME_Evolution_Shell;
   extern void POA_GNOME_Evolution_Shell__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Shell__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Shell */
#ifndef _defined_POA_GNOME_Evolution_FolderSelectionListener
#define _defined_POA_GNOME_Evolution_FolderSelectionListener 1
   typedef struct {
      void *_private;
      void (*notifySelected) (PortableServer_Servant _servant, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev);
      void (*notifyCanceled) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_GNOME_Evolution_FolderSelectionListener__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_FolderSelectionListener__epv *GNOME_Evolution_FolderSelectionListener_epv;
   } POA_GNOME_Evolution_FolderSelectionListener__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_FolderSelectionListener__vepv *vepv;
   } POA_GNOME_Evolution_FolderSelectionListener;
   extern void POA_GNOME_Evolution_FolderSelectionListener__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_FolderSelectionListener__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_FolderSelectio
				 * nListener */
#ifndef _defined_POA_GNOME_Evolution_Wizard
#define _defined_POA_GNOME_Evolution_Wizard 1
   typedef struct {
      void *_private;
      GNOME_Evolution_Wizard_PageList *(*_get_pages) (PortableServer_Servant _servant, CORBA_Environment * ev);
      void (*notifyAction) (PortableServer_Servant _servant, const CORBA_long pagenumber, const GNOME_Evolution_Wizard_Action action, CORBA_Environment * ev);
   } POA_GNOME_Evolution_Wizard__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_Wizard__epv *GNOME_Evolution_Wizard_epv;
   } POA_GNOME_Evolution_Wizard__vepv;
   typedef struct {
      void *_private;
      POA_GNOME_Evolution_Wizard__vepv *vepv;
   } POA_GNOME_Evolution_Wizard;
   extern void POA_GNOME_Evolution_Wizard__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Wizard__fini(PortableServer_Servant servant, CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Wizard */
   /** skel prototypes **/
   void _ORBIT_skel_small_GNOME_Evolution_Activity_operationStarted(POA_GNOME_Evolution_Activity * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_operationStarted) (PortableServer_Servant _servant, const CORBA_char * component_id, const GNOME_Evolution_AnimatedIcon * icon, const CORBA_char * information, const CORBA_boolean cancellable, const Bonobo_Listener event_listener, GNOME_Evolution_Activity_ActivityId * activity_id, CORBA_boolean * suggest_display, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Activity_operationProgressing(POA_GNOME_Evolution_Activity * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_operationProgressing) (PortableServer_Servant _servant, const GNOME_Evolution_Activity_ActivityId activity, const CORBA_char * information, const CORBA_float progress, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Activity_operationFinished(POA_GNOME_Evolution_Activity * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_operationFinished) (PortableServer_Servant _servant, const GNOME_Evolution_Activity_ActivityId activity, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Activity_requestDialog(POA_GNOME_Evolution_Activity * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Activity_DialogAction(*_impl_requestDialog) (PortableServer_Servant _servant, const GNOME_Evolution_Activity_ActivityId activity, const GNOME_Evolution_Activity_DialogType dialog_type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ConfigControl_apply(POA_GNOME_Evolution_ConfigControl * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_apply) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ConfigControl__get_control(POA_GNOME_Evolution_ConfigControl * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Bonobo_Control(*_impl__get_control) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ConfigControl__get_eventSource(POA_GNOME_Evolution_ConfigControl * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Bonobo_EventSource(*_impl__get_eventSource) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Session_saveConfiguration(POA_GNOME_Evolution_Session * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_saveConfiguration) (PortableServer_Servant _servant, const CORBA_char * prefix, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Session_loadConfiguration(POA_GNOME_Evolution_Session * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_loadConfiguration) (PortableServer_Servant _servant, const CORBA_char * prefix, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent__get_supportedTypes(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_FolderTypeList * (*_impl__get_supportedTypes) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent__get_externalUriSchemas(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_URISchemaList * (*_impl__get_externalUriSchemas) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent__get_userCreatableItemTypes(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_UserCreatableItemTypeList * (*_impl__get_userCreatableItemTypes) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_setOwner(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_setOwner) (PortableServer_Servant _servant, const GNOME_Evolution_Shell shell, const CORBA_char * evolution_homedir, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_unsetOwner(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_unsetOwner) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_interactive(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_interactive) (PortableServer_Servant _servant, const CORBA_boolean now_interactive, const CORBA_unsigned_long new_view_xid, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_debug(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_debug) (PortableServer_Servant _servant, const CORBA_char * log_path, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_createView(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Bonobo_Control(*_impl_createView) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * type, const CORBA_char * view_info, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_handleExternalURI(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_handleExternalURI) (PortableServer_Servant _servant, const CORBA_char * external_uri, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_createFolderAsync(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_createFolderAsync) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_removeFolderAsync(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_removeFolderAsync) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_xferFolderAsync(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_xferFolderAsync) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * source_physical_uri, const CORBA_char * destination_physical_uri, const CORBA_char * type, const CORBA_boolean remove_source, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_populateFolderContextMenu(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_populateFolderContextMenu) (PortableServer_Servant _servant, const Bonobo_UIContainer uih, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_unpopulateFolderContextMenu(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_unpopulateFolderContextMenu) (PortableServer_Servant _servant, const Bonobo_UIContainer uih, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_userCreateNewItem(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_userCreateNewItem) (PortableServer_Servant _servant, const CORBA_char * id, const CORBA_char * parent_folder_physical_uri, const CORBA_char * parent_folder_type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_sendReceive(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_sendReceive) (PortableServer_Servant _servant, const CORBA_boolean show_dialog, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponent_requestQuit(POA_GNOME_Evolution_ShellComponent * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_requestQuit) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentListener_notifyResult(POA_GNOME_Evolution_ShellComponentListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyResult) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentListener_Result result, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentDnd_SourceFolder_beginDrag(POA_GNOME_Evolution_ShellComponentDnd_SourceFolder * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_beginDrag) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * folder_type, GNOME_Evolution_ShellComponentDnd_ActionSet * possible_actions, GNOME_Evolution_ShellComponentDnd_Action * suggested_action, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentDnd_SourceFolder_getData(POA_GNOME_Evolution_ShellComponentDnd_SourceFolder * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_getData) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, const GNOME_Evolution_ShellComponentDnd_Action action, const CORBA_char * dnd_type, GNOME_Evolution_ShellComponentDnd_Data ** data, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentDnd_SourceFolder_deleteData(POA_GNOME_Evolution_ShellComponentDnd_SourceFolder * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_deleteData) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentDnd_SourceFolder_endDrag(POA_GNOME_Evolution_ShellComponentDnd_SourceFolder * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_endDrag) (PortableServer_Servant _servant, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentDnd_DestinationFolder_handleMotion(POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl_handleMotion) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * folder_type, const GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context * destination_context, GNOME_Evolution_ShellComponentDnd_Action * suggested_action, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellComponentDnd_DestinationFolder_handleDrop(POA_GNOME_Evolution_ShellComponentDnd_DestinationFolder * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl_handleDrop) (PortableServer_Servant _servant, const CORBA_char * physical_uri, const CORBA_char * folder_type, const GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context * destination_context, const GNOME_Evolution_ShellComponentDnd_Action action, const GNOME_Evolution_ShellComponentDnd_Data * data, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_OfflineProgressListener_updateProgress(POA_GNOME_Evolution_OfflineProgressListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_updateProgress) (PortableServer_Servant _servant, const GNOME_Evolution_ConnectionList * current_active_connections, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_SyncFolderProgressListener_updateProgress(POA_GNOME_Evolution_SyncFolderProgressListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_updateProgress) (PortableServer_Servant _servant, const CORBA_float progress, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_SyncFolderProgressListener_reportSuccess(POA_GNOME_Evolution_SyncFolderProgressListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_reportSuccess) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_SyncFolderProgressListener_reportFailure(POA_GNOME_Evolution_SyncFolderProgressListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_reportFailure) (PortableServer_Servant _servant, const CORBA_char * message, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline__get_isOffline(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl__get_isOffline) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline__set_isOffline(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl__set_isOffline) (PortableServer_Servant _servant, const CORBA_boolean value, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline_prepareForOffline(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_prepareForOffline) (PortableServer_Servant _servant, GNOME_Evolution_ConnectionList ** active_connection_list, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline_syncFolder(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_syncFolder) (PortableServer_Servant _servant, const GNOME_Evolution_Folder * folder, const GNOME_Evolution_SyncFolderProgressListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline_cancelSyncFolder(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_cancelSyncFolder) (PortableServer_Servant _servant, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline_goOffline(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_goOffline) (PortableServer_Servant _servant, const GNOME_Evolution_OfflineProgressListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Offline_goOnline(POA_GNOME_Evolution_Offline * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_goOnline) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellView_setMessage(POA_GNOME_Evolution_ShellView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_setMessage) (PortableServer_Servant _servant, const CORBA_char * message, const CORBA_boolean busy, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellView_unsetMessage(POA_GNOME_Evolution_ShellView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_unsetMessage) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellView_changeCurrentView(POA_GNOME_Evolution_ShellView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_changeCurrentView) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellView_setTitle(POA_GNOME_Evolution_ShellView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_setTitle) (PortableServer_Servant _servant, const CORBA_char * title, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellView_setFolderBarLabel(POA_GNOME_Evolution_ShellView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_setFolderBarLabel) (PortableServer_Servant _servant, const CORBA_char * text, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_ShellView_showSettings(POA_GNOME_Evolution_ShellView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_showSettings) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts__get_groups(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Shortcuts_GroupList * (*_impl__get_groups) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts_add(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_add) (PortableServer_Servant _servant, const CORBA_short group_num, const CORBA_short position, const GNOME_Evolution_Shortcuts_Shortcut * shortcut, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts_remove(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_remove) (PortableServer_Servant _servant, const CORBA_short group_num, const CORBA_short item_num, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts_get(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Shortcuts_Shortcut * (*_impl_get) (PortableServer_Servant _servant, const CORBA_short group_num, const CORBA_short item_num, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts_addGroup(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_addGroup) (PortableServer_Servant _servant, const CORBA_short position, const CORBA_char * name, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts_removeGroup(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_removeGroup) (PortableServer_Servant _servant, const CORBA_short group_num, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shortcuts_getGroup(POA_GNOME_Evolution_Shortcuts * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Shortcuts_Group * (*_impl_getGroup) (PortableServer_Servant _servant, const CORBA_short group_num, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage__get_name(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_string(*_impl__get_name) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage__get_hasSharedFolders(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl__get_hasSharedFolders) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_getFolderAtPath(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Folder * (*_impl_getFolderAtPath) (PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage__get_folderList(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_FolderList * (*_impl__get_folderList) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage__get_folderPropertyItems(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Storage_FolderPropertyItemList * (*_impl__get_folderPropertyItems) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_asyncCreateFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_asyncCreateFolder) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * type, const CORBA_char * description, const CORBA_char * parent_physical_uri, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_asyncRemoveFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_asyncRemoveFolder) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * physical_uri, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_asyncXferFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_asyncXferFolder) (PortableServer_Servant _servant, const CORBA_char * source_path, const CORBA_char * destination_path, const CORBA_boolean remove_source, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_asyncOpenFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_asyncOpenFolder) (PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_updateFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_updateFolder) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_long unread_count, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_asyncDiscoverSharedFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_asyncDiscoverSharedFolder) (PortableServer_Servant _servant, const CORBA_char * user, const CORBA_char * folder_name, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_cancelDiscoverSharedFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_cancelDiscoverSharedFolder) (PortableServer_Servant _servant, const CORBA_char * user, const CORBA_char * folder_name, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_asyncRemoveSharedFolder(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_asyncRemoveSharedFolder) (PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_addListener(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_addListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_removeListener(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_removeListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Storage_showFolderProperties(POA_GNOME_Evolution_Storage * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_showFolderProperties) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_short itemNumber, const CORBA_long parentWindowId, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageListener_notifyDestroyed(POA_GNOME_Evolution_StorageListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyDestroyed) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageListener_notifyFolderCreated(POA_GNOME_Evolution_StorageListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyFolderCreated) (PortableServer_Servant _servant, const CORBA_char * path, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageListener_notifyFolderUpdated(POA_GNOME_Evolution_StorageListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyFolderUpdated) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_long unread_count, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageListener_notifyFolderRemoved(POA_GNOME_Evolution_StorageListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyFolderRemoved) (PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageListener_notifyHasSubfolders(POA_GNOME_Evolution_StorageListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyHasSubfolders) (PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * message, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_addStorage(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_StorageListener(*_impl_addStorage) (PortableServer_Servant _servant, const GNOME_Evolution_Storage storage, const CORBA_char * name, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_getStorageList(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_StorageRegistry_StorageList * (*_impl_getStorageList) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_getStorageByName(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Storage(*_impl_getStorageByName) (PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_removeStorageByName(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_removeStorageByName) (PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_addListener(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_addListener) (PortableServer_Servant _servant, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_removeListener(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_removeListener) (PortableServer_Servant _servant, const Bonobo_Listener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageRegistry_getFolderByUri(POA_GNOME_Evolution_StorageRegistry * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Folder * (*_impl_getFolderByUri) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetViewListener_notifyFolderSelected(POA_GNOME_Evolution_StorageSetViewListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyFolderSelected) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetViewListener_notifyFolderToggled(POA_GNOME_Evolution_StorageSetViewListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyFolderToggled) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView__get_showFolders(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl__get_showFolders) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView__set_showFolders(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl__set_showFolders) (PortableServer_Servant _servant, const CORBA_boolean value, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView__get_showCheckboxes(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, CORBA_boolean(*_impl__get_showCheckboxes) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView__set_showCheckboxes(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl__set_showCheckboxes) (PortableServer_Servant _servant, const CORBA_boolean value, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView__get_checkedFolders(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_FolderList * (*_impl__get_checkedFolders) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView__set_checkedFolders(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl__set_checkedFolders) (PortableServer_Servant _servant, const GNOME_Evolution_FolderList * value, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView_addListener(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_addListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageSetViewListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_StorageSetView_removeListener(POA_GNOME_Evolution_StorageSetView * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_removeListener) (PortableServer_Servant _servant, const GNOME_Evolution_StorageSetViewListener listener, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_getComponentByType(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_ShellComponent(*_impl_getComponentByType) (PortableServer_Servant _servant, const CORBA_char * type, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_getIconByType(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Icon * (*_impl_getIconByType) (PortableServer_Servant _servant, const CORBA_char * type, const CORBA_boolean mini, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_createNewView(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_ShellView(*_impl_createNewView) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_handleURI(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_handleURI) (PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_selectUserFolder(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_selectUserFolder) (PortableServer_Servant _servant, const CORBA_long_long parent_xid, const GNOME_Evolution_FolderSelectionListener listener, const CORBA_char * title, const CORBA_char * default_folder, const GNOME_Evolution_Shell_FolderTypeNameList * possible_types, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_getLocalStorage(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Storage(*_impl_getLocalStorage) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_createStorageSetView(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, Bonobo_Control(*_impl_createStorageSetView) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Shell_setLineStatus(POA_GNOME_Evolution_Shell * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_setLineStatus) (PortableServer_Servant _servant, const CORBA_boolean online, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_FolderSelectionListener_notifySelected(POA_GNOME_Evolution_FolderSelectionListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifySelected) (PortableServer_Servant _servant, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_FolderSelectionListener_notifyCanceled(POA_GNOME_Evolution_FolderSelectionListener * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyCanceled) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Wizard__get_pages(POA_GNOME_Evolution_Wizard * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, GNOME_Evolution_Wizard_PageList * (*_impl__get_pages) (PortableServer_Servant _servant, CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Evolution_Wizard_notifyAction(POA_GNOME_Evolution_Wizard * _ORBIT_servant, gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev, void (*_impl_notifyAction) (PortableServer_Servant _servant, const CORBA_long pagenumber, const GNOME_Evolution_Wizard_Action action, CORBA_Environment * ev));
   /** stub prototypes **/
#define GNOME_Evolution_Activity_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Activity_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Activity_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_Activity_operationStarted(GNOME_Evolution_Activity _obj, const CORBA_char * component_id, const GNOME_Evolution_AnimatedIcon * icon, const CORBA_char * information, const CORBA_boolean cancellable, const Bonobo_Listener event_listener, GNOME_Evolution_Activity_ActivityId * activity_id, CORBA_boolean * suggest_display, CORBA_Environment * ev);
   void GNOME_Evolution_Activity_operationProgressing(GNOME_Evolution_Activity _obj, const GNOME_Evolution_Activity_ActivityId activity, const CORBA_char * information, const CORBA_float progress, CORBA_Environment * ev);
   void GNOME_Evolution_Activity_operationFinished(GNOME_Evolution_Activity _obj, const GNOME_Evolution_Activity_ActivityId activity, CORBA_Environment * ev);
   GNOME_Evolution_Activity_DialogAction GNOME_Evolution_Activity_requestDialog(GNOME_Evolution_Activity _obj, const GNOME_Evolution_Activity_ActivityId activity, const GNOME_Evolution_Activity_DialogType dialog_type, CORBA_Environment * ev);
#define GNOME_Evolution_ConfigControl_ref Bonobo_Unknown_ref
#define GNOME_Evolution_ConfigControl_unref Bonobo_Unknown_unref
#define GNOME_Evolution_ConfigControl_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_ConfigControl_apply(GNOME_Evolution_ConfigControl _obj, CORBA_Environment * ev);
   Bonobo_Control GNOME_Evolution_ConfigControl__get_control(GNOME_Evolution_ConfigControl _obj, CORBA_Environment * ev);
   Bonobo_EventSource GNOME_Evolution_ConfigControl__get_eventSource(GNOME_Evolution_ConfigControl _obj, CORBA_Environment * ev);
#define GNOME_Evolution_Session_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Session_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Session_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_Session_saveConfiguration(GNOME_Evolution_Session _obj, const CORBA_char * prefix, CORBA_Environment * ev);
   void GNOME_Evolution_Session_loadConfiguration(GNOME_Evolution_Session _obj, const CORBA_char * prefix, CORBA_Environment * ev);
#define GNOME_Evolution_ShellComponent_ref Bonobo_Unknown_ref
#define GNOME_Evolution_ShellComponent_unref Bonobo_Unknown_unref
#define GNOME_Evolution_ShellComponent_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Evolution_FolderTypeList *GNOME_Evolution_ShellComponent__get_supportedTypes(GNOME_Evolution_ShellComponent _obj, CORBA_Environment * ev);
   GNOME_Evolution_URISchemaList *GNOME_Evolution_ShellComponent__get_externalUriSchemas(GNOME_Evolution_ShellComponent _obj, CORBA_Environment * ev);
   GNOME_Evolution_UserCreatableItemTypeList *GNOME_Evolution_ShellComponent__get_userCreatableItemTypes(GNOME_Evolution_ShellComponent _obj, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_setOwner(GNOME_Evolution_ShellComponent _obj, const GNOME_Evolution_Shell shell, const CORBA_char * evolution_homedir, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_unsetOwner(GNOME_Evolution_ShellComponent _obj, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_interactive(GNOME_Evolution_ShellComponent _obj, const CORBA_boolean now_interactive, const CORBA_unsigned_long new_view_xid, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_debug(GNOME_Evolution_ShellComponent _obj, const CORBA_char * log_path, CORBA_Environment * ev);
   Bonobo_Control GNOME_Evolution_ShellComponent_createView(GNOME_Evolution_ShellComponent _obj, const CORBA_char * physical_uri, const CORBA_char * type, const CORBA_char * view_info, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_handleExternalURI(GNOME_Evolution_ShellComponent _obj, const CORBA_char * external_uri, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_createFolderAsync(GNOME_Evolution_ShellComponent _obj, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_removeFolderAsync(GNOME_Evolution_ShellComponent _obj, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_xferFolderAsync(GNOME_Evolution_ShellComponent _obj, const GNOME_Evolution_ShellComponentListener listener, const CORBA_char * source_physical_uri, const CORBA_char * destination_physical_uri, const CORBA_char * type, const CORBA_boolean remove_source, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_populateFolderContextMenu(GNOME_Evolution_ShellComponent _obj, const Bonobo_UIContainer uih, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_unpopulateFolderContextMenu(GNOME_Evolution_ShellComponent _obj, const Bonobo_UIContainer uih, const CORBA_char * physical_uri, const CORBA_char * type, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_userCreateNewItem(GNOME_Evolution_ShellComponent _obj, const CORBA_char * id, const CORBA_char * parent_folder_physical_uri, const CORBA_char * parent_folder_type, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_sendReceive(GNOME_Evolution_ShellComponent _obj, const CORBA_boolean show_dialog, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponent_requestQuit(GNOME_Evolution_ShellComponent _obj, const GNOME_Evolution_ShellComponentListener listener, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponentListener_notifyResult(GNOME_Evolution_ShellComponentListener _obj, const GNOME_Evolution_ShellComponentListener_Result result, CORBA_Environment * ev);
#define GNOME_Evolution_ShellComponentDnd_SourceFolder_ref Bonobo_Unknown_ref
#define GNOME_Evolution_ShellComponentDnd_SourceFolder_unref Bonobo_Unknown_unref
#define GNOME_Evolution_ShellComponentDnd_SourceFolder_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_ShellComponentDnd_SourceFolder_beginDrag(GNOME_Evolution_ShellComponentDnd_SourceFolder _obj, const CORBA_char * physical_uri, const CORBA_char * folder_type, GNOME_Evolution_ShellComponentDnd_ActionSet * possible_actions, GNOME_Evolution_ShellComponentDnd_Action * suggested_action, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponentDnd_SourceFolder_getData(GNOME_Evolution_ShellComponentDnd_SourceFolder _obj, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, const GNOME_Evolution_ShellComponentDnd_Action action, const CORBA_char * dnd_type, GNOME_Evolution_ShellComponentDnd_Data ** data, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponentDnd_SourceFolder_deleteData(GNOME_Evolution_ShellComponentDnd_SourceFolder _obj, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, CORBA_Environment * ev);
   void GNOME_Evolution_ShellComponentDnd_SourceFolder_endDrag(GNOME_Evolution_ShellComponentDnd_SourceFolder _obj, const GNOME_Evolution_ShellComponentDnd_SourceFolder_Context * source_context, CORBA_Environment * ev);
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder_ref Bonobo_Unknown_ref
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder_unref Bonobo_Unknown_unref
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder_queryInterface Bonobo_Unknown_queryInterface
   CORBA_boolean GNOME_Evolution_ShellComponentDnd_DestinationFolder_handleMotion(GNOME_Evolution_ShellComponentDnd_DestinationFolder _obj, const CORBA_char * physical_uri, const CORBA_char * folder_type, const GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context * destination_context, GNOME_Evolution_ShellComponentDnd_Action * suggested_action, CORBA_Environment * ev);
   CORBA_boolean GNOME_Evolution_ShellComponentDnd_DestinationFolder_handleDrop(GNOME_Evolution_ShellComponentDnd_DestinationFolder _obj, const CORBA_char * physical_uri, const CORBA_char * folder_type, const GNOME_Evolution_ShellComponentDnd_DestinationFolder_Context * destination_context, const GNOME_Evolution_ShellComponentDnd_Action action, const GNOME_Evolution_ShellComponentDnd_Data * data, CORBA_Environment * ev);
   void GNOME_Evolution_OfflineProgressListener_updateProgress(GNOME_Evolution_OfflineProgressListener _obj, const GNOME_Evolution_ConnectionList * current_active_connections, CORBA_Environment * ev);
   void GNOME_Evolution_SyncFolderProgressListener_updateProgress(GNOME_Evolution_SyncFolderProgressListener _obj, const CORBA_float progress, CORBA_Environment * ev);
   void GNOME_Evolution_SyncFolderProgressListener_reportSuccess(GNOME_Evolution_SyncFolderProgressListener _obj, CORBA_Environment * ev);
   void GNOME_Evolution_SyncFolderProgressListener_reportFailure(GNOME_Evolution_SyncFolderProgressListener _obj, const CORBA_char * message, CORBA_Environment * ev);
#define GNOME_Evolution_Offline_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Offline_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Offline_queryInterface Bonobo_Unknown_queryInterface
   CORBA_boolean GNOME_Evolution_Offline__get_isOffline(GNOME_Evolution_Offline _obj, CORBA_Environment * ev);
   void GNOME_Evolution_Offline__set_isOffline(GNOME_Evolution_Offline _obj, const CORBA_boolean value, CORBA_Environment * ev);
   void GNOME_Evolution_Offline_prepareForOffline(GNOME_Evolution_Offline _obj, GNOME_Evolution_ConnectionList ** active_connection_list, CORBA_Environment * ev);
   void GNOME_Evolution_Offline_syncFolder(GNOME_Evolution_Offline _obj, const GNOME_Evolution_Folder * folder, const GNOME_Evolution_SyncFolderProgressListener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Offline_cancelSyncFolder(GNOME_Evolution_Offline _obj, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev);
   void GNOME_Evolution_Offline_goOffline(GNOME_Evolution_Offline _obj, const GNOME_Evolution_OfflineProgressListener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Offline_goOnline(GNOME_Evolution_Offline _obj, CORBA_Environment * ev);
#define GNOME_Evolution_ShellView_ref Bonobo_Unknown_ref
#define GNOME_Evolution_ShellView_unref Bonobo_Unknown_unref
#define GNOME_Evolution_ShellView_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Evolution_ShellView_setMessage(GNOME_Evolution_ShellView _obj, const CORBA_char * message, const CORBA_boolean busy, CORBA_Environment * ev);
   void GNOME_Evolution_ShellView_unsetMessage(GNOME_Evolution_ShellView _obj, CORBA_Environment * ev);
   void GNOME_Evolution_ShellView_changeCurrentView(GNOME_Evolution_ShellView _obj, const CORBA_char * uri, CORBA_Environment * ev);
   void GNOME_Evolution_ShellView_setTitle(GNOME_Evolution_ShellView _obj, const CORBA_char * title, CORBA_Environment * ev);
   void GNOME_Evolution_ShellView_setFolderBarLabel(GNOME_Evolution_ShellView _obj, const CORBA_char * text, CORBA_Environment * ev);
   void GNOME_Evolution_ShellView_showSettings(GNOME_Evolution_ShellView _obj, CORBA_Environment * ev);
#define GNOME_Evolution_Shortcuts_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Shortcuts_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Shortcuts_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Evolution_Shortcuts_GroupList *GNOME_Evolution_Shortcuts__get_groups(GNOME_Evolution_Shortcuts _obj, CORBA_Environment * ev);
   void GNOME_Evolution_Shortcuts_add(GNOME_Evolution_Shortcuts _obj, const CORBA_short group_num, const CORBA_short position, const GNOME_Evolution_Shortcuts_Shortcut * shortcut, CORBA_Environment * ev);
   void GNOME_Evolution_Shortcuts_remove(GNOME_Evolution_Shortcuts _obj, const CORBA_short group_num, const CORBA_short item_num, CORBA_Environment * ev);
   GNOME_Evolution_Shortcuts_Shortcut *GNOME_Evolution_Shortcuts_get(GNOME_Evolution_Shortcuts _obj, const CORBA_short group_num, const CORBA_short item_num, CORBA_Environment * ev);
   void GNOME_Evolution_Shortcuts_addGroup(GNOME_Evolution_Shortcuts _obj, const CORBA_short position, const CORBA_char * name, CORBA_Environment * ev);
   void GNOME_Evolution_Shortcuts_removeGroup(GNOME_Evolution_Shortcuts _obj, const CORBA_short group_num, CORBA_Environment * ev);
   GNOME_Evolution_Shortcuts_Group *GNOME_Evolution_Shortcuts_getGroup(GNOME_Evolution_Shortcuts _obj, const CORBA_short group_num, CORBA_Environment * ev);
#define GNOME_Evolution_Storage_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Storage_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Storage_queryInterface Bonobo_Unknown_queryInterface
   CORBA_string GNOME_Evolution_Storage__get_name(GNOME_Evolution_Storage _obj, CORBA_Environment * ev);
   CORBA_boolean GNOME_Evolution_Storage__get_hasSharedFolders(GNOME_Evolution_Storage _obj, CORBA_Environment * ev);
   GNOME_Evolution_Folder *GNOME_Evolution_Storage_getFolderAtPath(GNOME_Evolution_Storage _obj, const CORBA_char * path, CORBA_Environment * ev);
   GNOME_Evolution_FolderList *GNOME_Evolution_Storage__get_folderList(GNOME_Evolution_Storage _obj, CORBA_Environment * ev);
   GNOME_Evolution_Storage_FolderPropertyItemList *GNOME_Evolution_Storage__get_folderPropertyItems(GNOME_Evolution_Storage _obj, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_asyncCreateFolder(GNOME_Evolution_Storage _obj, const CORBA_char * path, const CORBA_char * type, const CORBA_char * description, const CORBA_char * parent_physical_uri, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_asyncRemoveFolder(GNOME_Evolution_Storage _obj, const CORBA_char * path, const CORBA_char * physical_uri, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_asyncXferFolder(GNOME_Evolution_Storage _obj, const CORBA_char * source_path, const CORBA_char * destination_path, const CORBA_boolean remove_source, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_asyncOpenFolder(GNOME_Evolution_Storage _obj, const CORBA_char * path, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_updateFolder(GNOME_Evolution_Storage _obj, const CORBA_char * path, const CORBA_long unread_count, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_asyncDiscoverSharedFolder(GNOME_Evolution_Storage _obj, const CORBA_char * user, const CORBA_char * folder_name, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_cancelDiscoverSharedFolder(GNOME_Evolution_Storage _obj, const CORBA_char * user, const CORBA_char * folder_name, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_asyncRemoveSharedFolder(GNOME_Evolution_Storage _obj, const CORBA_char * path, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_addListener(GNOME_Evolution_Storage _obj, const GNOME_Evolution_StorageListener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_removeListener(GNOME_Evolution_Storage _obj, const GNOME_Evolution_StorageListener listener, CORBA_Environment * ev);
   void GNOME_Evolution_Storage_showFolderProperties(GNOME_Evolution_Storage _obj, const CORBA_char * path, const CORBA_short itemNumber, const CORBA_long parentWindowId, CORBA_Environment * ev);
   void GNOME_Evolution_StorageListener_notifyDestroyed(GNOME_Evolution_StorageListener _obj, CORBA_Environment * ev);
   void GNOME_Evolution_StorageListener_notifyFolderCreated(GNOME_Evolution_StorageListener _obj, const CORBA_char * path, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev);
   void GNOME_Evolution_StorageListener_notifyFolderUpdated(GNOME_Evolution_StorageListener _obj, const CORBA_char * path, const CORBA_long unread_count, CORBA_Environment * ev);
   void GNOME_Evolution_StorageListener_notifyFolderRemoved(GNOME_Evolution_StorageListener _obj, const CORBA_char * path, CORBA_Environment * ev);
   void GNOME_Evolution_StorageListener_notifyHasSubfolders(GNOME_Evolution_StorageListener _obj, const CORBA_char * path, const CORBA_char * message, CORBA_Environment * ev);
#define GNOME_Evolution_StorageRegistry_ref Bonobo_Unknown_ref
#define GNOME_Evolution_StorageRegistry_unref Bonobo_Unknown_unref
#define GNOME_Evolution_StorageRegistry_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Evolution_StorageListener GNOME_Evolution_StorageRegistry_addStorage(GNOME_Evolution_StorageRegistry _obj, const GNOME_Evolution_Storage storage, const CORBA_char * name, CORBA_Environment * ev);
   GNOME_Evolution_StorageRegistry_StorageList *GNOME_Evolution_StorageRegistry_getStorageList(GNOME_Evolution_StorageRegistry _obj, CORBA_Environment * ev);
   GNOME_Evolution_Storage GNOME_Evolution_StorageRegistry_getStorageByName(GNOME_Evolution_StorageRegistry _obj, const CORBA_char * name, CORBA_Environment * ev);
   void GNOME_Evolution_StorageRegistry_removeStorageByName(GNOME_Evolution_StorageRegistry _obj, const CORBA_char * name, CORBA_Environment * ev);
   void GNOME_Evolution_StorageRegistry_addListener(GNOME_Evolution_StorageRegistry _obj, const Bonobo_Listener listener, CORBA_Environment * ev);
   void GNOME_Evolution_StorageRegistry_removeListener(GNOME_Evolution_StorageRegistry _obj, const Bonobo_Listener listener, CORBA_Environment * ev);
   GNOME_Evolution_Folder *GNOME_Evolution_StorageRegistry_getFolderByUri(GNOME_Evolution_StorageRegistry _obj, const CORBA_char * uri, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetViewListener_notifyFolderSelected(GNOME_Evolution_StorageSetViewListener _obj, const CORBA_char * uri, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetViewListener_notifyFolderToggled(GNOME_Evolution_StorageSetViewListener _obj, CORBA_Environment * ev);
#define GNOME_Evolution_StorageSetView_ref Bonobo_Unknown_ref
#define GNOME_Evolution_StorageSetView_unref Bonobo_Unknown_unref
#define GNOME_Evolution_StorageSetView_queryInterface Bonobo_Unknown_queryInterface
   CORBA_boolean GNOME_Evolution_StorageSetView__get_showFolders(GNOME_Evolution_StorageSetView _obj, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetView__set_showFolders(GNOME_Evolution_StorageSetView _obj, const CORBA_boolean value, CORBA_Environment * ev);
   CORBA_boolean GNOME_Evolution_StorageSetView__get_showCheckboxes(GNOME_Evolution_StorageSetView _obj, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetView__set_showCheckboxes(GNOME_Evolution_StorageSetView _obj, const CORBA_boolean value, CORBA_Environment * ev);
   GNOME_Evolution_FolderList *GNOME_Evolution_StorageSetView__get_checkedFolders(GNOME_Evolution_StorageSetView _obj, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetView__set_checkedFolders(GNOME_Evolution_StorageSetView _obj, const GNOME_Evolution_FolderList * value, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetView_addListener(GNOME_Evolution_StorageSetView _obj, const GNOME_Evolution_StorageSetViewListener listener, CORBA_Environment * ev);
   void GNOME_Evolution_StorageSetView_removeListener(GNOME_Evolution_StorageSetView _obj, const GNOME_Evolution_StorageSetViewListener listener, CORBA_Environment * ev);
#define GNOME_Evolution_Shell_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Shell_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Shell_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Evolution_ShellComponent GNOME_Evolution_Shell_getComponentByType(GNOME_Evolution_Shell _obj, const CORBA_char * type, CORBA_Environment * ev);
   GNOME_Evolution_Icon *GNOME_Evolution_Shell_getIconByType(GNOME_Evolution_Shell _obj, const CORBA_char * type, const CORBA_boolean mini, CORBA_Environment * ev);
   GNOME_Evolution_ShellView GNOME_Evolution_Shell_createNewView(GNOME_Evolution_Shell _obj, const CORBA_char * uri, CORBA_Environment * ev);
   void GNOME_Evolution_Shell_handleURI(GNOME_Evolution_Shell _obj, const CORBA_char * uri, CORBA_Environment * ev);
   void GNOME_Evolution_Shell_selectUserFolder(GNOME_Evolution_Shell _obj, const CORBA_long_long parent_xid, const GNOME_Evolution_FolderSelectionListener listener, const CORBA_char * title, const CORBA_char * default_folder, const GNOME_Evolution_Shell_FolderTypeNameList * possible_types, CORBA_Environment * ev);
   GNOME_Evolution_Storage GNOME_Evolution_Shell_getLocalStorage(GNOME_Evolution_Shell _obj, CORBA_Environment * ev);
   Bonobo_Control GNOME_Evolution_Shell_createStorageSetView(GNOME_Evolution_Shell _obj, CORBA_Environment * ev);
   void GNOME_Evolution_Shell_setLineStatus(GNOME_Evolution_Shell _obj, const CORBA_boolean online, CORBA_Environment * ev);
   void GNOME_Evolution_FolderSelectionListener_notifySelected(GNOME_Evolution_FolderSelectionListener _obj, const GNOME_Evolution_Folder * folder, CORBA_Environment * ev);
   void GNOME_Evolution_FolderSelectionListener_notifyCanceled(GNOME_Evolution_FolderSelectionListener _obj, CORBA_Environment * ev);
#define GNOME_Evolution_Wizard_ref Bonobo_Unknown_ref
#define GNOME_Evolution_Wizard_unref Bonobo_Unknown_unref
#define GNOME_Evolution_Wizard_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Evolution_Wizard_PageList *GNOME_Evolution_Wizard__get_pages(GNOME_Evolution_Wizard _obj, CORBA_Environment * ev);
   void GNOME_Evolution_Wizard_notifyAction(GNOME_Evolution_Wizard _obj, const CORBA_long pagenumber, const GNOME_Evolution_Wizard_Action action, CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Activity__iinterface;
#define GNOME_Evolution_Activity_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Activity__imethods[GNOME_Evolution_Activity_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ConfigControl__iinterface;
#define GNOME_Evolution_ConfigControl_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ConfigControl__imethods[GNOME_Evolution_ConfigControl_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Session__iinterface;
#define GNOME_Evolution_Session_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Session__imethods[GNOME_Evolution_Session_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ShellComponent__iinterface;
#define GNOME_Evolution_ShellComponent_IMETHODS_LEN 17
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ShellComponent__imethods[GNOME_Evolution_ShellComponent_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ShellComponentListener__iinterface;
#define GNOME_Evolution_ShellComponentListener_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ShellComponentListener__imethods[GNOME_Evolution_ShellComponentListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ShellComponentDnd_SourceFolder__iinterface;
#define GNOME_Evolution_ShellComponentDnd_SourceFolder_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ShellComponentDnd_SourceFolder__imethods[GNOME_Evolution_ShellComponentDnd_SourceFolder_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ShellComponentDnd_DestinationFolder__iinterface;
#define GNOME_Evolution_ShellComponentDnd_DestinationFolder_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ShellComponentDnd_DestinationFolder__imethods[GNOME_Evolution_ShellComponentDnd_DestinationFolder_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_OfflineProgressListener__iinterface;
#define GNOME_Evolution_OfflineProgressListener_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_OfflineProgressListener__imethods[GNOME_Evolution_OfflineProgressListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_SyncFolderProgressListener__iinterface;
#define GNOME_Evolution_SyncFolderProgressListener_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_SyncFolderProgressListener__imethods[GNOME_Evolution_SyncFolderProgressListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Offline__iinterface;
#define GNOME_Evolution_Offline_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Offline__imethods[GNOME_Evolution_Offline_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_ShellView__iinterface;
#define GNOME_Evolution_ShellView_IMETHODS_LEN 6
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_ShellView__imethods[GNOME_Evolution_ShellView_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Shortcuts__iinterface;
#define GNOME_Evolution_Shortcuts_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Shortcuts__imethods[GNOME_Evolution_Shortcuts_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Storage__iinterface;
#define GNOME_Evolution_Storage_IMETHODS_LEN 16
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Storage__imethods[GNOME_Evolution_Storage_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_StorageListener__iinterface;
#define GNOME_Evolution_StorageListener_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_StorageListener__imethods[GNOME_Evolution_StorageListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_StorageRegistry__iinterface;
#define GNOME_Evolution_StorageRegistry_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_StorageRegistry__imethods[GNOME_Evolution_StorageRegistry_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_StorageSetViewListener__iinterface;
#define GNOME_Evolution_StorageSetViewListener_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_StorageSetViewListener__imethods[GNOME_Evolution_StorageSetViewListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_StorageSetView__iinterface;
#define GNOME_Evolution_StorageSetView_IMETHODS_LEN 8
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_StorageSetView__imethods[GNOME_Evolution_StorageSetView_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Shell__iinterface;
#define GNOME_Evolution_Shell_IMETHODS_LEN 8
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Shell__imethods[GNOME_Evolution_Shell_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_FolderSelectionListener__iinterface;
#define GNOME_Evolution_FolderSelectionListener_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_FolderSelectionListener__imethods[GNOME_Evolution_FolderSelectionListener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Wizard__iinterface;
#define GNOME_Evolution_Wizard_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Evolution
   static
#else
   extern
#endif
   ORBit_IMethod GNOME_Evolution_Wizard__imethods[GNOME_Evolution_Wizard_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */
#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>
#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
