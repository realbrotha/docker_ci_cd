/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _NIS_CACHE_H_RPCGEN
#define	_NIS_CACHE_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

#pragma ident	"@(#)nis_cache.x	1.11	04/06/28 SMI"
#define	NIS_DIRECTORY		"/var/nis"
#define	CACHE_FILE		"/var/nis/NIS_SHARED_DIRCACHE"
#define	PRIVATE_CACHE_FILE	"/var/nis/.NIS_PRIVATE_DIRCACHE"
#define	TMP_CACHE_FILE		"/var/nis/.NIS_TEMPORARY_DIRCACHE"
#define	COLD_START_FILE		"/var/nis/NIS_COLD_START"
#define	DOT_FILE		"/var/nis/.pref_servers"
#include <rpc/types.h>
#include <rpcsvc/nis.h>
#include "nis_clnt.h"

struct bind_server_arg {
	nis_server *srv;
	int nsrv;
};
typedef struct bind_server_arg bind_server_arg;

struct refresh_res {
	int changed;
	endpoint ep;
};
typedef struct refresh_res refresh_res;

#define	CACHEPROG	100301
#define	CACHE_VER_2	2

#if defined(__STDC__) || defined(__cplusplus)
#define	NIS_CACHE_ADD_ENTRY	1
extern  void * nis_cache_add_entry_2(fd_result *, CLIENT *);
extern  void * nis_cache_add_entry_2_svc(fd_result *, struct svc_req *);
#define	NIS_CACHE_REMOVE_ENTRY	2
extern  void * nis_cache_remove_entry_2(directory_obj *, CLIENT *);
extern  void * nis_cache_remove_entry_2_svc(directory_obj *, struct svc_req *);
#define	NIS_CACHE_READ_COLDSTART	3
extern  void * nis_cache_read_coldstart_2(void *, CLIENT *);
extern  void * nis_cache_read_coldstart_2_svc(void *, struct svc_req *);
#define	NIS_CACHE_REFRESH_ENTRY	4
extern  void * nis_cache_refresh_entry_2(char **, CLIENT *);
extern  void * nis_cache_refresh_entry_2_svc(char **, struct svc_req *);
#define	NIS_CACHE_BIND_REPLICA	5
extern  nis_error * nis_cache_bind_replica_2(char **, CLIENT *);
extern  nis_error * nis_cache_bind_replica_2_svc(char **, struct svc_req *);
#define	NIS_CACHE_BIND_MASTER	6
extern  nis_error * nis_cache_bind_master_2(char **, CLIENT *);
extern  nis_error * nis_cache_bind_master_2_svc(char **, struct svc_req *);
#define	NIS_CACHE_BIND_SERVER	7
extern  nis_error * nis_cache_bind_server_2(bind_server_arg *, CLIENT *);
extern  nis_error * nis_cache_bind_server_2_svc(bind_server_arg *, struct svc_req *);
#define	NIS_CACHE_REFRESH_BINDING	8
extern  refresh_res * nis_cache_refresh_binding_2(nis_bound_directory *, CLIENT *);
extern  refresh_res * nis_cache_refresh_binding_2_svc(nis_bound_directory *, struct svc_req *);
#define	NIS_CACHE_REFRESH_ADDRESS	9
extern  refresh_res * nis_cache_refresh_address_2(nis_bound_endpoint *, CLIENT *);
extern  refresh_res * nis_cache_refresh_address_2_svc(nis_bound_endpoint *, struct svc_req *);
#define	NIS_CACHE_REFRESH_CALLBACK	10
extern  refresh_res * nis_cache_refresh_callback_2(nis_bound_endpoint *, CLIENT *);
extern  refresh_res * nis_cache_refresh_callback_2_svc(nis_bound_endpoint *, struct svc_req *);
extern int cacheprog_2_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define	NIS_CACHE_ADD_ENTRY	1
extern  void * nis_cache_add_entry_2();
extern  void * nis_cache_add_entry_2_svc();
#define	NIS_CACHE_REMOVE_ENTRY	2
extern  void * nis_cache_remove_entry_2();
extern  void * nis_cache_remove_entry_2_svc();
#define	NIS_CACHE_READ_COLDSTART	3
extern  void * nis_cache_read_coldstart_2();
extern  void * nis_cache_read_coldstart_2_svc();
#define	NIS_CACHE_REFRESH_ENTRY	4
extern  void * nis_cache_refresh_entry_2();
extern  void * nis_cache_refresh_entry_2_svc();
#define	NIS_CACHE_BIND_REPLICA	5
extern  nis_error * nis_cache_bind_replica_2();
extern  nis_error * nis_cache_bind_replica_2_svc();
#define	NIS_CACHE_BIND_MASTER	6
extern  nis_error * nis_cache_bind_master_2();
extern  nis_error * nis_cache_bind_master_2_svc();
#define	NIS_CACHE_BIND_SERVER	7
extern  nis_error * nis_cache_bind_server_2();
extern  nis_error * nis_cache_bind_server_2_svc();
#define	NIS_CACHE_REFRESH_BINDING	8
extern  refresh_res * nis_cache_refresh_binding_2();
extern  refresh_res * nis_cache_refresh_binding_2_svc();
#define	NIS_CACHE_REFRESH_ADDRESS	9
extern  refresh_res * nis_cache_refresh_address_2();
extern  refresh_res * nis_cache_refresh_address_2_svc();
#define	NIS_CACHE_REFRESH_CALLBACK	10
extern  refresh_res * nis_cache_refresh_callback_2();
extern  refresh_res * nis_cache_refresh_callback_2_svc();
extern int cacheprog_2_freeresult();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_bind_server_arg(XDR *, bind_server_arg*);
extern  bool_t xdr_refresh_res(XDR *, refresh_res*);

#else /* K&R C */
extern bool_t xdr_bind_server_arg();
extern bool_t xdr_refresh_res();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_NIS_CACHE_H_RPCGEN */
