#
#ident	"@(#)Form.flash	5.2	03/03/25 SMI"
#
# Copyright (c) 2001 Sun Microsystems, Inc.  All Rights Reserved.
#
##############################################################################
#	Module Name:  Form.flash
#       Arguments: $ARG1 - File containing list of valid BEs.
##############################################################################
#
# Top-level flash FMLI object.  The Flash objects are laid out as follows:
#
#
#
#
#                 +---> Media choices
#                 +---> BE Choices                                  +---> NFS
# Menu.lu --> Form.flash ---> Menu.Flash --(add)--> Menu.flash.retr ----> HTTP
#                 |                       |                         +---> [...]
#                 |(SAVE)                 | (remove)
#                 v                       v
#             luupgrade                Text.flash.delete
#
#
##############################################################################


##############################################################################
# Form-wide information
##############################################################################

# File that resulting archive profile lines end up in
`set -l ARCHIVEPROFILES="/tmp/archiveprofile.${VPID}`

# File that records the location of the miniroot.  Calculated by luupgrade.
`set -l MROUT="/tmp/flash.mr.${VPID}`

# File that contains complete flash archive profile for luupgrade
`set -l CFAOUT="/tmp/flash.cfa.${VPID}`

# Title, help information
form=`gettext "Flash an Alternate Boot Environment"`
help=OPEN TEXT $OBJ_DIR/MainHelp.flash
altslks=true

# Delete temporary files upon exit
close=`rm -f ${ARG1} ${ARCHIVEPROFILES} ${MROUT} ${CFAOUT}`

# This is run when the user saves this form.  Here we run luupgrade to
# do the flash.  Pop up a pass/fail window when done.
done=`if [ -f ${ARCHIVEPROFILES} -a -s ${ARCHIVEPROFILES} ] ; then
		/bin/cat /etc/lu/solaris_flash_profile ${ARCHIVEPROFILES} > ${CFAOUT};
		run $LUBIN/luupgrade -f -n "$F1" -s "$F2" -j ${CFAOUT} ;
		if [ "$RET" = "0" ] ; then
			set -l CMD="open text $OBJ_DIR/Text.success Flash";
		else
			set -l CMD="open text $OBJ_DIR/Text.fail Flash";
		fi;
	else
		set -l CMD="open text $OBJ_DIR/Text.flash.noarchive";
	fi;`$CMD

############################################################################
# Field: BE Name
# Format: "Name of Boot Environment:  _________"
# Validation: must be an existing, non-active, complete BE.
############################################################################
name=`gettext "Name of Boot Environment:"`
nrow=1
ncol=1
frow=1
fcol=40
rows=1
columns=30
scroll=true
# choices should display all complete BEs.
rmenu=open menu $OBJ_DIR/Menu.choices $ARG1
itemmsg=`gettext "Enter name of BE to Flash"`
valid=`indicator -w; fmlgrep '^'$F1'$' $ARG1`
invalidmsg=`gettext "ERROR: Press CHOICES to see the valid BE names."`

############################################################################
# Field: Package Media
# Format: "Package Media:  _________"
# Validation: Must be a valid Solaris Install media (with a .cdtoc, etc)
############################################################################
name=`gettext "Package Media:"`
nrow=2
ncol=1
frow=2
fcol=23
rows=1
columns=53
scroll=true
value=""

# possible choices when F2 is pressed is generated by lumedia.
rmenu={ `indicator -w; $LUBIN/lumedia | /usr/bin/sort` "/net" }
menuonly=false
itemmsg=`gettext "Choose the media mount point"`
choicemsg=`gettext "Enter the mount point of the media."`

# Field validation: Run luupgrade and ask it, based on the media location,
# what the miniroot path is.  If luupgrade says there isn't one, then this
# media mount point is invalid.
valid=`indicator -w;
	rm -f ${MROUT};
	$LUBIN/luupgrade -c -F -s ${F2} > ${MROUT} 2> ${MROUT};
	if [ "${RET}" = 0 ] ;
	then
		echo TRUE; set -l VALIDMEDIA="${F2}";
	else 
		echo FALSE; set -l VALIDMEDIA="";
	fi;`

invalidmsg=`cat ${MROUT} | head -1`

############################################################################
# SLK Buttons.
############################################################################

# The ARCHIVES button allows you to add archives.

# i18n: 9 characters total
name=`gettext "ARCHIVES"`
button=9

# Don't let user add archives until they give a valid media location.
# This is so that we can run pfinstall to validate each archive when
# entered.
action=`if [ -n "${VALIDMEDIA}" ] ;
	then set -l CMD="open menu $OBJ_DIR/Menu.flash";
	else set -l CMD="open text $OBJ_DIR/Text.flash.nomedia ${MROUT}";
	fi;`$CMD `if [ -f ${MROUT} -a -s ${MROUT} ] ;
		then cat ${MROUT};
		fi;`

name=`gettext "CHOICES"`
button=10
action=choices

name=`gettext "SAVE"`
button=11
action=done

name=
button=12
action=nop

name=
button=13
action=nop

name=`gettext "CANCEL"`
button=14
action=cancel 

name=
button=15
action=help

name=`gettext "HELP"`
button=16
action=help
