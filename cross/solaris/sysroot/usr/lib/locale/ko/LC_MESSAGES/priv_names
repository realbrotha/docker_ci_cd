#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident	"@(#)priv_defs	1.9	04/06/02 SMI"
#
# Privilege name explanation file
# The format of entries is a privilege name starting at the
# beginning of a line directly folowed by a new line followed
# by several lines of texts starting with white space terminated
# by a line with a single newline or not starting with white space
#

contract_event
	프로세스에서 중요 이벤트를 제한 없이 요청할 수 있습니다.
	프로세스에서 이벤트 대기열에 있는 모든 이벤트의 안정적인 배달을 요청할
	수 있습니다.

contract_observer
	프로세스에서 프로세스의 유효한 사용자 ID가 아닌
	사용자가 만들고 소유한 계약에 의해 생성된 계약 이벤트를
	확인할 수 있습니다.
	프로세스에서 프로세스의 유효한 사용자 ID가 아닌 사용자가
	만들고 소유한 계약에 속한 계약 이벤트 종단점을
	확인할 수 있습니다.

cpc_cpu
	프로세스가 CPU당 하드웨어 성능 계수기에 액세스할 수 있도록 
	합니다.

dtrace_kernel
	DTrace 커널 레벨을 추적할 수 있도록 합니다.

dtrace_proc
	DTrace 프로세스 레벨을 추적할 수 있도록 합니다.프로세스 레벨 
	추적 시험이 사용자가 권한을 가진 프로세스에배치되고 활성화되도록 
	합니다.

dtrace_user
	DTrace 사용자 레벨을 추적할 수 있도록 합니다.syscall 사용 및 
	프로필 DTrace 제공업체가 사용자가 권한을가진 프로세스를 조사할 
	수 있도록 합니다.

file_chown
	프로세스가 파일의 소유자 사용자 ID를 변경할 수 있도록 
	합니다.프로세스가 파일의 그룹 ID를 프로세스의 유효 그룹 ID 또는 
	프로세스추가 그룹 ID 중 하나가 아닌 것으로 변경할 수 
	있도록합니다.

file_chown_self
	프로세스가 해당 파일을 제공할 수 있도록 합니다. 이 권한을 
	가진프로세스는 {_POSIX_CHOWN_RESTRICTED}이(가) 유효하지 않은 
	것처럼실행됩니다.

file_dac_execute
	프로세스로 하여금 권한 비트 또는 ACL이 프로세스가 권한을 실행할 
	수 있도록하지 않는 실행 파일을 실행하도록 합니다.

file_dac_read
	프로세스로 하여금 권한 비트 또는 ACL이 프로세스가 권한을 읽을 수 
	있도록하지 않는 파일 또는 디렉토리를 읽도록 합니다.

file_dac_search
	프로세스로 하여금 권한 비트 또는 ACL이 프로세스가 권한을 검색할 
	수 있도록하지 않는 디렉토리를 검색하도록 합니다.

file_dac_write
	프로세스로 하여금 권한 비트 또는 ACL이 프로세스가 권한을 쓸 수 
	있도록하지 않는 파일 또는 디렉토리를 쓰도록 합니다.0의 유효 
	uid가 부재할 경우 uid 0이 소유한 파일을 쓰기위해서는 ALL 권한이 
	필요합니다.

file_link_any
	프로세스로 하여금 프로세스의 유효 uid와 다른 uid가 소유한 
	파일에대한 하드링크를 작성하도록 합니다.

file_owner
	파일 또는 디렉토리의 소유자가 아닌 프로세스로 하여금일반적으로 
	파일 소유자에게만 허용되는 다음 작업을 수행할수 있도록 합니다. 
	즉, 해당 파일의 액세스 및 수정시간 수정, 상위 디렉토리에 실행 후 
	텍스트 이미지 저장''(고정) 비트 집합이 있는 파일 또는 디렉토리 
	제거 또는이름 변경, 파일에 namefs'' 마운트, set-uid와 
	set-gid비트를 제외하고 권한 비트 또는 ACL을 수정할 수 
	있도록합니다.

file_setid
	프로세스로 하여금 set-user-ID와 set-group-ID 비트를 지우지않고 
	파일의 소유권을 변경하거나 파일에 쓸 수 있도록합니다.프로세스로 
	하여금 그룹이 프로세스의 유효 그룹 또는 프로세스의추가 그룹 중 
	하나가 아닌 파일 또는 디렉토리에 set-group-ID비트를 설정할 수 
	있도록 합니다.프로세스로 하여금 PRIV_FILE_OWNER가 있을 경우 다른 
	소유권을가진 파일에 set-user-ID 비트를 설정할 수 있도록 
	합니다.set-uid 0 파일을 작성 또는 수정할 경우 추가 제한 
	사항이적용됩니다.

ipc_dac_read
	프로세스로 하여금 권한 비트가 프로세스에게 읽기 권한을허용하지 
	않는 System V IPCMessage Queue, Semaphore Set또는 Shared Memory 
	Segment를 읽을 수 있도록 합니다.프로세스로 하여금 권한 비트가 
	프로세스에게 읽기 권한을 허용하지 않는 원격 공유 메모리를 읽을 
	수 있도록 합니다.

ipc_dac_write
	프로세스로 하여금 권한 비트가 프로세스에게 쓰기 권한을허용하지 
	않는 System V IPC Message Queue, Semaphore Set또는 Shared Memory 
	Segment를 쓸 수 있도록 합니다.프로세스로 하여금 권한 비트가 
	프로세스에게 쓰기 권한을허용하지 않는 원격 공유 메모리를 읽을 수 
	있도록 합니다.객체 소유자가 uid 0을 갖고 현재 프로세스의 유효 
	uid가 0이아닐 경우 추가 제한 사항이 적용됩니다.

ipc_owner
	System V IPC Message Queue, Semaphore Set 또는 Shared 
	MemorySegment의 소유자가 아닌 프로세스가 Message Queue, 
	Semaphore Set또는 Shared Memory Segment를 제거하고 해당 소유권을 
	변경하거나해당 권한 비트를 변경할 수 있도록 합니다.객체의 
	소유자가 uid 0를 갖고 현재 프로세스의 유효 uid가0이 아닌 경우 
	추가 제한 사항이 적용됩니다.

net_icmpaccess
	프로세스가 ICMP 패킷을 보내고 받을 수 있도록 합니다.

net_privaddr
	프로세스가 권한 있는 포트 번호에 바인드될 수 있도록합니다. 권한 
	포트 번호는 1-1023(전통적인 UNIX 권한포트)이고 또한 해당 포트는 
	NFS 사용용으로 예약된 포트를제외하고 
	"udp/tcp_extra_priv_ports"로 표시됩니다.

net_rawaccess
	프로세스가 네트워크 레이어에 직접 액세스할 수 있도록 합니다.

proc_audit
	프로세스가 감사 레코드를 생성할 수 있도록 합니다.프로세스가 자체 
	감사 사전 선택 정보를 얻을 수 있도록 합니다.

proc_chroot
	프로세스가 해당 루트 디렉토리를 변경할 수 있도록 합니다.

proc_clock_highres
	프로세스가 고해상도 타이머를 사용할 수 있도록 합니다.

proc_exec
	프로세스가 execve()를 호출할 수 있도록 합니다.

proc_fork
	프로세스가 fork1()/forkall()/vfork()를 호출할 수 있도록 합니다.

proc_info
	프로세스가 신호를 보낼 수 있는 프로세스가 아닌 프로세스의상태를 
	조사할 수 있도록 합니다.  조사할 수 없는 프로세스는/proc에서 볼 
	수 없고 존재하지 않는 것처럼 보입니다.

proc_lock_memory
	프로세스가 물리적 메모리의 페이지를 잠글 수 있도록 합니다.

proc_owner
	프로세스가 소유권에 관계없이 다른 프로세스로 신호를 
	보내고프로세스 상태를 조사하고 다른 프로세스로 수정할 수 
	있도록합니다.  다른 프로세스를 수정할 경우 추가 제한 
	사항이적용됩니다.  첨부 프로세스의 유효 권한 집합은 
	대상프로세스의 유효한, 허용된 및 상속된 집합의 하위 
	집합이어야합니다. 한계 집합은 대상의 한계 집합의 하위 
	집합이어야합니다. 대상 프로세스의 모든 uid 집합이 0으로 설정된 
	경우유효 uid가 0인 경우를 제외하고 모든 권한이 
	명제화되어야합니다.프로세스가 CPU로 임의 프로세스를 바인드할 수 
	있도록 합니다.

proc_priocntl
	프로세스가 현재 레벨 이상으로 우선 순위를 상승시킬 수 있도록 
	합니다.프로세스가 해당 일정잡기 클래스를 RT 클래스를 포함하는 
	모든 일정잡기클래스로 변경할 수 있도록 합니다.

proc_session
	프로세스가 세션 외부에서 신호를 보내거나 프로세스를 추적할 
	수있도록 합니다.

proc_setid
	프로세스가 마음대로 해당 uid를 설정할 수 있도록 합니다.uid 0을 
	가정하려면 모든 권한이 명제화되어야 합니다.

proc_taskid
	프로세스가 새 작업 ID를 호출 프로세스로 할당할 수 있도록 합니다.

proc_zone
	프로세스가 다른 영역의 프로세스를 추적하거나 해당 
	프로세스로신호를 보낼 수 있도록 합니다.

sys_acct
	프로세스가 acct(2), getacct(2), putacct(2) 및 wracct(2)을 
	통해계정을 활성화 및 비활성화, 관리할 수 있도록 합니다.

sys_admin
	프로세스가 노드 및 도메인 이름 설정, nscd 및 coreadm설정 지정과 
	같은 시스템 관리 작업을 수행할 수 있도록합니다.

sys_audit
	프로세스가 (커널) 감사 데몬을 시작할 수 있도록 합니다.프로세스가 
	감사 상태(사용자 ID 감사, 터미널 ID 감사, 세션ID 감사, 사전 선택 
	마스크 감사)를 보고 설정할 수 있도록 합니다.프로세스가 계정을 
	해제 및 설정할 수 있도록 합니다.프로세스가 감사 매개변수(캐시 및 
	대기열 크기, 클래스 매핑에대한 이벤트, 정책 옵션)을 구성할 수 
	있도록 합니다.

sys_config
	프로세스가 다양한 시스템 구성 작업을 수행할 수 있도록 
	합니다.프로세스가 교체 장치를 추가 및 제거할 수 있도록 합니다. 
	교체 장치를추가할 경우 프로세스는 또한 교체 장치에서 읽고 쓸 수 
	있는 충분한권한을 가져야 합니다.

sys_devices
	프로세스가 허용 액세스를 점검하기 위해 커널 drv_priv(9F)함수를 
	호출하는 커널 모듈을 성공적으로 호출할 수 
	있도록합니다.프로세스가 실제 콘솔 장치를 직접 열 수 있도록 
	합니다.프로세스가 배타적으로 열린 장치를 열 수 있도록 합니다.

sys_ipc_config
	프로세스가 System V IPC Message Queue 버퍼의 크기를 늘릴 
	수있도록 합니다.

sys_linkdir
	프로세스가 디렉토리를 링크 해제 및 링크할 수 있도록 합니다.

sys_mount
	파일 시스템 구성 ioctls, 할당량 호출 및 스냅샷의작성/삭제와 같은 
	파일 시스템 특정 관리 절차를허용합니다.프로세스가 다른 방법으로 
	제한되는 파일 시스템(즉, namefs를제외한 대부분의 파일 시스템)을 
	마운트 및 마운트 해제할 수 있도록 합니다.마운트 작업을 수행하는 
	프로세스는 마운트되는 장치에 대한 적절한 액세스 권한을 가져야 
	합니다("rw" 마운트에 대한읽기-쓰기, "ro" 마운트에 대한 
	읽기).앞서 언급한 파일 시스템 작업을 수행하는 프로세스는마운트 
	지점에 대한 읽기/쓰기/소유자 권한을 가져야합니다.정규 파일 및 
	디렉토리만 모든 영역 권한이 명제화되지 않은프로세스에 대한 
	마운트 지점으로 사용될 수 있습니다.프로세스가 모든 영역 권한을 
	가지는 경우를 제외하고 마운트(2)시스템 호출은 "nosuid" 및 
	"restrict" 옵션을 강제하고autofs 마운트 지점에 대해서만 후자를 
	강제합니다.권한에 관계없이 비전역 영역에서 실행되는 
	프로세스는said 영역 내에서 수행되는 마운트만 제어합니다.전역 
	영역 외부에서는 "nodevices" 옵션이 항상 강제됩니다.

sys_net_config
	프로세스가 시스템의 네트워크 인터페이스 및 경로 지정을 구성할 수 
	있도록 합니다.프로세스가 ndd를 사용하여 네트워크 매개변수를 
	구성할 수 있도록 합니다.프로세스가 ndd를 사용하여 다른 방법으로 
	제한된 정보에 액세스할 수 있도록 합니다.프로세스가 rpcmod 
	STREAMs 모듈을 푸시할 수 있도록 합니다.프로세스가 앵커된 STREAMs 
	모듈을 팝할 수 있도록 합니다.프로세스가 모듈 스택 상단 외 위치의 
	스트림 모듈을삽입/제거할 수 있도록 합니다.프로세스가 IPsec를 
	구성할 수 있도록 합니다.

sys_nfs
	프로세스가 Sun 전용 NFS 특정 시스템 호출을 수행할 수 있도록 
	합니다.프로세스가 NFS에 의해 예약된 포트에 바인드할 수 있도록 
	합니다: 포트 2049 (nfs)및 포트 4045 (lockd).

sys_res_config
	프로세스가 프로세서 집합을 작성 및 삭제하고 프로세서 집합에CPU를 
	할당하고 PSET_NOESCAPE 특성을 대체할 수 있도록 합니다.프로세스가 
	p_online(2)을 사용하는 시스템에서 CPU의 작동상태를 변경할 수 
	있도록 합니다.프로세스가 자원 풀을 구성하고 프로세스를 풀에 
	바인드할 수있도록 합니다.

sys_resource
	프로세스가 setrlimit(2) 및 setrctl(2)이 지정한 자원한계를 제한 
	없이 수정할 수 있도록 합니다.프로세스가 사용자당 최대 프로세스 
	수를 초과할 수있도록 합니다.프로세스가 최소 사용 가능 공간 
	이하가 예약된 파일 시스템에서파일을 확장 및 작성할 수 있도록 
	합니다.

sys_suser_compat
	프로세스가 허용된 액세스를 점검하기 위해 커널 suser() 함수를 
	호출하는타업체 로드 가능 모듈을 성공적으로 호출할 수 있도록 
	합니다.이 권한은 타업체 로드 가능 모듈 호환성을 위해서만존재하며 
	Solaris에 의해 제대로 사용되지 않습니다.

sys_time
	프로세스가 다음과 같은 적절한 시스템 호출 중 하나를 사용하여 
	시스템시간을 조작할 수 있도록 합니다. 즉, stime, adjtime, 
	ntp_adjtime및 IA 특정 RTC 호출을 사용합니다.

