#! /bin/sh
	
# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
# ident "$Revision: 1.5 $  SMI"
#

# Cacaoadm usage
CACAO_HLP_COMMAND_HEAD_1="Usage: cacaoadm [options] subcommand [options and arguments]"
CACAO_HLP_COMMAND_HEAD_2="\nAdminister the common agent container."
CACAO_HLP_COMMAND_HEAD_3="\nThe accepted command options are:"
CACAO_HLP_HELP_________1="\n -?, --help       Display this help list."
CACAO_HLP_VERSION______1=" -V, --version    Display which version of the common agent container"
CACAO_HLP_VERSION______2="                  you are using."
CACAO_HLP_COMMAND_HEAD_4="\nThe accepted values for subcommand are:"
CACAO_HLP_CMD__DISABLE_1="\n disable          Disable the automatic start or stop of the common agent"
CACAO_HLP_CMD__DISABLE_2="                  container daemon during system boot or shutdown."
CACAO_HLP_CMD___ENABLE_1=" enable           Enable the common agent container daemon to startup"
CACAO_HLP_CMD___ENABLE_2="                  automatically during subsequent system boots and"
CACAO_HLP_CMD___ENABLE_3="                  to stop gracefully during system shutdown."
CACAO_HLP_CMD__RESTART_1=" restart          Stop and subsequently start the common agent container daemon."
CACAO_HLP_CMD____START_1=" start            Start the common agent container daemon."
CACAO_HLP_CMD_____STOP_1=" stop             Stop the common agent container daemon."
CACAO_HLP_CMD___STATUS_1=" status           Display the common agent container daemon status."
CACAO_HLP_CMD_GETPARAM_1=" get-param        Display a parameter value."
CACAO_HLP_CMD_SETPARAM_1=" set-param        Set a parameter value."
CACAO_HLP_CMD_LSTPARAM_1=" list-params      Display the list of parameters."
CACAO_HLP_CMD_LSTMODUL_1=" list-modules     Display the list of all modules deployed."
CACAO_HLP_CMD_UNDEPLOY_1=" undeploy         Undeploy a module."
CACAO_HLP_CMD_____LOCK_1=" lock             Lock a module."
CACAO_HLP_CMD___UNLOCK_1=" unlock           Unlock a module."
CACAO_HLP_CMD___DEPLOY_1=" deploy           Deploy a module."
CACAO_HLP_CMD_GETFILTR_1=" get-filter       Get the value associated with a filter."
CACAO_HLP_CMD_SETFILTR_1=" set-filter       Set a run-time filter level."
CACAO_HLP_CMD_LSTFILTR_1=" list-filters     Display the list of all available filters along with their"
CACAO_HLP_CMD_LSTFILTR_2="                  levels."
CACAO_HLP_CMD_CREATKEY_1=" create-keys      Generate keys for the common agent container."
CACAO_HLP_CMD_LSTINSTA_1=" list-instances   Display the list of all created and not removed instances."
CACAO_HLP_CMD_CR_INSTA_1=" create-instance  Create a new instance of the common agent container."
CACAO_HLP_CMD_DELINSTA_1=" delete-instance  Delete a common agent container instance."
CACAO_HLP_CMD_SHOWTCER_1=" show-trusted-cert "
CACAO_HLP_CMD_SHOWTCER_2="                  Display a trusted certificate."
CACAO_HLP_CMD_ADD_TCER_1=" add-trusted-cert "
CACAO_HLP_CMD_ADD_TCER_2="                  Add a trusted certificate."
CACAO_HLP_CMD_LST_TCER_1=" list-trusted-certs "
CACAO_HLP_CMD_LST_TCER_2="                  Display the list of all trusted certificates."
CACAO_HLP_CMD_SHOWCERC_1=" show-cert-chain  Display the common agent container certificate chain."
CACAO_HLP_CMD_REGMODUL_1=" register-module  Register a module so that the module starts the next"
CACAO_HLP_CMD_REGMODUL_2="                  time the common agent container's management daemon starts."
CACAO_HLP_CMD_UNRMODUL_1=" unregister-module "
CACAO_HLP_CMD_UNRMODUL_2="                  Unregister a module so that the module does not start the"
CACAO_HLP_CMD_UNRMODUL_3="                  next time the common agent container's management daemon"
CACAO_HLP_CMD_UNRMODUL_4="                  starts."
CACAO_HLP_CMD_VERICONF_1=" verify-configuration "
CACAO_HLP_CMD_VERICONF_2="                  Check the validity of the common agent container"
CACAO_HLP_CMD_VERICONF_3="                  configuration."
CACAO_HLP_CMD_RBLDCONF_1=" rebuild-dependencies  "
CACAO_HLP_CMD_RBLDCONF_2="                  Redetect all dependencies."
CACAO_HLP_CMD_PREPUNIN_1=" prepare-uninstall "
CACAO_HLP_CMD_PREPUNIN_2="                  Stop all the running instances and remove their startup"
CACAO_HLP_CMD_PREPUNIN_3="                  resources. To be used just before uninstalling Cacao."
CACAO_HLP_COMMAND_FOOT_1="\nEach subcommand has its specific options and arguments. Specify --help after"
CACAO_HLP_COMMAND_FOOT_2="the subcommand name to display its usage."
CACAO_HLP_MAN__________1="\nFor more information, see cacaoadm man page"
CACAO_HLP_OPT_INSTANCE_1=" -i <instance>, --instance <instance>"
CACAO_HLP_OPT_INSTANCE_2="                  the name of the common agent container instance to use."
CACAO_HLP_OPT_PERSISTE_1=" -p, --persistent Only display the list of persistent filter levels."
CACAO_HLP_OPT_JMXURL___1=" -u <url>, --url <url>"
CACAO_HLP_OPT_JMXURL___2="                  The JMX service url to connect to a remote daemon."
CACAO_HLP_OPT_CNT______1=" -c <env>, --connection-env <env>"
CACAO_HLP_OPT_CNT______2="                  Add this option to specify the connection paramaters."
CACAO_HLP_MODULE___ARG_1=" <module>         The module name."
CACAO_HLP_ALIAS_CT_ARG_1=" <alias>          The alias name of the certificate."
CACAO_HLP_XML_DD___ARG_1=" <file>           The path of the XML descriptor describing the module."
CACAO_HLP_XML_DD___ARG_2=" <file>           The filename of the XML descriptor describing the module."
CACAO_HLP_DISABLE__HEAD1="Usage: cacaoadm disable -? | --help"
CACAO_HLP_DISABLE__HEAD2="   or: cacaoadm disable [-i <instance> | --instance <instance>]"
CACAO_HLP_DISABLE__HEAD3="\nDisable automatic start or stop during system boot or shutdown."
CACAO_HLP_ENABLE___HEAD1="Usage: cacaoadm enable -? | --help"
CACAO_HLP_ENABLE___HEAD2="   or: cacaoadm enable [-i <instance> | --instance <instance>]"
CACAO_HLP_ENABLE___HEAD3="\nEnable the common agent container daemon to startup automatically during"
CACAO_HLP_ENABLE___HEAD4="subsequent system boots and to stop gracefully during system shutdown."
CACAO_HLP_RESTART__HEAD1="Usage: cacaoadm restart -? | --help"
CACAO_HLP_RESTART__HEAD2="   or: cacaoadm restart [-i <instance> | --instance <instance>]"
CACAO_HLP_RESTART__HEAD3="\nStop and subsequently start the common agent container daemon."
CACAO_HLP_START____HEAD1="Usage: cacaoadm start -? | --help"
CACAO_HLP_START____HEAD2="   or: cacaoadm start [-i <instance> | --instance <instance>]"
CACAO_HLP_START____HEAD3="\nStart the common agent container daemon."
CACAO_HLP_STOP_____HEAD1="Usage: cacaoadm stop -? | --help"
CACAO_HLP_STOP_____HEAD2="   or: cacaoadm stop [-i <instance> | --instance <instance>] [-f | --force]"
CACAO_HLP_STOP_____HEAD3="\nStop the common agent container daemon."
CACAO_HLP_STOP_____HEAD4="A clean stop that locks all deployed modules and then undeploys them."
CACAO_HLP_STOP___OPT_F_1=" -f, --force      Forced stop, in which modules are not undeployed."
CACAO_HLP_STATUS___HEAD1="Usage: cacaoadm status -? | --help"
CACAO_HLP_STATUS___HEAD2="   or: cacaoadm status [-i <instance> | --instance <instance>] [<module>]"
CACAO_HLP_STATUS___HEAD3="\nDisplay the common agent container daemon status."
CACAO_HLP_STATUS___HEAD4="Without specifying a module name, display daemon status including"
CACAO_HLP_STATUS___HEAD5="whether it is enabled or disabled, the process numbers, and uptime."
CACAO_HLP_STATUS___HEAD6="With a module name, display only the status of the module."
CACAO_HLP_GETPARAM_HEAD1="Usage: cacaoadm get-param -? | --help"
CACAO_HLP_GETPARAM_HEAD2="   or: cacaoadm get-param [-i <instance> | --instance <instance>]"
CACAO_HLP_GETPARAM_HEAD3="                          [-v | --value] <parameter>"
CACAO_HLP_GETPARAM_HEAD4="\nDisplay a parameter name value alongside its associated value."
CACAO_HLP_GETPARAM_OPT_1=" -v, --value      Display only the parameter value."
CACAO_HLP_GETPARAM_ARG_1=" <parameter>      The parameter name."
CACAO_HLP_SETPARAM_HEAD1="Usage: cacaoadm set-param -? | --help"
CACAO_HLP_SETPARAM_HEAD2="   or: cacaoadm set-param [-i <instance> | --instance <instance>]"
CACAO_HLP_SETPARAM_HEAD3="                          <parameter>=<value>"
CACAO_HLP_SETPARAM_HEAD4="\nSet a parameter value."
CACAO_HLP_SETPARAM_ARG_1=" <parameter>=<value>"
CACAO_HLP_SETPARAM_ARG_2="                  The parameter name and the value to set."
CACAO_HLP_LSTPARAM_HEAD1="Usage: cacaoadm list-params -? | --help"
CACAO_HLP_LSTPARAM_HEAD2="   or: cacaoadm list-params [-i <instance> | --instance <instance>]"
CACAO_HLP_LSTPARAM_HEAD3="                            [-d | --description]"
CACAO_HLP_LSTPARAM_HEAD4="\nDisplay the list of parameters and their associated values."
CACAO_HLP_LSTPARAM_OPT_1=" -d, --description"
CACAO_HLP_LSTPARAM_OPT_2="                  Display the list of parameters and a description of each"
CACAO_HLP_LSTPARAM_OPT_3="                  parameter."
CACAO_HLP_LSTMODUL_HEAD1="Usage: cacaoadm list-modules -? | --help"
CACAO_HLP_LSTMODUL_HEAD2="   or: cacaoadm list-modules [-i <instance> | --instance <instance>]"
CACAO_HLP_LSTMODUL_HEAD3="                             [-r | --registered]"
CACAO_HLP_LSTMODUL_HEAD4="\nDisplay the list of all modules deployed."
CACAO_HLP_LSTMODUL_OPT_1=" -r, --registered Display the list of all modules registered."
CACAO_HLP_UNDEPLOY_HEAD1="Usage: cacaoadm undeploy -? | --help"
CACAO_HLP_UNDEPLOY_HEAD2="   or: cacaoadm undeploy [-i <instance> | --instance <instance>] <module>"
CACAO_HLP_UNDEPLOY_HEAD3="\nUndeploy a module."
CACAO_HLP_LOCK_____HEAD1="Usage: cacaoadm lock -? | --help"
CACAO_HLP_LOCK_____HEAD2="   or: cacaoadm lock [-i <instance> | --instance <instance>] <module>"
CACAO_HLP_LOCK_____HEAD3="\nLock a module."
CACAO_HLP_UNLOCK___HEAD1="Usage: cacaoadm unlock -? | --help"
CACAO_HLP_UNLOCK___HEAD2="   or: cacaoadm unlock [-i <instance> | --instance <instance>] <module>"
CACAO_HLP_UNLOCK___HEAD3="\nUnlock a module."
CACAO_HLP_DEPLOY___HEAD1="Usage: cacaoadm deploy -? | --help"
CACAO_HLP_DEPLOY___HEAD2="   or: cacaoadm deploy [-i <instance> | --instance <instance>] <file>"
CACAO_HLP_DEPLOY___HEAD3="\nDeploy a module."
CACAO_HLP_GETFILTR_HEAD1="Usage: cacaoadm get-filter -? | --help"
CACAO_HLP_GETFILTR_HEAD2="   or: cacaoadm get-filter [-p | --persistent] [-i <instance> | --instance <instance>]"
CACAO_HLP_GETFILTR_HEAD3="                           [-v | --value] <filter>"
CACAO_HLP_GETFILTR_HEAD4="\nDisplay a filter name and its associated value."
CACAO_HLP_GETFILTR_OPT_1=" -v, --value      Display only the associated value."
CACAO_HLP_GETFILTR_ARG_1=" <filter>         The filter name."
CACAO_HLP_SETFILTR_HEAD1="Usage: cacaoadm set-filter -? | --help"
CACAO_HLP_SETFILTR_HEAD2="   or: cacaoadm set-filter [-p | --persistent] [-i <instance> | --instance <instance>]"
CACAO_HLP_SETFILTR_HEAD3="                           <filter>=<level>"
CACAO_HLP_SETFILTR_HEAD4="\nSet a filter level."
CACAO_HLP_SETFILTR_ARG_1=" <filter>=<level> The filter name and the level to set."
CACAO_HLP_LSTFILTR_HEAD1="Usage: cacaoadm list-filters -? | --help"
CACAO_HLP_LSTFILTR_HEAD2="   or: cacaoadm list-filters [-p | --persistent]  [-i <instance> | --instance <instance>]"
CACAO_HLP_LSTFILTR_HEAD3="                             [-l | --levels]"
CACAO_HLP_LSTFILTR_HEAD4="\nDisplay the list of all available filters along with their levels."
CACAO_HLP_LSTFILTR_OPT_1=" [-l, --levels]   Display the full list of all available filter levels."
CACAO_HLP_CREATKEY_HEAD1="Usage: cacaoadm create-keys [-? | --help]"
CACAO_HLP_CREATKEY_HEAD2="   or: cacaoadm create-keys [-i <instance> | --instance <instance>]"
CACAO_HLP_CREATKEY_HEAD3="                            [-d <directory> | --directory <directory>]."
CACAO_HLP_CREATKEY_HEAD4="                            [-f | --force] [-n | --nonss]"
CACAO_HLP_CREATKEY_HEAD5="\nGenerates keys for the common agent container. With no options, the keys are"
CACAO_HLP_CREATKEY_HEAD6="created, if they have not been generated already."
CACAO_HLP_CREATKEY_O_D_1=" -d <directory>, --directory <directory>"
CACAO_HLP_CREATKEY_O_D_2="                  Generate keys under the specified directory."
CACAO_HLP_CREATKEY_O_F_1=" -f, --force      Create keys even if they have been generated already."
CACAO_HLP_CREATKEY_O_N_1=" -n, --nonss      Do not use NSS."
CACAO_HLP_LSTINSTA_HEAD1="Usage: cacaoadm list-instances -? | --help"
CACAO_HLP_LSTINSTA_HEAD2="   or: cacaoadm list-instances"
CACAO_HLP_LSTINSTA_HEAD3="\nDisplay the list of all common agent container instances."
CACAO_HLP_CR_INSTA_HEAD1="Usage: cacaoadm create-instance -? | --help"
CACAO_HLP_CR_INSTA_HEAD2="   or: cacaoadm create-instance [-e | --embedded] <instance>"
CACAO_HLP_CR_INSTA_HEAD3="\nCreate a common agent container instance."
CACAO_HLP_CR_INSTA_OPT_1=" [-e, --embedded] Create an embedded common agent container instance."
CACAO_HLP_CR_INSTA_ARG_1=" <instance>       The instance name."
CACAO_HLP_DELINSTA_HEAD1="Usage: cacaoadm delete-instance -? | --help"
CACAO_HLP_DELINSTA_HEAD2="   or: cacaoadm delete-instance -i <instance> | --instance <instance>"
CACAO_HLP_DELINSTA_HEAD3="\nDelete a common agent container instance."
CACAO_HLP_DELINSTA_ARG_1=" -i <instance>, --instance <instance>"
CACAO_HLP_DELINSTA_ARG_2="                  The instance name."
CACAO_HLP_SHOWTCER_HEAD1="Usage: cacaoadm show-trusted-cert -? | --help"
CACAO_HLP_SHOWTCER_HEAD2="   or: cacaoadm show-trusted-cert [-i <instance> | --instance <instance> |"
CACAO_HLP_SHOWTCER_HEAD3="                                  -u <url> [-c <env> | --connection-env <env>]"
CACAO_HLP_SHOWTCER_HEAD4="                                  | --url <url> [-c <env> | --connection-env"
CACAO_HLP_SHOWTCER_HEAD5="                                  <env>]] [-v | --verbose] <alias>"
CACAO_HLP_SHOWTCER_HEAD6="   or: cacaoadm show-trusted-cert [-i <instance> | --instance <instance> |"
CACAO_HLP_SHOWTCER_HEAD7="                                  <env>]] [-f <file> | --file <file>] <alias>"
CACAO_HLP_SHOWTCER_HEAD8="\nDisplay a trusted certificate. When --verbose is omitted, the command prints"
CACAO_HLP_SHOWTCER_HEAD9="the requested certificate in PKCS#10 format."
CACAO_HLP_SHOWTCER_O_V_1=" -v, --verbose    Display readable details about the certificate entry."
CACAO_HLP_SHOWTCER_O_F_1=" -f <file>, --file <file>"
CACAO_HLP_SHOWTCER_O_F_2="                  The file where the certificate is put instead of stdout."
CACAO_HLP_SHOWTCER_ARG_1=" <alias>          The alias name of the certificate."
CACAO_HLP_ADD_TCER_HEAD1="Usage: cacaoadm add-trusted-cert -? | --help"
CACAO_HLP_ADD_TCER_HEAD2="   or: cacaoadm add-trusted-cert [-i <instance> | --instance <instance> |"
CACAO_HLP_ADD_TCER_HEAD3="                                 -u <url> [-c <env> | --connection-env <env>] |"
CACAO_HLP_ADD_TCER_HEAD4="                                 --url <url> [-c <env> | --connection-env <env>"
CACAO_HLP_ADD_TCER_HEAD5="                                 ]] [-f <file> | --file <file>] <alias>"
CACAO_HLP_ADD_TCER_HEAD6="\nAdd a trusted certificate. You must have root access to execute it."
CACAO_HLP_ADD_TCER_O_F_1=" -f <file>, --file <file>"
CACAO_HLP_ADD_TCER_O_F_2="                  The file from which the certificate is read and added."
CACAO_HLP_ADD_TCER_O_F_3="                  If omitted then stdin is used." 
CACAO_HLP_LST_TCER_HEAD1="Usage: cacaoadm list-trusted-certs -? | --help"
CACAO_HLP_LST_TCER_HEAD2="   or: cacaoadm list-trusted-certs [-i <instance> | --instance <instance> |"
CACAO_HLP_LST_TCER_HEAD3="                                   -u <url> [-c <env> | --connection-env <env>]"
CACAO_HLP_LST_TCER_HEAD4="                                   | --url <url> [-c <env> | --connection-env"
CACAO_HLP_LST_TCER_HEAD5="                                   <env>]] [-v | --verbose]"
CACAO_HLP_LST_TCER_HEAD6="\nDisplay the list of the aliases of all trusted certificates."
CACAO_HLP_LST_TCER_OPT_1=" -v, --verbose    Display every detail known about each certificate entry."
CACAO_HLP_SHOWCERC_HEAD1="Usage: cacaoadm show-cert-chain -? | --help"
CACAO_HLP_SHOWCERC_HEAD2="   or: cacaoadm show-cert-chain [-i <instance> | --instance <instance> |"
CACAO_HLP_SHOWCERC_HEAD3="                                -u <url> [-c <env> | --connection-env <env>] |"
CACAO_HLP_SHOWCERC_HEAD4="                                --url <url> [-c <env> | --connection-env <env>]"
CACAO_HLP_SHOWCERC_HEAD5="                                ] [-d <directory> | --directory <directory>]"
CACAO_HLP_SHOWCERC_HEAD6="\nDisplay the common agent container certificate chain."
CACAO_HLP_SHOWCERC_OPT_1=" -d <directory>, --directory <directory>"
CACAO_HLP_SHOWCERC_OPT_2="                  The directory where each certificate of the chain is stored into"
CACAO_HLP_SHOWCERC_OPT_3="                  a pkcs7 file format. The daemon certificate is stored in"
CACAO_HLP_SHOWCERC_OPT_4="                  certificate0 and root CA in the last file. If omitted, the"
CACAO_HLP_SHOWCERC_OPT_5="                  chain is  directed to stdout."
CACAO_HLP_REGMODUL_HEAD1="Usage: cacaoadm register-module -? | --help"
CACAO_HLP_REGMODUL_HEAD2="   or: cacaoadm register-module [-i <instance> | --instance <instance>] <file>"
CACAO_HLP_REGMODUL_HEAD3="\nRegister a module."
CACAO_HLP_UNRMODUL_HEAD1="Usage: cacaoadm unregister-module -? | --help"
CACAO_HLP_UNRMODUL_HEAD2="   or: cacaoadm unregister-module [-i <instance> | --instance <instance>]"
CACAO_HLP_UNRMODUL_HEAD3="                                <file>"
CACAO_HLP_UNRMODUL_HEAD4="\nUnregister a module."
CACAO_HLP_VERICONF_HEAD1="Usage: cacaoadm verify-configuration -? | --help"
CACAO_HLP_VERICONF_HEAD2="   or: cacaoadm verify-configuration [-i <instance> | --instance <instance>]"
CACAO_HLP_VERICONF_HEAD3="\nVerify the common agent container configuration."
CACAO_HLP_RBLDCONF_HEAD1="Usage: cacaoadm rebuild-dependencies -? | --help"
CACAO_HLP_RBLDCONF_HEAD2="   or: cacaoadm rebuild-dependencies [-i <instance> | --instance <instance>]"
CACAO_HLP_RBLDCONF_HEAD3="\nRedetect all dependencies."
CACAO_HLP_PREPUNIN_HEAD1="Usage: cacaoadm prepare-uninstall -? | --help"
CACAO_HLP_PREPUNIN_HEAD2="\nStop all the running instances and remove their startup resources."
CACAO_HLP_PREPUNIN_HEAD3="To be used just before uninstalling Cacao."

CACAO_HLP_CATALOG_ALREADY_SOURCED="dummy"
