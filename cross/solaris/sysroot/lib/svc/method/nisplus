#!/sbin/sh
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident	"@(#)nisplus	1.53	04/11/16 SMI"

. /lib/svc/share/smf_include.sh

cachemgr=0
if [ -f /var/nis/NIS_COLD_START ]; then
	cache=`/usr/bin/svcprop -p application_ovr/clear_cache $SMF_FMRI \
	    2>/dev/null`
	if [ $? != 0 ]; then
		cache=`/usr/bin/svcprop -p application/clear_cache $SMF_FMRI \
		    2>/dev/null`
	fi

	[ "$cache" = "true" ] && cachemgr_flags="$cachemgr_flags -i"

	/usr/sbin/nis_cachemgr $cachemgr_flags || exit $?
	cachemgr=1
fi

[ -z "$_INIT_UTS_NODENAME" ] && \
    _INIT_UTS_NODENAME=`/usr/bin/uname -n`

hostname=`echo "$_INIT_UTS_NODENAME" | /usr/bin/cut -d. -f1 | \
    /usr/bin/tr '[A-Z]' '[a-z]'`

nisd=0
if [ -d /var/nis/data -o -d /var/nis/$hostname ]; then
	emulate=`/usr/bin/svcprop -p application/emulate_yp $SMF_FMRI \
	  2>/dev/null`
	[ $? = 0 ] && [ "$emulate" = "true" ] && nisd_flags="$nisd_flags -Y"

	security=`/usr/bin/svcprop -p application/security $SMF_FMRI \
	  2>/dev/null`
	[ $? = 0 ] && nisd_flags="$nisd_flags -S $security"

	/usr/sbin/rpc.nisd $nisd_flags || exit $?
	nisd=1

	# We always start the NIS+ Password Update Daemon.  If it
	# finds the NIS+ server is not a Master it will just exit.
	# It also determines if the server is running in NIS (YP)
	# compat mode and automatically registers a yppasswdd so
	# NIS (YP) clients can change their passwords.

	/usr/sbin/rpc.nispasswdd || exit $?
fi

if [ "$cachemgr" = 0 -a "$nisd" = 0 ]; then
	# If we're neither able to be a client or a server, then
	# we are misconfigured.
	exit $SMF_EXIT_ERR_CONFIG
fi

exit $SMF_EXIT_OK
